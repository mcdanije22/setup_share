# upstream client {
#     server client:3000;
# }

# upstream api {
#     server server:5000;
# }

# server {
#     listen 80;

#     location / {
#         proxy_pass http://client;
#     }

#     location /sockjs-node {
#         proxy_pass http://client;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "Upgrade";
#     }

#     location /server {
#         rewrite /server/(.*) /$1 break;
#         proxy_pass http://server;
#     }
# }

upstream client {
    server client:3000;
}

upstream server {
    server server:5000;
}

server {
        listen 80 default_server;

        server_name _;

        return 301 https://$host$request_uri;
    }

server {
 
        listen 443 ssl http2;
        # use the certificates
        ssl_certificate     /etc/letsencrypt/live/mysetupshare.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/mysetupshare.com/privkey.pem;
        server_name mysetupshare.com www.mysetupshare.com;

        location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    

    #   return 301 https://yourdomain.com$request_uri;

    # listen 443 ssl; # managed by Certbot
    # ssl_certificate /etc/letsencrypt/live/mysetupshare.com/fullchain.pem; # managed by Certbot
    # ssl_certificate_key /etc/letsencrypt/live/mysetupshare.com/privkey.pem; # managed by Certbot
    # include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

#  server_name _;

  server_tokens off;

  gzip on;
  gzip_proxied any;
  gzip_comp_level 4;
  gzip_types text/css application/javascript image/svg+xml;

  proxy_http_version 1.1;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection 'upgrade';
  proxy_set_header Host $host;
  proxy_cache_bypass $http_upgrade;

#   location ../client/_next/static {
#     proxy_cache STATIC;
#     proxy_pass http://client;

#     # For testing cache - remove before deploying to production
#     add_header X-Cache-Status $upstream_cache_status;
#   }

#   location /static {
#     proxy_cache STATIC;
#     proxy_ignore_headers Cache-Control;
#     proxy_cache_valid 60m;
#     proxy_pass http://client;

#     # For testing cache - remove before deploying to production
#     add_header X-Cache-Status $upstream_cache_status;
#   }

  location / {
    proxy_pass http://client;
  }

    location /server {
        rewrite /server/(.*) /$1 break;
        proxy_pass http://server;
    }
}