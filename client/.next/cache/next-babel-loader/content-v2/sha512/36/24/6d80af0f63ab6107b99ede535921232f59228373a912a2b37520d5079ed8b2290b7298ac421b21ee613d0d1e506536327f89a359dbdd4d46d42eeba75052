{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/setup/[id].tsx\";\n//import React, { useEffect, useState } from \"react\";\n//import Layout from \"../../components/Layout/Layout\";\n//import { v4 as uuidv4 } from \"uuid\";\n//import axios from \"axios\";\n//import {\n//  Row,\n//  Col,\n//  Form,\n//  Input,\n//  Button,\n//  Checkbox,\n//  PageHeader,\n//  Typography,\n//  Avatar,\n//  Space,\n//} from \"antd\";\n//import { GetServerSideProps } from \"next\";\n//import ImageMapper from \"react-image-mapper\";\n//import { Carousel, Tabs, Divider } from \"antd\";\n//import {\n//  UserOutlined,\n//  HeartTwoTone,\n//  EyeOutlined,\n//  LeftOutlined,\n//  RightOutlined,\n//} from \"@ant-design/icons\";\n//import styles from \"./setupPage.module.scss\";\n//import ImageOneMapContainer from \"../../components/imageMapContainers/ImageOneMapContainer\";\n//import ImageTwoMapContainer from \"../../components/imageMapContainers/ImageTwoMapContainer\";\n//import ImageThreeMapContainer from \"../../components/imageMapContainers/ImageThreeMapContainer\";\n//const { Link, Title } = Typography;\n//const { TabPane } = Tabs;\n//interface Props {\n//  getSetUpInfo: Array<any>;\n//}\n//export default function SetupPage(props: Props) {\n//  const [currentImageView, setImageView] = useState<string>(\"Main\");\n//  const [currentImageObject, setImageObject] = useState<object>({});\n//  const [currentImageItems, setImageItems] = useState([]);\n//  const [isActive, setActiveStatus] = useState(false);\n//  const [imageAreas, setImageAreas] = useState([]);\n//  const { getSetUpInfo, getImageItems } = props;\n//  const [fillColor, setFillColor] = useState(\"\");\n//  useEffect(() => {\n//    console.log(props);\n//    if (getSetUpInfo.length > 1) {\n//      carouselRef.current.goTo(1, true);\n//    }\n//  }, []);\n//  useEffect(() => {\n//    setDataPageInfo();\n//    resetCurrentImageAreas();\n//  }, [currentImageView]);\n//  useEffect(() => {\n//    setDataPageInfo();\n//    createCurrentImageAreasList();\n//  }, [currentImageObject]);\n//  const setDataPageInfo = async () => {\n//    const filteredImageObject = getSetUpInfo.filter((imageObject, i) => {\n//      return imageObject.image_position === currentImageView;\n//    });\n//    setImageObject(filteredImageObject[0]);\n//    //shouldn't need this logic but items dont show without it\n//    const currentItems = await getImageItems.filter((item, i) => {\n//      return item.image_id === filteredImageObject[0].image_id;\n//    });\n//    setImageItems(currentItems);\n//  };\n//  const createCurrentImageAreasList = async () => {\n//    const createMapAreas = await getImageItems.map((item, i) => {\n//      let currentList = imageAreas;\n//      if (item.image_id === currentImageObject.image_id) {\n//        const addToAreaList = currentList.push(createArea(item));\n//        console.log(\"test\", imageAreas);\n//      }\n//      setImageAreas(currentList);\n//    });\n//  };\n//  const createArea = (item) => {\n//    return {\n//      id: item.item_id,\n//      name: item.item_name,\n//      shape: \"poly\",\n//      coords: [...item.coords_list],\n//      href: item.item_url,\n//      preFillColor: \"transparent\",\n//    };\n//  };\n//  const resetCurrentImageAreas = () => {\n//    MAP.areas = [];\n//    setImageAreas([]);\n//  };\n//  let MAP = {\n//    name: uuidv4(),\n//    areas: [...imageAreas],\n//  };\n//  let MAP2 = {\n//    name: uuidv4(),\n//    areas: [...imageAreas],\n//  };\n//  function onChange(a) {\n//    setImageView(getSetUpInfo[a].image_position);\n//  }\n//  function callback(key) {\n//    console.log(key);\n//  }\n//  const carouselRef = React.createRef();\n//  console.log(currentImageObject);\n//  return (\n//    <Layout\n//      title={`${getSetUpInfo[0].username}'s ${getSetUpInfo[0].setup_title} setup`}\n//    >\n//      <div id={styles.setupPageContainer}>\n//        <div>\n//          <Row justify=\"center\">\n//            <Col span={24}>\n//              <Title level={1} style={{ textAlign: \"center\" }}>\n//                {getSetUpInfo[0].setup_title}\n//              </Title>\n//            </Col>\n//          </Row>\n//          <Row justify=\"center\">\n//            <Col span={22}>\n//              <PageHeader\n//                title={`${getSetUpInfo[0].username}`}\n//                extra={<HeartTwoTone twoToneColor=\"#eb2f96\" />}\n//                avatar={{\n//                  src: \"https://avatars1.githubusercontent.com/u/8186664?s=460&v=4\",\n//                }}\n//              />\n//            </Col>\n//          </Row>\n//          <Row>\n//            <Col span={24} style={{ display: \"\" }}>\n//              <ImageOneMapContainer\n//                name={getSetUpInfo[0].image_id}\n//                area={imageAreas}\n//              />\n//            </Col>\n//            <Col span={24} style={{ display: \"none\" }}>\n//              <ImageTwoMapContainer\n//                name={getSetUpInfo[1].image_id}\n//                area={imageAreas}\n//              />\n//            </Col>\n//            <Col span={24} style={{ display: \"none\" }}>\n//              <ImageThreeMapContainer name={\"test\"} area={imageAreas} />\n//            </Col>\n//          </Row>\n//          <Row justify=\"center\" style={{ padding: \".5rem 0\" }}>\n//            <Col span={22}>\n//              <Row justify=\"space-between\" style={{ alignItems: \"center\" }}>\n//                <Col>\n//                  <LeftOutlined />\n//                </Col>\n//                <Col>\n//                  <Title level={3} style={{ margin: \"0\" }}>\n//                    {currentImageObject.image_position}\n//                  </Title>\n//                </Col>\n//                <Col>\n//                  <RightOutlined />\n//                </Col>\n//              </Row>\n//            </Col>\n//          </Row>\n//          <Row justify=\"center\">\n//            <Col span={24}>\n//              <Carousel afterChange={onChange} ref={carouselRef}>\n//                {getSetUpInfo\n//                  .sort((a, b) =>\n//                    a.image_position_number > b.image_position_number ? 1 : -1\n//                  )\n//                  .map((item, i) => {\n//                    return (\n//                      <div key={i}>\n//                        <ImageMapper\n//                          src={item.image_url}\n//                          map={MAP}\n//                          fillColor={\"red\"}\n//                          width={375}\n//                          height={350}\n//                          onMouseEnter={(area: any) => {\n//                            console.log(area);\n//                          }}\n//                          onImageClick={(e: any) => {\n//                            console.log(\"test\");\n//                          }}\n//                        />\n//                      </div>\n//                    );\n//                  })}\n//              </Carousel>\n//            </Col>\n//          </Row>\n//          <Row justify=\"center\">\n//            <Col span={24}>\n//              <Title\n//                level={3}\n//                style={{ textAlign: \"center\", marginTop: \"1rem\" }}\n//              >\n//                {currentImageObject.image_position}\n//              </Title>\n//            </Col>\n//          </Row>\n//          <Row>\n//            <Col span={24}>\n//              <Tabs defaultActiveKey=\"1\" onChange={callback}>\n//                <TabPane tab=\"Items\" key=\"1\">\n//                  {imageAreas.map((item, i) => {\n//                    return (\n//                      <div key={i}>\n//                        <Row justify=\"space-between\">\n//                          <Col key={i}>\n//                            {i + 1}.{\" \"}\n//                            <Link\n//                              href={`${item.href}`}\n//                              target=\"_blank\"\n//                              rel=\"noopener noreferrer\"\n//                            >\n//                              {item.name}\n//                            </Link>\n//                          </Col>\n//                          <EyeOutlined />\n//                        </Row>\n//                        {i !== imageAreas.length - 1 ? (\n//                          <Divider orientation=\"left\" />\n//                        ) : (\n//                          \"\"\n//                        )}\n//                      </div>\n//                    );\n//                  })}\n//                </TabPane>\n//                <TabPane tab=\"Description\" key=\"2\">\n//                  {getSetUpInfo[0].setup_description}\n//                </TabPane>\n//                <TabPane tab=\"Comments\" key=\"3\">\n//                  Content of Tab Pane 3\n//                </TabPane>\n//              </Tabs>\n//            </Col>\n//          </Row>\n//        </div>\n//      </div>\n//    </Layout>\n//  );\n//}\n//export const getServerSideProps: GetServerSideProps = async (context) => {\n//  const { id } = context.query;\n//  const response = await axios.get(`${process.env.BASE_API}/setup/${id}`);\n//  const setUpPageData = await response.data;\n//  return {\n//    props: setUpPageData,\n//  };\n//};\n//\n//\n//\nimport React, { useEffect, useState } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { Row, Col, PageHeader, Typography } from \"antd\";\nimport { Tabs, Divider } from \"antd\";\nimport { HeartTwoTone, EyeOutlined, LeftOutlined, RightOutlined } from \"@ant-design/icons\";\nimport styles from \"./setupPage.module.scss\";\nimport ImageMapContainer from \"../../components/imageMapContainer/ImageMapContainer\";\nconst {\n  Link,\n  Title,\n  Text\n} = Typography;\nconst {\n  TabPane\n} = Tabs;\nexport default function SetupPage(props) {\n  const {\n    0: currentImageView,\n    1: setImageView\n  } = useState(0);\n  const {\n    0: currentImageObject,\n    1: setImageObject\n  } = useState({});\n  const {\n    0: currentImageItems,\n    1: setImageItems\n  } = useState([]);\n  const {\n    0: isActive,\n    1: setActiveStatus\n  } = useState(false);\n  const {\n    0: imageAreas,\n    1: setImageAreas\n  } = useState([]);\n  const {\n    getSetUpInfo,\n    getImageItems\n  } = props;\n  const {\n    0: fillColor,\n    1: setFillColor\n  } = useState(\"\");\n  useEffect(() => {\n    console.log(props);\n\n    if (getSetUpInfo.length > 1) {\n      setImageView(1);\n    }\n  }, []);\n  useEffect(() => {\n    setDataPageInfo(); // resetCurrentImageAreas();\n  }, [currentImageView]);\n  useEffect(() => {\n    setDataPageInfo();\n    createCurrentImageAreasList();\n  }, [currentImageObject]);\n\n  const setDataPageInfo = async () => {\n    const filteredImageObject = getSetUpInfo.filter((imageObject, i) => {\n      return imageObject.image_position_number === currentImageView;\n    });\n    setImageObject(filteredImageObject[0]); //shouldn't need this logic but items dont show without it\n\n    const currentItems = await getImageItems.filter((item, i) => {\n      return item.image_id === filteredImageObject[0].image_id;\n    });\n    setImageItems(currentItems);\n  };\n\n  const createCurrentImageAreasList = async () => {\n    const createMapAreas = await getImageItems.map((item, i) => {\n      let currentList = imageAreas;\n\n      if (item.image_id === currentImageObject.image_id) {\n        const addToAreaList = currentList.push(createArea(item));\n        console.log(\"test\", imageAreas);\n      }\n\n      setImageAreas(currentList);\n    });\n  };\n\n  const createArea = item => {\n    return {\n      id: item.item_id,\n      name: item.item_name,\n      shape: \"poly\",\n      coords: [...item.coords_list],\n      href: item.item_url,\n      preFillColor: \"transparent\"\n    };\n  }; // const resetCurrentImageAreas = () => {\n  //   MAP.areas = [];\n  //   setImageAreas([]);\n  // };\n\n\n  function onChange(a) {\n    setImageView(getSetUpInfo[a].image_position);\n  }\n\n  function callback(key) {\n    console.log(key);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: `${getSetUpInfo[0].username}'s ${getSetUpInfo[0].setup_title} setup`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: styles.setupPageContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          justify: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: 24,\n            children: /*#__PURE__*/_jsxDEV(Title, {\n              level: 1,\n              style: {\n                textAlign: \"center\",\n                marginBottom: \"0\"\n              },\n              children: getSetUpInfo[0].setup_title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 24,\n            children: /*#__PURE__*/_jsxDEV(Title, {\n              level: 2,\n              type: \"secondary\",\n              style: {\n                textAlign: \"center\",\n                fontSize: \".8rem\"\n              },\n              children: getSetUpInfo[0].setup_type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          justify: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            span: 22,\n            children: /*#__PURE__*/_jsxDEV(PageHeader, {\n              title: `${getSetUpInfo[0].username}`,\n              extra: /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n                twoToneColor: \"#eb2f96\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 24\n              }, this),\n              avatar: {\n                src: \"https://avatars1.githubusercontent.com/u/8186664?s=460&v=4\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: getSetUpInfo.sort((a, b) => a.image_position_number > b.image_position_number ? 1 : -1).map((item, i) => {\n            return /*#__PURE__*/_jsxDEV(Col, {\n              span: 24,\n              style: {\n                display: item.image_position_number !== currentImageView ? \"none\" : \"\"\n              },\n              children: /*#__PURE__*/_jsxDEV(ImageMapContainer, {\n                src: item.image_url,\n                name: item.image_id,\n                area: imageAreas\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 21\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          justify: \"center\",\n          style: {\n            padding: \".5rem 0\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            span: 22,\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              justify: \"space-between\",\n              style: {\n                alignItems: \"center\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(LeftOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(Title, {\n                  level: 3,\n                  style: {\n                    margin: \"0\"\n                  },\n                  children: currentImageObject.image_position\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(RightOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            span: 24,\n            children: /*#__PURE__*/_jsxDEV(Tabs, {\n              defaultActiveKey: \"1\",\n              onChange: callback,\n              children: [/*#__PURE__*/_jsxDEV(TabPane, {\n                tab: \"Items\",\n                children: imageAreas.map((item, i) => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Row, {\n                      justify: \"space-between\",\n                      children: [/*#__PURE__*/_jsxDEV(Col, {\n                        children: [i + 1, \".\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n                          href: `${item.href}`,\n                          target: \"_blank\",\n                          rel: \"noopener noreferrer\",\n                          children: item.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 467,\n                          columnNumber: 29\n                        }, this)]\n                      }, i, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 465,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(EyeOutlined, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 475,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 464,\n                      columnNumber: 25\n                    }, this), i !== imageAreas.length - 1 ? /*#__PURE__*/_jsxDEV(Divider, {\n                      orientation: \"left\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 478,\n                      columnNumber: 27\n                    }, this) : \"\"]\n                  }, i, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 463,\n                    columnNumber: 23\n                  }, this);\n                })\n              }, \"1\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                tab: \"Description\",\n                children: getSetUpInfo[0].setup_description\n              }, \"2\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                tab: \"Comments\",\n                children: \"Content of Tab Pane 3\"\n              }, \"3\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 378,\n    columnNumber: 5\n  }, this);\n}\nexport const getServerSideProps = async context => {\n  const {\n    id\n  } = context.query;\n  const response = await axios.get(`${process.env.BASE_API}/setup/${id}`);\n  const setUpPageData = await response.data;\n  return {\n    props: setUpPageData\n  };\n};","map":{"version":3,"sources":["/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/setup/[id].tsx"],"names":["React","useEffect","useState","Layout","axios","Row","Col","PageHeader","Typography","Tabs","Divider","HeartTwoTone","EyeOutlined","LeftOutlined","RightOutlined","styles","ImageMapContainer","Link","Title","Text","TabPane","SetupPage","props","currentImageView","setImageView","currentImageObject","setImageObject","currentImageItems","setImageItems","isActive","setActiveStatus","imageAreas","setImageAreas","getSetUpInfo","getImageItems","fillColor","setFillColor","console","log","length","setDataPageInfo","createCurrentImageAreasList","filteredImageObject","filter","imageObject","i","image_position_number","currentItems","item","image_id","createMapAreas","map","currentList","addToAreaList","push","createArea","id","item_id","name","item_name","shape","coords","coords_list","href","item_url","preFillColor","onChange","a","image_position","callback","key","username","setup_title","setupPageContainer","textAlign","marginBottom","fontSize","setup_type","src","sort","b","display","image_url","padding","alignItems","margin","setup_description","getServerSideProps","context","query","response","get","process","env","BASE_API","setUpPageData","data"],"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","sourcesContent":["//import React, { useEffect, useState } from \"react\";\n//import Layout from \"../../components/Layout/Layout\";\n//import { v4 as uuidv4 } from \"uuid\";\n//import axios from \"axios\";\n//import {\n//  Row,\n//  Col,\n//  Form,\n//  Input,\n//  Button,\n//  Checkbox,\n//  PageHeader,\n//  Typography,\n//  Avatar,\n//  Space,\n//} from \"antd\";\n//import { GetServerSideProps } from \"next\";\n//import ImageMapper from \"react-image-mapper\";\n//import { Carousel, Tabs, Divider } from \"antd\";\n//import {\n//  UserOutlined,\n//  HeartTwoTone,\n//  EyeOutlined,\n//  LeftOutlined,\n//  RightOutlined,\n//} from \"@ant-design/icons\";\n//import styles from \"./setupPage.module.scss\";\n//import ImageOneMapContainer from \"../../components/imageMapContainers/ImageOneMapContainer\";\n//import ImageTwoMapContainer from \"../../components/imageMapContainers/ImageTwoMapContainer\";\n//import ImageThreeMapContainer from \"../../components/imageMapContainers/ImageThreeMapContainer\";\n\n//const { Link, Title } = Typography;\n//const { TabPane } = Tabs;\n\n//interface Props {\n//  getSetUpInfo: Array<any>;\n//}\n\n//export default function SetupPage(props: Props) {\n//  const [currentImageView, setImageView] = useState<string>(\"Main\");\n//  const [currentImageObject, setImageObject] = useState<object>({});\n//  const [currentImageItems, setImageItems] = useState([]);\n//  const [isActive, setActiveStatus] = useState(false);\n//  const [imageAreas, setImageAreas] = useState([]);\n//  const { getSetUpInfo, getImageItems } = props;\n//  const [fillColor, setFillColor] = useState(\"\");\n\n//  useEffect(() => {\n//    console.log(props);\n//    if (getSetUpInfo.length > 1) {\n//      carouselRef.current.goTo(1, true);\n//    }\n//  }, []);\n//  useEffect(() => {\n//    setDataPageInfo();\n//    resetCurrentImageAreas();\n//  }, [currentImageView]);\n\n//  useEffect(() => {\n//    setDataPageInfo();\n//    createCurrentImageAreasList();\n//  }, [currentImageObject]);\n\n//  const setDataPageInfo = async () => {\n//    const filteredImageObject = getSetUpInfo.filter((imageObject, i) => {\n//      return imageObject.image_position === currentImageView;\n//    });\n//    setImageObject(filteredImageObject[0]);\n//    //shouldn't need this logic but items dont show without it\n//    const currentItems = await getImageItems.filter((item, i) => {\n//      return item.image_id === filteredImageObject[0].image_id;\n//    });\n//    setImageItems(currentItems);\n//  };\n//  const createCurrentImageAreasList = async () => {\n//    const createMapAreas = await getImageItems.map((item, i) => {\n//      let currentList = imageAreas;\n//      if (item.image_id === currentImageObject.image_id) {\n//        const addToAreaList = currentList.push(createArea(item));\n//        console.log(\"test\", imageAreas);\n//      }\n//      setImageAreas(currentList);\n//    });\n//  };\n\n//  const createArea = (item) => {\n//    return {\n//      id: item.item_id,\n//      name: item.item_name,\n//      shape: \"poly\",\n//      coords: [...item.coords_list],\n//      href: item.item_url,\n//      preFillColor: \"transparent\",\n//    };\n//  };\n\n//  const resetCurrentImageAreas = () => {\n//    MAP.areas = [];\n//    setImageAreas([]);\n//  };\n//  let MAP = {\n//    name: uuidv4(),\n//    areas: [...imageAreas],\n//  };\n//  let MAP2 = {\n//    name: uuidv4(),\n//    areas: [...imageAreas],\n//  };\n\n//  function onChange(a) {\n//    setImageView(getSetUpInfo[a].image_position);\n//  }\n//  function callback(key) {\n//    console.log(key);\n//  }\n\n//  const carouselRef = React.createRef();\n//  console.log(currentImageObject);\n\n//  return (\n//    <Layout\n//      title={`${getSetUpInfo[0].username}'s ${getSetUpInfo[0].setup_title} setup`}\n//    >\n//      <div id={styles.setupPageContainer}>\n//        <div>\n//          <Row justify=\"center\">\n//            <Col span={24}>\n//              <Title level={1} style={{ textAlign: \"center\" }}>\n//                {getSetUpInfo[0].setup_title}\n//              </Title>\n//            </Col>\n//          </Row>\n//          <Row justify=\"center\">\n//            <Col span={22}>\n//              <PageHeader\n//                title={`${getSetUpInfo[0].username}`}\n//                extra={<HeartTwoTone twoToneColor=\"#eb2f96\" />}\n//                avatar={{\n//                  src: \"https://avatars1.githubusercontent.com/u/8186664?s=460&v=4\",\n//                }}\n//              />\n//            </Col>\n//          </Row>\n//          <Row>\n//            <Col span={24} style={{ display: \"\" }}>\n//              <ImageOneMapContainer\n//                name={getSetUpInfo[0].image_id}\n//                area={imageAreas}\n//              />\n//            </Col>\n//            <Col span={24} style={{ display: \"none\" }}>\n//              <ImageTwoMapContainer\n//                name={getSetUpInfo[1].image_id}\n//                area={imageAreas}\n//              />\n//            </Col>\n//            <Col span={24} style={{ display: \"none\" }}>\n//              <ImageThreeMapContainer name={\"test\"} area={imageAreas} />\n//            </Col>\n//          </Row>\n//          <Row justify=\"center\" style={{ padding: \".5rem 0\" }}>\n//            <Col span={22}>\n//              <Row justify=\"space-between\" style={{ alignItems: \"center\" }}>\n//                <Col>\n//                  <LeftOutlined />\n//                </Col>\n//                <Col>\n//                  <Title level={3} style={{ margin: \"0\" }}>\n//                    {currentImageObject.image_position}\n//                  </Title>\n//                </Col>\n//                <Col>\n//                  <RightOutlined />\n//                </Col>\n//              </Row>\n//            </Col>\n//          </Row>\n//          <Row justify=\"center\">\n//            <Col span={24}>\n//              <Carousel afterChange={onChange} ref={carouselRef}>\n//                {getSetUpInfo\n//                  .sort((a, b) =>\n//                    a.image_position_number > b.image_position_number ? 1 : -1\n//                  )\n//                  .map((item, i) => {\n//                    return (\n//                      <div key={i}>\n//                        <ImageMapper\n//                          src={item.image_url}\n//                          map={MAP}\n//                          fillColor={\"red\"}\n//                          width={375}\n//                          height={350}\n//                          onMouseEnter={(area: any) => {\n//                            console.log(area);\n//                          }}\n//                          onImageClick={(e: any) => {\n//                            console.log(\"test\");\n//                          }}\n//                        />\n//                      </div>\n//                    );\n//                  })}\n//              </Carousel>\n//            </Col>\n//          </Row>\n//          <Row justify=\"center\">\n//            <Col span={24}>\n//              <Title\n//                level={3}\n//                style={{ textAlign: \"center\", marginTop: \"1rem\" }}\n//              >\n//                {currentImageObject.image_position}\n//              </Title>\n//            </Col>\n//          </Row>\n//          <Row>\n//            <Col span={24}>\n//              <Tabs defaultActiveKey=\"1\" onChange={callback}>\n//                <TabPane tab=\"Items\" key=\"1\">\n//                  {imageAreas.map((item, i) => {\n//                    return (\n//                      <div key={i}>\n//                        <Row justify=\"space-between\">\n//                          <Col key={i}>\n//                            {i + 1}.{\" \"}\n//                            <Link\n//                              href={`${item.href}`}\n//                              target=\"_blank\"\n//                              rel=\"noopener noreferrer\"\n//                            >\n//                              {item.name}\n//                            </Link>\n//                          </Col>\n//                          <EyeOutlined />\n//                        </Row>\n//                        {i !== imageAreas.length - 1 ? (\n//                          <Divider orientation=\"left\" />\n//                        ) : (\n//                          \"\"\n//                        )}\n//                      </div>\n//                    );\n//                  })}\n//                </TabPane>\n//                <TabPane tab=\"Description\" key=\"2\">\n//                  {getSetUpInfo[0].setup_description}\n//                </TabPane>\n//                <TabPane tab=\"Comments\" key=\"3\">\n//                  Content of Tab Pane 3\n//                </TabPane>\n//              </Tabs>\n//            </Col>\n//          </Row>\n//        </div>\n//      </div>\n//    </Layout>\n//  );\n//}\n\n//export const getServerSideProps: GetServerSideProps = async (context) => {\n//  const { id } = context.query;\n//  const response = await axios.get(`${process.env.BASE_API}/setup/${id}`);\n//  const setUpPageData = await response.data;\n//  return {\n//    props: setUpPageData,\n//  };\n//};\n//\n//\n//\nimport React, { useEffect, useState } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport axios from \"axios\";\nimport {\n  Row,\n  Col,\n  Form,\n  Input,\n  Button,\n  Checkbox,\n  PageHeader,\n  Typography,\n  Avatar,\n  Space,\n} from \"antd\";\nimport { GetServerSideProps } from \"next\";\nimport ImageMapper from \"react-image-mapper\";\nimport { Carousel, Tabs, Divider } from \"antd\";\nimport {\n  UserOutlined,\n  HeartTwoTone,\n  EyeOutlined,\n  LeftOutlined,\n  RightOutlined,\n} from \"@ant-design/icons\";\nimport styles from \"./setupPage.module.scss\";\nimport ImageMapContainer from \"../../components/imageMapContainer/ImageMapContainer\";\n\nconst { Link, Title, Text } = Typography;\nconst { TabPane } = Tabs;\n\ninterface Props {\n  getSetUpInfo: Array<any>;\n}\n\nexport default function SetupPage(props: Props) {\n  const [currentImageView, setImageView] = useState<number>(0);\n  const [currentImageObject, setImageObject] = useState<object>({});\n  const [currentImageItems, setImageItems] = useState([]);\n  const [isActive, setActiveStatus] = useState(false);\n  const [imageAreas, setImageAreas] = useState([]);\n  const { getSetUpInfo, getImageItems } = props;\n  const [fillColor, setFillColor] = useState(\"\");\n\n  useEffect(() => {\n    console.log(props);\n    if (getSetUpInfo.length > 1) {\n      setImageView(1);\n    }\n  }, []);\n  useEffect(() => {\n    setDataPageInfo();\n    // resetCurrentImageAreas();\n  }, [currentImageView]);\n\n  useEffect(() => {\n    setDataPageInfo();\n    createCurrentImageAreasList();\n  }, [currentImageObject]);\n\n  const setDataPageInfo = async () => {\n    const filteredImageObject = getSetUpInfo.filter((imageObject, i) => {\n      return imageObject.image_position_number === currentImageView;\n    });\n    setImageObject(filteredImageObject[0]);\n    //shouldn't need this logic but items dont show without it\n    const currentItems = await getImageItems.filter((item, i) => {\n      return item.image_id === filteredImageObject[0].image_id;\n    });\n    setImageItems(currentItems);\n  };\n  const createCurrentImageAreasList = async () => {\n    const createMapAreas = await getImageItems.map((item, i) => {\n      let currentList = imageAreas;\n      if (item.image_id === currentImageObject.image_id) {\n        const addToAreaList = currentList.push(createArea(item));\n        console.log(\"test\", imageAreas);\n      }\n      setImageAreas(currentList);\n    });\n  };\n\n  const createArea = (item) => {\n    return {\n      id: item.item_id,\n      name: item.item_name,\n      shape: \"poly\",\n      coords: [...item.coords_list],\n      href: item.item_url,\n      preFillColor: \"transparent\",\n    };\n  };\n\n  // const resetCurrentImageAreas = () => {\n  //   MAP.areas = [];\n  //   setImageAreas([]);\n  // };\n  function onChange(a) {\n    setImageView(getSetUpInfo[a].image_position);\n  }\n  function callback(key) {\n    console.log(key);\n  }\n\n  return (\n    <Layout\n      title={`${getSetUpInfo[0].username}'s ${getSetUpInfo[0].setup_title} setup`}\n    >\n      <div id={styles.setupPageContainer}>\n        <div>\n          <Row justify=\"center\">\n            <Col span={24}>\n              <Title\n                level={1}\n                style={{ textAlign: \"center\", marginBottom: \"0\" }}\n              >\n                {getSetUpInfo[0].setup_title}\n              </Title>\n            </Col>\n            <Col span={24}>\n              <Title\n                level={2}\n                type=\"secondary\"\n                style={{ textAlign: \"center\", fontSize: \".8rem\" }}\n              >\n                {getSetUpInfo[0].setup_type}\n              </Title>\n            </Col>\n          </Row>\n          <Row justify=\"center\">\n            <Col span={22}>\n              <PageHeader\n                title={`${getSetUpInfo[0].username}`}\n                extra={<HeartTwoTone twoToneColor=\"#eb2f96\" />}\n                avatar={{\n                  src: \"https://avatars1.githubusercontent.com/u/8186664?s=460&v=4\",\n                }}\n              />\n            </Col>\n          </Row>\n          <Row>\n            {/*Works as long not using carousel. List out images*/}\n            {getSetUpInfo\n              .sort((a, b) =>\n                a.image_position_number > b.image_position_number ? 1 : -1\n              )\n              .map((item, i) => {\n                return (\n                  <Col\n                    key={i}\n                    span={24}\n                    style={{\n                      display:\n                        item.image_position_number !== currentImageView\n                          ? \"none\"\n                          : \"\",\n                    }}\n                  >\n                    <ImageMapContainer\n                      src={item.image_url}\n                      name={item.image_id}\n                      area={imageAreas}\n                    />\n                  </Col>\n                );\n              })}\n          </Row>\n          <Row justify=\"center\" style={{ padding: \".5rem 0\" }}>\n            <Col span={22}>\n              <Row justify=\"space-between\" style={{ alignItems: \"center\" }}>\n                <Col>\n                  <LeftOutlined />\n                </Col>\n                <Col>\n                  <Title level={3} style={{ margin: \"0\" }}>\n                    {currentImageObject.image_position}\n                  </Title>\n                </Col>\n                <Col>\n                  <RightOutlined />\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={24}>\n              <Tabs defaultActiveKey=\"1\" onChange={callback}>\n                <TabPane tab=\"Items\" key=\"1\">\n                  {imageAreas.map((item, i) => {\n                    return (\n                      <div key={i}>\n                        <Row justify=\"space-between\">\n                          <Col key={i}>\n                            {i + 1}.{\" \"}\n                            <Link\n                              href={`${item.href}`}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              {item.name}\n                            </Link>\n                          </Col>\n                          <EyeOutlined />\n                        </Row>\n                        {i !== imageAreas.length - 1 ? (\n                          <Divider orientation=\"left\" />\n                        ) : (\n                          \"\"\n                        )}\n                      </div>\n                    );\n                  })}\n                </TabPane>\n                <TabPane tab=\"Description\" key=\"2\">\n                  {getSetUpInfo[0].setup_description}\n                </TabPane>\n                <TabPane tab=\"Comments\" key=\"3\">\n                  Content of Tab Pane 3\n                </TabPane>\n              </Tabs>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport const getServerSideProps: GetServerSideProps = async (context) => {\n  const { id } = context.query;\n  const response = await axios.get(`${process.env.BASE_API}/setup/${id}`);\n  const setUpPageData = await response.data;\n  return {\n    props: setUpPageData,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}