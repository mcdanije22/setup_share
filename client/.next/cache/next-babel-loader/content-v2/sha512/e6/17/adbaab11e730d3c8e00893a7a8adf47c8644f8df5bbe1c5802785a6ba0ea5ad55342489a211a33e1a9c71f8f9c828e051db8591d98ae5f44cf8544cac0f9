{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/dashboard.tsx\";\nimport { useEffect, useContext, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { UserContext } from \"../utils/context/userContext\";\nimport styles from \"../pageStyles/dashboard.module.scss\";\nimport DashboardLayout from \"../components/Layout/DashboardLayout\";\nimport { Button, PageHeader } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { BaseAPI } from \"../utils/constants/common\";\nimport axios from \"axios\";\nimport { pageAuthCheck } from \"../utils/helperFunctions/pageAuthCheck\";\nimport ProjectsList from \"../components/projectList/ProjectList\";\nimport cookies from \"next-cookies\";\nexport default function Dashboard(props) {\n  const router = useRouter();\n  const {\n    currentUser,\n    setUser\n  } = useContext(UserContext);\n  const {\n    userDashboardInfo\n  } = props;\n  const {\n    0: activeSetup,\n    1: setActiveSetup\n  } = useState();\n  useEffect(() => {\n    if (!currentUser) {\n      reload();\n    }\n  }, []);\n\n  const reload = async () => {\n    try {\n      const response = await axios.get(`${BaseAPI}/user/usercontext`, {\n        withCredentials: true\n      });\n      const userInfo = await response.data;\n      setUser(userInfo);\n    } catch (error) {\n      return {\n        redirect: {\n          permanent: false,\n          destination: \"/login\"\n        }\n      };\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    title: \"Dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: styles.dashboardContainer,\n      children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n        style: {\n          padding: \"1rem 0\"\n        },\n        title: \"Setups\",\n        extra: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          value: \"small\",\n          shape: \"round\",\n          children: [/*#__PURE__*/_jsxDEV(PlusOutlined, {}, \"2\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), \"New setup\"]\n        }, \"1\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProjectsList, {\n        projects: userDashboardInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        document.cookie = \"name=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT\";\n      },\n      children: [\"test\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\nexport const getServerSideProps = async context => {\n  var _authCheck$props;\n\n  const allCookies = cookies(context);\n  const authCheck = await pageAuthCheck(context);\n\n  if ((_authCheck$props = authCheck.props) !== null && _authCheck$props !== void 0 && _authCheck$props.data.authd) {\n    try {\n      const response = await axios.get(`${BaseAPI}/user/dashboard/${authCheck.props.data.user}`);\n      const userDashboardInfo = await response.data;\n      return {\n        props: userDashboardInfo\n      };\n    } catch (e) {\n      return {\n        redirect: {\n          permanent: false,\n          destination: \"/login\"\n        }\n      };\n    }\n  } else {\n    return {\n      redirect: {\n        permanent: false,\n        destination: \"/login\"\n      }\n    };\n  }\n};","map":{"version":3,"sources":["/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/dashboard.tsx"],"names":["useEffect","useContext","useState","useRouter","UserContext","styles","DashboardLayout","Button","PageHeader","PlusOutlined","BaseAPI","axios","pageAuthCheck","ProjectsList","cookies","Dashboard","props","router","currentUser","setUser","userDashboardInfo","activeSetup","setActiveSetup","reload","response","get","withCredentials","userInfo","data","error","redirect","permanent","destination","dashboardContainer","padding","document","cookie","getServerSideProps","context","allCookies","authCheck","authd","user","e"],"mappings":"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","sourcesContent":["import { useEffect, useContext, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { UserContext } from \"../utils/context/userContext\";\nimport styles from \"../pageStyles/dashboard.module.scss\";\nimport DashboardLayout from \"../components/Layout/DashboardLayout\";\nimport { Button, PageHeader } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { GetServerSideProps } from \"next\";\nimport { BaseAPI } from \"../utils/constants/common\";\nimport axios from \"axios\";\nimport { pageAuthCheck } from \"../utils/helperFunctions/pageAuthCheck\";\nimport ProjectsList from \"../components/projectList/ProjectList\";\nimport cookies from \"next-cookies\";\n\ninterface Props {\n  userDashboardInfo: Array<dashboardItem>;\n}\ninterface dashboardItem {\n  user_id: string;\n  username: string;\n  setup_id: string;\n  setup_title: string;\n  setup_description: string;\n  setup_type: string;\n  setup_created_date: Date;\n  created_screen_type: any;\n  image_id: string;\n  image_url: string;\n  image_position: string;\n  image_position_number: number;\n}\n\nexport default function Dashboard(props: Props) {\n  const router = useRouter();\n  const { currentUser, setUser } = useContext<any>(UserContext);\n  const { userDashboardInfo } = props;\n  const [activeSetup, setActiveSetup] = useState();\n\n  useEffect(() => {\n    if (!currentUser) {\n      reload();\n    }\n  }, []);\n\n  const reload = async () => {\n    try {\n      const response = await axios.get(`${BaseAPI}/user/usercontext`, {\n        withCredentials: true,\n      });\n      const userInfo = await response.data;\n      setUser(userInfo);\n    } catch (error) {\n      return {\n        redirect: {\n          permanent: false,\n          destination: \"/login\",\n        },\n      };\n    }\n  };\n\n  return (\n    <DashboardLayout title=\"Dashboard\">\n      <div id={styles.dashboardContainer}>\n        <PageHeader\n          style={{ padding: \"1rem 0\" }}\n          title=\"Setups\"\n          extra={[\n            <Button type=\"primary\" key=\"1\" value=\"small\" shape=\"round\">\n              <PlusOutlined key=\"2\" />\n              New setup\n            </Button>,\n          ]}\n        />\n        <ProjectsList projects={userDashboardInfo} />\n      </div>\n      <Button\n        onClick={() => {\n          document.cookie =\n            \"name=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT\";\n        }}\n      >\n        test{\" \"}\n      </Button>\n    </DashboardLayout>\n  );\n}\n\nexport const getServerSideProps: GetServerSideProps = async (context) => {\n  const allCookies = cookies(context);\n\n  const authCheck = await pageAuthCheck(context);\n  if (authCheck.props?.data.authd) {\n    try {\n      const response = await axios.get(\n        `${BaseAPI}/user/dashboard/${authCheck.props.data.user}`\n      );\n      const userDashboardInfo = await response.data;\n      return {\n        props: userDashboardInfo,\n      };\n    } catch (e) {\n      return {\n        redirect: {\n          permanent: false,\n          destination: \"/login\",\n        },\n      };\n    }\n  } else {\n    return {\n      redirect: {\n        permanent: false,\n        destination: \"/login\",\n      },\n    };\n  }\n};\n"]},"metadata":{},"sourceType":"module"}