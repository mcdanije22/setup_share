{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joshmcdaniel/Documents/work/repos/setup_share/components/imageMapContainer/ImageMapContainer.tsx\";\nimport React from \"react\"; // @ts-ignore\n\nimport ImageMapper from \"react-image-mapper\";\nimport { MobileWidth, MobileHeight, TabletWidth, TabletHeight, LaptopWidth, LaptopHeight } from \"../../utils/constants/screenSize\";\n\nconst ImageMapContainer = ({\n  src,\n  areas,\n  name,\n  highlightItem,\n  onLoadScreenType,\n  handleModalOpen,\n  showHighlighting\n}) => {\n  var MAP = {\n    name: name,\n    areas: [...areas]\n  };\n  console.log(areas);\n  console.log(\"stat\", showHighlighting);\n  return /*#__PURE__*/_jsxDEV(ImageMapper, {\n    src: `${src}`,\n    map: MAP,\n    width: onLoadScreenType === \"Mobile\" ? MobileWidth : onLoadScreenType === \"Tablet\" ? TabletWidth : LaptopWidth,\n    height: onLoadScreenType === \"Mobile\" ? MobileHeight : onLoadScreenType === \"Tablet\" ? TabletHeight : LaptopHeight,\n    fillColor: \"transparent\",\n    strokeColor: \"black\",\n    onMouseEnter: area => {\n      highlightItem(area.id);\n    },\n    onClick: area => {\n      handleModalOpen(area);\n    },\n    onMouseLeave: () => {\n      highlightItem(null);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\nexport default ImageMapContainer;","map":{"version":3,"sources":["/Users/joshmcdaniel/Documents/work/repos/setup_share/components/imageMapContainer/ImageMapContainer.tsx"],"names":["React","ImageMapper","MobileWidth","MobileHeight","TabletWidth","TabletHeight","LaptopWidth","LaptopHeight","ImageMapContainer","src","areas","name","highlightItem","onLoadScreenType","handleModalOpen","showHighlighting","MAP","console","log","area","id"],"mappings":";;AAAA,OAAOA,KAAP,MAA2C,OAA3C,C,CACA;;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SACEC,WADF,EAEEC,YAFF,EAGEC,WAHF,EAIEC,YAJF,EAKEC,WALF,EAMEC,YANF,QAOO,kCAPP;;AA2BA,MAAMC,iBAAiB,GAAG,CAAC;AACzBC,EAAAA,GADyB;AAEzBC,EAAAA,KAFyB;AAGzBC,EAAAA,IAHyB;AAIzBC,EAAAA,aAJyB;AAKzBC,EAAAA,gBALyB;AAMzBC,EAAAA,eANyB;AAOzBC,EAAAA;AAPyB,CAAD,KAQb;AACX,MAAIC,GAAG,GAAG;AACRL,IAAAA,IAAI,EAAEA,IADE;AAERD,IAAAA,KAAK,EAAE,CAAC,GAAGA,KAAJ;AAFC,GAAV;AAIAO,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,gBAApB;AACA,sBACE,QAAC,WAAD;AACE,IAAA,GAAG,EAAG,GAAEN,GAAI,EADd;AAEE,IAAA,GAAG,EAAEO,GAFP;AAGE,IAAA,KAAK,EACHH,gBAAgB,KAAK,QAArB,GACIX,WADJ,GAEIW,gBAAgB,KAAK,QAArB,GACAT,WADA,GAEAE,WARR;AAUE,IAAA,MAAM,EACJO,gBAAgB,KAAK,QAArB,GACIV,YADJ,GAEIU,gBAAgB,KAAK,QAArB,GACAR,YADA,GAEAE,YAfR;AAiBE,IAAA,SAAS,EAAC,aAjBZ;AAkBE,IAAA,WAAW,EAAC,OAlBd;AAmBE,IAAA,YAAY,EAAGY,IAAD,IAAgB;AAC5BP,MAAAA,aAAa,CAACO,IAAI,CAACC,EAAN,CAAb;AACD,KArBH;AAsBE,IAAA,OAAO,EAAGD,IAAD,IAAgB;AACvBL,MAAAA,eAAe,CAACK,IAAD,CAAf;AACD,KAxBH;AAyBE,IAAA,YAAY,EAAE,MAAM;AAClBP,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AA3BH;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CA9CD;;AA+CA,eAAeJ,iBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n// @ts-ignore\nimport ImageMapper from \"react-image-mapper\";\nimport {\n  MobileWidth,\n  MobileHeight,\n  TabletWidth,\n  TabletHeight,\n  LaptopWidth,\n  LaptopHeight,\n} from \"../../utils/constants/screenSize\";\n\ninterface Props {\n  src: string;\n  areas: Array<Item>;\n  name: string;\n  highlightItem: (id: string | null) => void;\n  onLoadScreenType: string;\n  handleModalOpen: any;\n  showHighlighting: boolean;\n}\ninterface Item {\n  coords: number[];\n  href: string;\n  id: string;\n  name: string;\n  preFillColor: string;\n  shape: string;\n}\n\nconst ImageMapContainer = ({\n  src,\n  areas,\n  name,\n  highlightItem,\n  onLoadScreenType,\n  handleModalOpen,\n  showHighlighting,\n}: Props) => {\n  var MAP = {\n    name: name,\n    areas: [...areas],\n  };\n  console.log(areas);\n  console.log(\"stat\", showHighlighting);\n  return (\n    <ImageMapper\n      src={`${src}`}\n      map={MAP}\n      width={\n        onLoadScreenType === \"Mobile\"\n          ? MobileWidth\n          : onLoadScreenType === \"Tablet\"\n          ? TabletWidth\n          : LaptopWidth\n      }\n      height={\n        onLoadScreenType === \"Mobile\"\n          ? MobileHeight\n          : onLoadScreenType === \"Tablet\"\n          ? TabletHeight\n          : LaptopHeight\n      }\n      fillColor=\"transparent\"\n      strokeColor=\"black\"\n      onMouseEnter={(area: Item) => {\n        highlightItem(area.id);\n      }}\n      onClick={(area: Item) => {\n        handleModalOpen(area);\n      }}\n      onMouseLeave={() => {\n        highlightItem(null);\n      }}\n    />\n  );\n};\nexport default ImageMapContainer;\n"]},"metadata":{},"sourceType":"module"}