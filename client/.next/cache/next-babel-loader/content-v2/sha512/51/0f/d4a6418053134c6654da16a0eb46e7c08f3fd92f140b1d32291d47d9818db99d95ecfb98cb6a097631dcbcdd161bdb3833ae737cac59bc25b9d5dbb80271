{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/joshmcdaniel/Documents/work/repos/setup_share/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/joshmcdaniel/Documents/work/repos/setup_share/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nimport Head from \"next/head\";\nimport React, { useState } from \"react\";\nimport { Button, Upload, message, Form } from \"antd\";\nimport { InboxOutlined } from \"@ant-design/icons\";\nimport axios from \"axios\";\nexport default function Home() {\n  _s();\n\n  var _useState = useState([]),\n      imageList = _useState[0],\n      setFileList = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoading = _useState2[0],\n      setLoadingStatus = _useState2[1];\n\n  var Dragger = Upload.Dragger; // const uploadFile = async (values) => {\n  //   setLoadingStatus(true);\n  //   const data = new FormData();\n  //   console.log(values);\n  //   data.append(\"image-file\", values.imageFile.file.originFileObj);\n  //   try {\n  //     // const result = await axios.post(\"http://localhost:5000/images\", data, {\n  //     const result = await axios.post(\n  //       \"http://localhost:5000/image/upload\",\n  //       data,\n  //       {\n  //         headers: {\n  //           \"Content-Type\": \"multipart/form-data\",\n  //         },\n  //       }\n  //     );\n  //     console.log(result);\n  //     message.success(\"sucess\");\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  //   setLoadingStatus(false);\n  //   //likely wont need this list tracking, will look to have custom preview images and single uploads\n  //   // setFileList([...imageList, values.imageFile.file.originFileObj]);\n  // };\n\n  var upload = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(file) {\n      var data, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              data = new FormData();\n              data.append(\"image-file\", file);\n              console.log(data);\n              _context.prev = 3;\n              _context.next = 6;\n              return axios.post(\"http://localhost:5000/image/upload\", data, {\n                headers: {\n                  \"Content-Type\": \"multipart/form-data\"\n                }\n              });\n\n            case 6:\n              result = _context.sent;\n              message.success(\"sucess\");\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](3);\n              console.log(_context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 10]]);\n    }));\n\n    return function upload(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var uploadFile = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setLoadingStatus(true);\n              upload(values.imageFile.fileList[0].originFileObj);\n              upload(values.imageFile.fileList[1].originFileObj);\n              upload(values.imageFile.fileList[2].originFileObj);\n              setLoadingStatus(false); //likely wont need this list tracking, will look to have custom preview images and single uploads\n              // setFileList([...imageList, values.imageFile.file.originFileObj]);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function uploadFile(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var dummyRequest = function dummyRequest(file) {\n    console.log(file);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Create Next App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n        src: \"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n        type: \"text/javascript\",\n        src: \"https://cdnjs.cloudflare.com/ajax/libs/maphilight/1.4.0/jquery.maphilight.min.js\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        name: \"file-upload-form\",\n        onFinish: uploadFile,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"imageFile\",\n          children: /*#__PURE__*/_jsxDEV(Dragger, {\n            name: \"image\",\n            multiple: true // maxCount={1}\n            ,\n            customRequest: dummyRequest,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"ant-upload-drag-icon\",\n              children: /*#__PURE__*/_jsxDEV(InboxOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"ant-upload-text\",\n              children: \"Click or drag file to this area to upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"ant-upload-hint\",\n              children: \"Support for a single or bulk upload. Strictly prohibit from uploading company data or other band files\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            loading: isLoading,\n            children: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"icanva\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"n575EAadTezWGeyDm29SIz6H2oc=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/index.tsx"],"names":["Head","React","useState","Button","Upload","message","Form","InboxOutlined","axios","Home","imageList","setFileList","isLoading","setLoadingStatus","Dragger","upload","file","data","FormData","append","console","log","post","headers","result","success","uploadFile","values","imageFile","fileList","originFileObj","dummyRequest"],"mappings":"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","sourcesContent":["import Head from \"next/head\";\nimport React, { useState } from \"react\";\nimport { Button, Upload, message, Form } from \"antd\";\nimport { ControlFilled, InboxOutlined } from \"@ant-design/icons\";\nimport axios from \"axios\";\nimport CanvasImg from \"../components/CanvasImg\";\nimport icanva from \"../components/icanva\";\nexport default function Home() {\n  const [imageList, setFileList] = useState([]);\n  const [isLoading, setLoadingStatus] = useState(false);\n\n  const { Dragger } = Upload;\n\n  // const uploadFile = async (values) => {\n  //   setLoadingStatus(true);\n  //   const data = new FormData();\n  //   console.log(values);\n  //   data.append(\"image-file\", values.imageFile.file.originFileObj);\n  //   try {\n  //     // const result = await axios.post(\"http://localhost:5000/images\", data, {\n  //     const result = await axios.post(\n  //       \"http://localhost:5000/image/upload\",\n  //       data,\n  //       {\n  //         headers: {\n  //           \"Content-Type\": \"multipart/form-data\",\n  //         },\n  //       }\n  //     );\n  //     console.log(result);\n  //     message.success(\"sucess\");\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  //   setLoadingStatus(false);\n  //   //likely wont need this list tracking, will look to have custom preview images and single uploads\n  //   // setFileList([...imageList, values.imageFile.file.originFileObj]);\n  // };\n  const upload = async (file) => {\n    const data = new FormData();\n    data.append(\"image-file\", file);\n    console.log(data);\n    try {\n      // const result = await axios.post(\"http://localhost:5000/images\", data, {\n      const result = await axios.post(\n        \"http://localhost:5000/image/upload\",\n        data,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      );\n      message.success(\"sucess\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const uploadFile = async (values) => {\n    setLoadingStatus(true);\n    upload(values.imageFile.fileList[0].originFileObj);\n    upload(values.imageFile.fileList[1].originFileObj);\n    upload(values.imageFile.fileList[2].originFileObj);\n    setLoadingStatus(false);\n    //likely wont need this list tracking, will look to have custom preview images and single uploads\n    // setFileList([...imageList, values.imageFile.file.originFileObj]);\n  };\n  const dummyRequest = (file) => {\n    console.log(file);\n  };\n\n  return (\n    <div>\n      <Head>\n        <title>Create Next App</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n        <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\n        <script\n          type=\"text/javascript\"\n          src=\"https://cdnjs.cloudflare.com/ajax/libs/maphilight/1.4.0/jquery.maphilight.min.js\"\n        ></script>\n      </Head>\n      <main>\n        <Form name=\"file-upload-form\" onFinish={uploadFile}>\n          <Form.Item name=\"imageFile\">\n            <Dragger\n              name=\"image\"\n              multiple={true}\n              // maxCount={1}\n              customRequest={dummyRequest}\n            >\n              <p className=\"ant-upload-drag-icon\">\n                <InboxOutlined />\n              </p>\n              <p className=\"ant-upload-text\">\n                Click or drag file to this area to upload\n              </p>\n              <p className=\"ant-upload-hint\">\n                Support for a single or bulk upload. Strictly prohibit from\n                uploading company data or other band files\n              </p>\n            </Dragger>\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\n              submit\n            </Button>\n          </Form.Item>\n        </Form>\n        {/* <Map /> */}\n        <icanva />\n        {/* <img src=\"https://share-set-up-uploads.s3.us-east-2.amazonaws.com/front+view\" /> */}\n      </main>\n\n      <footer></footer>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}