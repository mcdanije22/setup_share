{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joshmcdaniel/Documents/work/repos/setup_share/components/CreateSetupForms/CreateSetupStepTwoForm.tsx\";\n// import React, { Dispatch, SetStateAction, useState, useEffect } from \"react\";\n// import {\n//   Upload,\n//   Row,\n//   Col,\n//   Typography,\n//   Space,\n//   Button,\n//   message,\n//   Modal,\n//   Form,\n// } from \"antd\";\n// import axios from \"axios\";\n// import ImgCrop from \"antd-img-crop\";\n// import styles from \"./createRoomForms.module.scss\";\n// import {\n//   ArrowRightOutlined,\n//   ArrowLeftOutlined,\n//   InboxOutlined,\n//   CheckCircleTwoTone,\n// } from \"@ant-design/icons\";\n// const { Title, Text } = Typography;\n// const { Dragger } = Upload;\n// interface Props {\n//   setStepTwoForm: Dispatch<SetStateAction<object>>;\n//   handleStepChange(number: number): void;\n//   stepTwoForm: Array<object>;\n// }\n// const CreateSetupStepTwoForm: React.FC<Props> = ({\n//   setStepTwoForm,\n//   handleStepChange,\n//   stepTwoForm,\n// }) => {\n//   const [fileList, setFileList] = useState<Array<any>>([]);\n//   const [uploadFileList, setUploadList] = useState<Array<any>>([]);\n//   const [isLoading, setLoadingStatus] = useState(false);\n//   const [modalStatus, setModalStatus] = useState<boolean>(false);\n//   useEffect(() => {\n//     if (stepTwoForm) {\n//       setFileList([...stepTwoForm]);\n//     }\n//   }, []);\n//   const onPreview = async (file: any) => {\n//     let src = file.url;\n//     if (!src) {\n//       src = await new Promise((resolve) => {\n//         const reader = new FileReader();\n//         reader.readAsDataURL(file.originFileObj);\n//         reader.onload = () => resolve(reader.result);\n//       });\n//     }\n//     const image = new Image();\n//     image.src = src;\n//     const imgWindow: any = window.open(src);\n//     console.log(imgWindow);\n//     imgWindow.document.write(image.outerHTML);\n//   };\n//   const beforeUpload = () => {\n//     if (fileList.length >= 3) {\n//       message.error(\"Delete image first before trying to add a new one\");\n//       return false;\n//     } else {\n//       return true;\n//     }\n//   };\n//   const sendFormTwoData = () => {\n//     setStepTwoForm([...fileList]);\n//     handleStepChange(3);\n//   };\n//   const handleModalCancel = () => {\n//     setModalStatus(false);\n//   };\n//   const handleStepTwoData = () => {\n//     if (fileList.length === 0) {\n//       message.error(\"Please upload a photo before continuing\");\n//     } else if (fileList.length < 3) {\n//       setModalStatus(true);\n//     } else {\n//       sendFormTwoData();\n//     }\n//   };\n//   const upload = async (file) => {\n//     const data = new FormData();\n//     data.append(\"image-file\", file);\n//     try {\n//       const result = await axios.post(\n//         \"http://localhost:5000/image/upload\",\n//         data,\n//         {\n//           headers: {\n//             \"Content-Type\": \"multipart/form-data\",\n//           },\n//         }\n//       );\n//       console.log(result);\n//       message.success(\"sucess\");\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n//   const uploadFile = async (values) => {\n//     setLoadingStatus(true);\n//     await upload(values.imageFile.fileList[0].originFileObj);\n//     await upload(values.imageFile.fileList[1].originFileObj);\n//     await upload(values.imageFile.fileList[2].originFileObj);\n//     setLoadingStatus(false);\n//     handleStepTwoData();\n//     //likely wont need this list tracking, will look to have custom preview images and single uploads\n//     // setFileList([...imageList, values.imageFile.file.originFileObj]);\n//   };\n//   const dummyRequest = (file) => {\n//     console.log(file)\n//   };\n//   return (\n//     <div id={styles.stepTwoFormContainer}>\n//       <Modal\n//         visible={modalStatus}\n//         title=\"Continue?\"\n//         onCancel={handleModalCancel}\n//         footer={[\n//           <Button key=\"back\" onClick={handleModalCancel}>\n//             Go back\n//           </Button>,\n//           <Button key=\"submit\" type=\"primary\" onClick={sendFormTwoData}>\n//             Submit\n//           </Button>,\n//         ]}\n//       >\n//         <div\n//           id=\"modalContainer\"\n//           style={{ textAlign: \"center\", padding: \"1rem\" }}\n//         >\n//           <Text>Less than three photos selected</Text>\n//           <br />\n//           <Text> Do you wish to continue?</Text>\n//         </div>\n//       </Modal>\n//       <Form name=\"file-upload-form\" onFinish={uploadFile}>\n//         <Space size={30} direction=\"vertical\" style={{ width: \"100%\" }}>\n//           <Col sm={24}>\n//             <Title\n//               level={2}\n//               style={{ textAlign: \"center\", paddingTop: \"2rem\" }}\n//             >\n//               Upload Three Photos\n//             </Title>\n//           </Col>\n//           <Row justify=\"center\" style={{ paddingBottom: \"2rem\" }}>\n//             <Col style={{ width: \"100%\" }}>\n//               <Form.Item name=\"imageFile\">\n//                 <Dragger\n//                   name=\"image\"\n//                   listType=\"picture\"\n//                   fileList={fileList}\n//                   onPreview={onPreview}\n//                   maxCount={3}\n//                   beforeUpload={beforeUpload}\n//                   customRequest={dummyRequest}\n//                   multiple={true}\n//                 >\n//                   {fileList.length < 3 && (\n//                     <>\n//                       <p className=\"ant-upload-drag-icon\">\n//                         <InboxOutlined />\n//                       </p>\n//                       <p className=\"ant-upload-text\">Drag and Drop or Browse</p>\n//                     </>\n//                   )}\n//                   {fileList.length >= 3 && (\n//                     <>\n//                       <p className=\"ant-upload-drag-icon\">\n//                         <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\n//                       </p>\n//                       <p className=\"ant-upload-text\">Max photos selected</p>\n//                       <p className=\"ant-upload-hint\">\n//                         Delete Photo(s) or Continue\n//                       </p>\n//                     </>\n//                   )}\n//                 </Dragger>\n//               </Form.Item>\n//             </Col>\n//           </Row>\n//           <Row\n//             justify=\"space-between\"\n//             style={{ position: \"absolute\", bottom: \"0\", width: \"100%\" }}\n//           >\n//             <Button\n//               onClick={() => {\n//                 handleStepChange(1);\n//               }}\n//               danger\n//               shape=\"circle\"\n//               size=\"large\"\n//               icon={<ArrowLeftOutlined />}\n//             />\n//             <Form.Item>\n//               <Button\n//                 // onClick={handleStepTwoData}\n//                 type=\"primary\"\n//                 htmlType=\"submit\"\n//                 shape=\"circle\"\n//                 size=\"large\"\n//                 icon={<ArrowRightOutlined />}\n//               />\n//             </Form.Item>\n//           </Row>\n//         </Space>\n//       </Form>\n//     </div>\n//   );\n// };\n// export default CreateSetupStepTwoForm;\nimport React, { useState, useEffect } from \"react\";\nimport { Upload, Row, Col, Typography, Space, Button, message, Modal } from \"antd\";\nimport styles from \"./createRoomForms.module.scss\";\nimport { ArrowRightOutlined, ArrowLeftOutlined, InboxOutlined, CheckCircleTwoTone } from \"@ant-design/icons\";\nconst {\n  Title,\n  Text\n} = Typography;\nconst {\n  Dragger\n} = Upload;\n\nconst CreateSetupStepTwoForm = ({\n  setStepTwoForm,\n  handleStepChange,\n  stepTwoForm\n}) => {\n  const {\n    0: fileList,\n    1: setFileList\n  } = useState([]);\n  const {\n    0: modalStatus,\n    1: setModalStatus\n  } = useState(false);\n  useEffect(() => {\n    if (stepTwoForm) {\n      setFileList([...stepTwoForm]);\n    }\n  }, []);\n\n  const onChange = ({\n    fileList: newFileList\n  }) => {\n    setFileList(newFileList);\n  };\n\n  const onPreview = async file => {\n    let src = file.url;\n\n    if (!src) {\n      src = await new Promise(resolve => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file.originFileObj);\n\n        reader.onload = () => resolve(reader.result);\n      });\n    }\n\n    const image = new Image();\n    image.src = src;\n    const imgWindow = window.open(src);\n    console.log(imgWindow);\n    imgWindow.document.write(image.outerHTML);\n  };\n\n  const beforeUpload = () => {\n    if (fileList.length >= 3) {\n      message.error(\"Delete image first before trying to add a new one\");\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  console.log(fileList);\n\n  const sendFormTwoData = () => {\n    setStepTwoForm([...fileList]);\n    handleStepChange(3);\n  };\n\n  const handleModalCancel = () => {\n    setModalStatus(false);\n  };\n\n  const handleStepTwoData = () => {\n    if (fileList.length === 0) {\n      message.error(\"Please upload a photo before continuing\");\n    } else if (fileList.length < 3) {\n      setModalStatus(true);\n    } else {\n      sendFormTwoData();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: styles.stepTwoFormContainer,\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      visible: modalStatus,\n      title: \"Continue?\",\n      onCancel: handleModalCancel,\n      footer: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleModalCancel,\n        children: \"Go back\"\n      }, \"back\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: sendFormTwoData,\n        children: \"Submit\"\n      }, \"submit\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }, this)],\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"modalContainer\",\n        style: {\n          textAlign: \"center\",\n          padding: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: \"Less than three photos selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: \" Do you wish to continue?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Space, {\n      size: 30,\n      direction: \"vertical\",\n      style: {\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        sm: 24,\n        children: /*#__PURE__*/_jsxDEV(Title, {\n          level: 2,\n          style: {\n            textAlign: \"center\",\n            paddingTop: \"2rem\"\n          },\n          children: \"Upload Three Photos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        justify: \"center\",\n        style: {\n          paddingBottom: \"2rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            width: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Dragger, {\n            listType: \"picture\",\n            fileList: fileList,\n            onChange: onChange,\n            onPreview: onPreview,\n            maxCount: 3,\n            beforeUpload: beforeUpload,\n            children: [fileList.length < 3 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"ant-upload-drag-icon\",\n                children: /*#__PURE__*/_jsxDEV(InboxOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"ant-upload-text\",\n                children: \"Drag and Drop or Browse\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true), fileList.length >= 3 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"ant-upload-drag-icon\",\n                children: /*#__PURE__*/_jsxDEV(CheckCircleTwoTone, {\n                  twoToneColor: \"#52c41a\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"ant-upload-text\",\n                children: \"Max photos selected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"ant-upload-hint\",\n                children: \"Delete Photo(s) or Continue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        justify: \"space-between\",\n        style: {\n          position: \"absolute\",\n          bottom: \"0\",\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            handleStepChange(1);\n          },\n          danger: true,\n          htmlType: \"submit\",\n          shape: \"circle\",\n          size: \"large\",\n          icon: /*#__PURE__*/_jsxDEV(ArrowLeftOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleStepTwoData,\n          type: \"primary\",\n          htmlType: \"submit\",\n          shape: \"circle\",\n          size: \"large\",\n          icon: /*#__PURE__*/_jsxDEV(ArrowRightOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 312,\n    columnNumber: 5\n  }, this);\n};\n\nexport default CreateSetupStepTwoForm;","map":{"version":3,"sources":["/Users/joshmcdaniel/Documents/work/repos/setup_share/components/CreateSetupForms/CreateSetupStepTwoForm.tsx"],"names":["React","useState","useEffect","Upload","Row","Col","Typography","Space","Button","message","Modal","styles","ArrowRightOutlined","ArrowLeftOutlined","InboxOutlined","CheckCircleTwoTone","Title","Text","Dragger","CreateSetupStepTwoForm","setStepTwoForm","handleStepChange","stepTwoForm","fileList","setFileList","modalStatus","setModalStatus","onChange","newFileList","onPreview","file","src","url","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","result","image","Image","imgWindow","window","open","console","log","document","write","outerHTML","beforeUpload","length","error","sendFormTwoData","handleModalCancel","handleStepTwoData","stepTwoFormContainer","textAlign","padding","width","paddingTop","paddingBottom","position","bottom"],"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","sourcesContent":["// import React, { Dispatch, SetStateAction, useState, useEffect } from \"react\";\n// import {\n//   Upload,\n//   Row,\n//   Col,\n//   Typography,\n//   Space,\n//   Button,\n//   message,\n//   Modal,\n//   Form,\n// } from \"antd\";\n// import axios from \"axios\";\n// import ImgCrop from \"antd-img-crop\";\n// import styles from \"./createRoomForms.module.scss\";\n// import {\n//   ArrowRightOutlined,\n//   ArrowLeftOutlined,\n//   InboxOutlined,\n//   CheckCircleTwoTone,\n// } from \"@ant-design/icons\";\n\n// const { Title, Text } = Typography;\n// const { Dragger } = Upload;\n\n// interface Props {\n//   setStepTwoForm: Dispatch<SetStateAction<object>>;\n//   handleStepChange(number: number): void;\n//   stepTwoForm: Array<object>;\n// }\n\n// const CreateSetupStepTwoForm: React.FC<Props> = ({\n//   setStepTwoForm,\n//   handleStepChange,\n//   stepTwoForm,\n// }) => {\n//   const [fileList, setFileList] = useState<Array<any>>([]);\n//   const [uploadFileList, setUploadList] = useState<Array<any>>([]);\n//   const [isLoading, setLoadingStatus] = useState(false);\n//   const [modalStatus, setModalStatus] = useState<boolean>(false);\n\n//   useEffect(() => {\n//     if (stepTwoForm) {\n//       setFileList([...stepTwoForm]);\n//     }\n//   }, []);\n\n//   const onPreview = async (file: any) => {\n//     let src = file.url;\n//     if (!src) {\n//       src = await new Promise((resolve) => {\n//         const reader = new FileReader();\n//         reader.readAsDataURL(file.originFileObj);\n//         reader.onload = () => resolve(reader.result);\n//       });\n//     }\n//     const image = new Image();\n//     image.src = src;\n//     const imgWindow: any = window.open(src);\n//     console.log(imgWindow);\n//     imgWindow.document.write(image.outerHTML);\n//   };\n//   const beforeUpload = () => {\n//     if (fileList.length >= 3) {\n//       message.error(\"Delete image first before trying to add a new one\");\n//       return false;\n//     } else {\n//       return true;\n//     }\n//   };\n//   const sendFormTwoData = () => {\n//     setStepTwoForm([...fileList]);\n//     handleStepChange(3);\n//   };\n//   const handleModalCancel = () => {\n//     setModalStatus(false);\n//   };\n//   const handleStepTwoData = () => {\n//     if (fileList.length === 0) {\n//       message.error(\"Please upload a photo before continuing\");\n//     } else if (fileList.length < 3) {\n//       setModalStatus(true);\n//     } else {\n//       sendFormTwoData();\n//     }\n//   };\n//   const upload = async (file) => {\n//     const data = new FormData();\n//     data.append(\"image-file\", file);\n//     try {\n//       const result = await axios.post(\n//         \"http://localhost:5000/image/upload\",\n//         data,\n//         {\n//           headers: {\n//             \"Content-Type\": \"multipart/form-data\",\n//           },\n//         }\n//       );\n//       console.log(result);\n//       message.success(\"sucess\");\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n//   const uploadFile = async (values) => {\n//     setLoadingStatus(true);\n//     await upload(values.imageFile.fileList[0].originFileObj);\n//     await upload(values.imageFile.fileList[1].originFileObj);\n//     await upload(values.imageFile.fileList[2].originFileObj);\n//     setLoadingStatus(false);\n//     handleStepTwoData();\n//     //likely wont need this list tracking, will look to have custom preview images and single uploads\n//     // setFileList([...imageList, values.imageFile.file.originFileObj]);\n//   };\n//   const dummyRequest = (file) => {\n//     console.log(file)\n//   };\n\n//   return (\n//     <div id={styles.stepTwoFormContainer}>\n//       <Modal\n//         visible={modalStatus}\n//         title=\"Continue?\"\n//         onCancel={handleModalCancel}\n//         footer={[\n//           <Button key=\"back\" onClick={handleModalCancel}>\n//             Go back\n//           </Button>,\n//           <Button key=\"submit\" type=\"primary\" onClick={sendFormTwoData}>\n//             Submit\n//           </Button>,\n//         ]}\n//       >\n//         <div\n//           id=\"modalContainer\"\n//           style={{ textAlign: \"center\", padding: \"1rem\" }}\n//         >\n//           <Text>Less than three photos selected</Text>\n//           <br />\n//           <Text> Do you wish to continue?</Text>\n//         </div>\n//       </Modal>\n\n//       <Form name=\"file-upload-form\" onFinish={uploadFile}>\n//         <Space size={30} direction=\"vertical\" style={{ width: \"100%\" }}>\n//           <Col sm={24}>\n//             <Title\n//               level={2}\n//               style={{ textAlign: \"center\", paddingTop: \"2rem\" }}\n//             >\n//               Upload Three Photos\n//             </Title>\n//           </Col>\n//           <Row justify=\"center\" style={{ paddingBottom: \"2rem\" }}>\n//             <Col style={{ width: \"100%\" }}>\n//               <Form.Item name=\"imageFile\">\n//                 <Dragger\n//                   name=\"image\"\n//                   listType=\"picture\"\n//                   fileList={fileList}\n//                   onPreview={onPreview}\n//                   maxCount={3}\n//                   beforeUpload={beforeUpload}\n//                   customRequest={dummyRequest}\n//                   multiple={true}\n//                 >\n//                   {fileList.length < 3 && (\n//                     <>\n//                       <p className=\"ant-upload-drag-icon\">\n//                         <InboxOutlined />\n//                       </p>\n//                       <p className=\"ant-upload-text\">Drag and Drop or Browse</p>\n//                     </>\n//                   )}\n//                   {fileList.length >= 3 && (\n//                     <>\n//                       <p className=\"ant-upload-drag-icon\">\n//                         <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\n//                       </p>\n//                       <p className=\"ant-upload-text\">Max photos selected</p>\n//                       <p className=\"ant-upload-hint\">\n//                         Delete Photo(s) or Continue\n//                       </p>\n//                     </>\n//                   )}\n//                 </Dragger>\n//               </Form.Item>\n//             </Col>\n//           </Row>\n//           <Row\n//             justify=\"space-between\"\n//             style={{ position: \"absolute\", bottom: \"0\", width: \"100%\" }}\n//           >\n//             <Button\n//               onClick={() => {\n//                 handleStepChange(1);\n//               }}\n//               danger\n//               shape=\"circle\"\n//               size=\"large\"\n//               icon={<ArrowLeftOutlined />}\n//             />\n//             <Form.Item>\n//               <Button\n//                 // onClick={handleStepTwoData}\n//                 type=\"primary\"\n//                 htmlType=\"submit\"\n//                 shape=\"circle\"\n//                 size=\"large\"\n//                 icon={<ArrowRightOutlined />}\n//               />\n//             </Form.Item>\n//           </Row>\n//         </Space>\n//       </Form>\n//     </div>\n//   );\n// };\n\n// export default CreateSetupStepTwoForm;\n\nimport React, { Dispatch, SetStateAction, useState, useEffect } from \"react\";\nimport {\n  Upload,\n  Row,\n  Col,\n  Typography,\n  Space,\n  Button,\n  message,\n  Modal,\n} from \"antd\";\nimport ImgCrop from \"antd-img-crop\";\nimport styles from \"./createRoomForms.module.scss\";\nimport {\n  ArrowRightOutlined,\n  ArrowLeftOutlined,\n  InboxOutlined,\n  CheckCircleTwoTone,\n} from \"@ant-design/icons\";\n\nconst { Title, Text } = Typography;\nconst { Dragger } = Upload;\n\ninterface Props {\n  setStepTwoForm: Dispatch<SetStateAction<object>>;\n  handleStepChange(number: number): void;\n  stepTwoForm: Array<object>;\n}\n\nconst CreateSetupStepTwoForm: React.FC<Props> = ({\n  setStepTwoForm,\n  handleStepChange,\n  stepTwoForm,\n}) => {\n  const [fileList, setFileList] = useState<Array<any>>([]);\n  const [modalStatus, setModalStatus] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (stepTwoForm) {\n      setFileList([...stepTwoForm]);\n    }\n  }, []);\n\n  const onChange = ({ fileList: newFileList }: any) => {\n    setFileList(newFileList);\n  };\n\n  const onPreview = async (file: any) => {\n    let src = file.url;\n    if (!src) {\n      src = await new Promise((resolve) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file.originFileObj);\n        reader.onload = () => resolve(reader.result);\n      });\n    }\n    const image = new Image();\n    image.src = src;\n    const imgWindow: any = window.open(src);\n    console.log(imgWindow);\n    imgWindow.document.write(image.outerHTML);\n  };\n  const beforeUpload = () => {\n    if (fileList.length >= 3) {\n      message.error(\"Delete image first before trying to add a new one\");\n      return false;\n    } else {\n      return true;\n    }\n  };\n  console.log(fileList);\n\n  const sendFormTwoData = () => {\n    setStepTwoForm([...fileList]);\n    handleStepChange(3);\n  };\n  const handleModalCancel = () => {\n    setModalStatus(false);\n  };\n  const handleStepTwoData = () => {\n    if (fileList.length === 0) {\n      message.error(\"Please upload a photo before continuing\");\n    } else if (fileList.length < 3) {\n      setModalStatus(true);\n    } else {\n      sendFormTwoData();\n    }\n  };\n  return (\n    <div id={styles.stepTwoFormContainer}>\n      <Modal\n        visible={modalStatus}\n        title=\"Continue?\"\n        onCancel={handleModalCancel}\n        footer={[\n          <Button key=\"back\" onClick={handleModalCancel}>\n            Go back\n          </Button>,\n          <Button key=\"submit\" type=\"primary\" onClick={sendFormTwoData}>\n            Submit\n          </Button>,\n        ]}\n      >\n        <div\n          id=\"modalContainer\"\n          style={{ textAlign: \"center\", padding: \"1rem\" }}\n        >\n          <Text>Less than three photos selected</Text>\n          <br />\n          <Text> Do you wish to continue?</Text>\n        </div>\n      </Modal>\n      <Space size={30} direction=\"vertical\" style={{ width: \"100%\" }}>\n        <Col sm={24}>\n          <Title level={2} style={{ textAlign: \"center\", paddingTop: \"2rem\" }}>\n            Upload Three Photos\n          </Title>\n        </Col>\n        <Row justify=\"center\" style={{ paddingBottom: \"2rem\" }}>\n          <Col style={{ width: \"100%\" }}>\n            <Dragger\n              listType=\"picture\"\n              fileList={fileList}\n              onChange={onChange}\n              onPreview={onPreview}\n              maxCount={3}\n              beforeUpload={beforeUpload}\n            >\n              {fileList.length < 3 && (\n                <>\n                  <p className=\"ant-upload-drag-icon\">\n                    <InboxOutlined />\n                  </p>\n                  <p className=\"ant-upload-text\">Drag and Drop or Browse</p>\n                </>\n              )}\n              {fileList.length >= 3 && (\n                <>\n                  <p className=\"ant-upload-drag-icon\">\n                    <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\n                  </p>\n                  <p className=\"ant-upload-text\">Max photos selected</p>\n                  <p className=\"ant-upload-hint\">Delete Photo(s) or Continue</p>\n                </>\n              )}\n            </Dragger>\n          </Col>\n        </Row>\n        <Row\n          justify=\"space-between\"\n          style={{ position: \"absolute\", bottom: \"0\", width: \"100%\" }}\n        >\n          <Button\n            onClick={() => {\n              handleStepChange(1);\n            }}\n            danger\n            htmlType=\"submit\"\n            shape=\"circle\"\n            size=\"large\"\n            icon={<ArrowLeftOutlined />}\n          />\n\n          <Button\n            onClick={handleStepTwoData}\n            type=\"primary\"\n            htmlType=\"submit\"\n            shape=\"circle\"\n            size=\"large\"\n            icon={<ArrowRightOutlined />}\n          />\n        </Row>\n      </Space>\n    </div>\n  );\n};\n\nexport default CreateSetupStepTwoForm;"]},"metadata":{},"sourceType":"module"}