{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joshmcdaniel/Documents/work/repos/setup_share/components/CreateSetupForms/CreateSetupStepTwoForm.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Upload, Row, Col, Typography, Space, Button, message, Modal, Form } from \"antd\";\nimport axios from \"axios\";\nimport styles from \"./createRoomForms.module.scss\";\nimport { ArrowRightOutlined, ArrowLeftOutlined, InboxOutlined, CheckCircleTwoTone } from \"@ant-design/icons\";\nconst {\n  Title,\n  Text\n} = Typography;\nconst {\n  Dragger\n} = Upload;\n\nconst CreateSetupStepTwoForm = ({\n  setStepTwoForm,\n  handleStepChange,\n  stepTwoForm\n}) => {\n  const {\n    0: fileList,\n    1: setFileList\n  } = useState([]);\n  const {\n    0: uploadFileList,\n    1: setUploadList\n  } = useState([]);\n  const {\n    0: isLoading,\n    1: setLoadingStatus\n  } = useState(false);\n  const {\n    0: modalStatus,\n    1: setModalStatus\n  } = useState(false);\n  useEffect(() => {\n    if (stepTwoForm) {\n      setFileList([...stepTwoForm]);\n    }\n  }, []);\n\n  const onPreview = async file => {\n    let src = file.url;\n\n    if (!src) {\n      src = await new Promise(resolve => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file.originFileObj);\n\n        reader.onload = () => resolve(reader.result);\n      });\n    }\n\n    const image = new Image();\n    image.src = src;\n    const imgWindow = window.open(src);\n    console.log(imgWindow);\n    imgWindow.document.write(image.outerHTML);\n  };\n\n  const beforeUpload = () => {\n    if (fileList.length >= 3) {\n      message.error(\"Delete image first before trying to add a new one\");\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const sendFormTwoData = () => {\n    setStepTwoForm([...fileList]);\n    handleStepChange(3);\n  };\n\n  const handleModalCancel = () => {\n    setModalStatus(false);\n  };\n\n  const handleStepTwoData = () => {\n    if (fileList.length === 0) {\n      message.error(\"Please upload a photo before continuing\");\n    } else if (fileList.length < 3) {\n      setModalStatus(true);\n    } else {\n      sendFormTwoData();\n    }\n  };\n\n  const upload = async file => {\n    const data = new FormData();\n    data.append(\"image-file\", file);\n\n    try {\n      const result = await axios.post(\"http://localhost:5000/image/upload\", data, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      console.log(result);\n      message.success(\"sucess\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const uploadFile = async values => {\n    setLoadingStatus(true);\n    await upload(values.imageFile.fileList[0].originFileObj);\n    await upload(values.imageFile.fileList[1].originFileObj);\n    await upload(values.imageFile.fileList[2].originFileObj);\n    setLoadingStatus(false);\n    handleStepTwoData(); //likely wont need this list tracking, will look to have custom preview images and single uploads\n    // setFileList([...imageList, values.imageFile.file.originFileObj]);\n  };\n\n  const dummyRequest = file => {\n    console.log(file);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: styles.stepTwoFormContainer,\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      visible: modalStatus,\n      title: \"Continue?\",\n      onCancel: handleModalCancel,\n      footer: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleModalCancel,\n        children: \"Go back\"\n      }, \"back\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: sendFormTwoData,\n        children: \"Submit\"\n      }, \"submit\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)],\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"modalContainer\",\n        style: {\n          textAlign: \"center\",\n          padding: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: \"Less than three photos selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: \" Do you wish to continue?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dragger, {\n      name: \"image\",\n      listType: \"picture\",\n      fileList: fileList,\n      onPreview: onPreview,\n      maxCount: 3,\n      beforeUpload: beforeUpload,\n      customRequest: dummyRequest,\n      multiple: true,\n      children: [fileList.length < 3 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ant-upload-drag-icon\",\n          children: /*#__PURE__*/_jsxDEV(InboxOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ant-upload-text\",\n          children: \"Drag and Drop or Browse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true), fileList.length >= 3 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ant-upload-drag-icon\",\n          children: /*#__PURE__*/_jsxDEV(CheckCircleTwoTone, {\n            twoToneColor: \"#52c41a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ant-upload-text\",\n          children: \"Max photos selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ant-upload-hint\",\n          children: \"Delete Photo(s) or Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      name: \"file-upload-form\",\n      onFinish: uploadFile,\n      children: /*#__PURE__*/_jsxDEV(Space, {\n        size: 30,\n        direction: \"vertical\",\n        style: {\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: 24,\n          children: /*#__PURE__*/_jsxDEV(Title, {\n            level: 2,\n            style: {\n              textAlign: \"center\",\n              paddingTop: \"2rem\"\n            },\n            children: \"Upload Three Photos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          justify: \"center\",\n          style: {\n            paddingBottom: \"2rem\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            style: {\n              width: \"100%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"imageFile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          justify: \"space-between\",\n          style: {\n            position: \"absolute\",\n            bottom: \"0\",\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              handleStepChange(1);\n            },\n            danger: true,\n            shape: \"circle\",\n            size: \"large\",\n            icon: /*#__PURE__*/_jsxDEV(ArrowLeftOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Button // onClick={handleStepTwoData}\n            , {\n              type: \"primary\",\n              htmlType: \"submit\",\n              shape: \"circle\",\n              size: \"large\",\n              icon: /*#__PURE__*/_jsxDEV(ArrowRightOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n\nexport default CreateSetupStepTwoForm; //  return (\n//     <div id={styles.stepTwoFormContainer}>\n//       <Modal\n//         visible={modalStatus}\n//         title=\"Continue?\"\n//         onCancel={handleModalCancel}\n//         footer={[\n//           <Button key=\"back\" onClick={handleModalCancel}>\n//             Go back\n//           </Button>,\n//           <Button key=\"submit\" type=\"primary\" onClick={sendFormTwoData}>\n//             Submit\n//           </Button>,\n//         ]}\n//       >\n//         <div\n//           id=\"modalContainer\"\n//           style={{ textAlign: \"center\", padding: \"1rem\" }}\n//         >\n//           <Text>Less than three photos selected</Text>\n//           <br />\n//           <Text> Do you wish to continue?</Text>\n//         </div>\n//       </Modal>\n//       <Space size={30} direction=\"vertical\" style={{ width: \"100%\" }}>\n//         <Col sm={24}>\n//           <Title level={2} style={{ textAlign: \"center\", paddingTop: \"2rem\" }}>\n//             Upload Three Photos\n//           </Title>\n//         </Col>\n//         <Row justify=\"center\" style={{ paddingBottom: \"2rem\" }}>\n//           <Col style={{ width: \"100%\" }}>\n//             <Dragger\n//               listType=\"picture\"\n//               fileList={fileList}\n//               onChange={onChange}\n//               onPreview={onPreview}\n//               maxCount={3}\n//               beforeUpload={beforeUpload}\n//             >\n//               {fileList.length < 3 && (\n//                 <>\n//                   <p className=\"ant-upload-drag-icon\">\n//                     <InboxOutlined />\n//                   </p>\n//                   <p className=\"ant-upload-text\">Drag and Drop or Browse</p>\n//                 </>\n//               )}\n//               {fileList.length >= 3 && (\n//                 <>\n//                   <p className=\"ant-upload-drag-icon\">\n//                     <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\n//                   </p>\n//                   <p className=\"ant-upload-text\">Max photos selected</p>\n//                   <p className=\"ant-upload-hint\">Delete Photo(s) or Continue</p>\n//                 </>\n//               )}\n//             </Dragger>\n//           </Col>\n//         </Row>\n//         <Row\n//           justify=\"space-between\"\n//           style={{ position: \"absolute\", bottom: \"0\", width: \"100%\" }}\n//         >\n//           <Button\n//             onClick={() => {\n//               handleStepChange(1);\n//             }}\n//             danger\n//             htmlType=\"submit\"\n//             shape=\"circle\"\n//             size=\"large\"\n//             icon={<ArrowLeftOutlined />}\n//           />\n//           <Button\n//             onClick={handleStepTwoData}\n//             type=\"primary\"\n//             htmlType=\"submit\"\n//             shape=\"circle\"\n//             size=\"large\"\n//             icon={<ArrowRightOutlined />}\n//           />\n//         </Row>\n//       </Space>\n//     </div>\n//   );\n// };\n// export default CreateSetupStepTwoForm;","map":{"version":3,"sources":["/Users/joshmcdaniel/Documents/work/repos/setup_share/components/CreateSetupForms/CreateSetupStepTwoForm.tsx"],"names":["React","useState","useEffect","Upload","Row","Col","Typography","Space","Button","message","Modal","Form","axios","styles","ArrowRightOutlined","ArrowLeftOutlined","InboxOutlined","CheckCircleTwoTone","Title","Text","Dragger","CreateSetupStepTwoForm","setStepTwoForm","handleStepChange","stepTwoForm","fileList","setFileList","uploadFileList","setUploadList","isLoading","setLoadingStatus","modalStatus","setModalStatus","onPreview","file","src","url","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","result","image","Image","imgWindow","window","open","console","log","document","write","outerHTML","beforeUpload","length","error","sendFormTwoData","handleModalCancel","handleStepTwoData","upload","data","FormData","append","post","headers","success","uploadFile","values","imageFile","dummyRequest","stepTwoFormContainer","textAlign","padding","width","paddingTop","paddingBottom","position","bottom"],"mappings":"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","sourcesContent":["import React, { Dispatch, SetStateAction, useState, useEffect } from \"react\";\nimport {\n  Upload,\n  Row,\n  Col,\n  Typography,\n  Space,\n  Button,\n  message,\n  Modal,\n  Form,\n} from \"antd\";\nimport axios from \"axios\";\nimport ImgCrop from \"antd-img-crop\";\nimport styles from \"./createRoomForms.module.scss\";\nimport {\n  ArrowRightOutlined,\n  ArrowLeftOutlined,\n  InboxOutlined,\n  CheckCircleTwoTone,\n} from \"@ant-design/icons\";\n\nconst { Title, Text } = Typography;\nconst { Dragger } = Upload;\n\ninterface Props {\n  setStepTwoForm: Dispatch<SetStateAction<object>>;\n  handleStepChange(number: number): void;\n  stepTwoForm: Array<object>;\n}\n\nconst CreateSetupStepTwoForm: React.FC<Props> = ({\n  setStepTwoForm,\n  handleStepChange,\n  stepTwoForm,\n}) => {\n  const [fileList, setFileList] = useState<Array<any>>([]);\n  const [uploadFileList, setUploadList] = useState<Array<any>>([]);\n  const [isLoading, setLoadingStatus] = useState(false);\n  const [modalStatus, setModalStatus] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (stepTwoForm) {\n      setFileList([...stepTwoForm]);\n    }\n  }, []);\n\n  const onPreview = async (file: any) => {\n    let src = file.url;\n    if (!src) {\n      src = await new Promise((resolve) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file.originFileObj);\n        reader.onload = () => resolve(reader.result);\n      });\n    }\n    const image = new Image();\n    image.src = src;\n    const imgWindow: any = window.open(src);\n    console.log(imgWindow);\n    imgWindow.document.write(image.outerHTML);\n  };\n  const beforeUpload = () => {\n    if (fileList.length >= 3) {\n      message.error(\"Delete image first before trying to add a new one\");\n      return false;\n    } else {\n      return true;\n    }\n  };\n  const sendFormTwoData = () => {\n    setStepTwoForm([...fileList]);\n    handleStepChange(3);\n  };\n  const handleModalCancel = () => {\n    setModalStatus(false);\n  };\n  const handleStepTwoData = () => {\n    if (fileList.length === 0) {\n      message.error(\"Please upload a photo before continuing\");\n    } else if (fileList.length < 3) {\n      setModalStatus(true);\n    } else {\n      sendFormTwoData();\n    }\n  };\n  const upload = async (file) => {\n    const data = new FormData();\n    data.append(\"image-file\", file);\n    try {\n      const result = await axios.post(\n        \"http://localhost:5000/image/upload\",\n        data,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      );\n      console.log(result);\n      message.success(\"sucess\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const uploadFile = async (values) => {\n    setLoadingStatus(true);\n    await upload(values.imageFile.fileList[0].originFileObj);\n    await upload(values.imageFile.fileList[1].originFileObj);\n    await upload(values.imageFile.fileList[2].originFileObj);\n    setLoadingStatus(false);\n    handleStepTwoData();\n    //likely wont need this list tracking, will look to have custom preview images and single uploads\n    // setFileList([...imageList, values.imageFile.file.originFileObj]);\n  };\n  const dummyRequest = (file) => {\n    console.log(file)\n  };\n\n  return (\n    <div id={styles.stepTwoFormContainer}>\n      <Modal\n        visible={modalStatus}\n        title=\"Continue?\"\n        onCancel={handleModalCancel}\n        footer={[\n          <Button key=\"back\" onClick={handleModalCancel}>\n            Go back\n          </Button>,\n          <Button key=\"submit\" type=\"primary\" onClick={sendFormTwoData}>\n            Submit\n          </Button>,\n        ]}\n      >\n        <div\n          id=\"modalContainer\"\n          style={{ textAlign: \"center\", padding: \"1rem\" }}\n        >\n          <Text>Less than three photos selected</Text>\n          <br />\n          <Text> Do you wish to continue?</Text>\n        </div>\n      </Modal>\n      <Dragger\n                  name=\"image\"\n                  listType=\"picture\"\n                  fileList={fileList}\n                  onPreview={onPreview}\n                  maxCount={3}\n                  beforeUpload={beforeUpload}\n                  customRequest={dummyRequest}\n                  multiple={true}\n                >\n                  {fileList.length < 3 && (\n                    <>\n                      <p className=\"ant-upload-drag-icon\">\n                        <InboxOutlined />\n                      </p>\n                      <p className=\"ant-upload-text\">Drag and Drop or Browse</p>\n                    </>\n                  )}\n                  {fileList.length >= 3 && (\n                    <>\n                      <p className=\"ant-upload-drag-icon\">\n                        <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\n                      </p>\n                      <p className=\"ant-upload-text\">Max photos selected</p>\n                      <p className=\"ant-upload-hint\">\n                        Delete Photo(s) or Continue\n                      </p>\n                    </>\n                  )}\n                </Dragger>\n      <Form name=\"file-upload-form\" onFinish={uploadFile}>\n        <Space size={30} direction=\"vertical\" style={{ width: \"100%\" }}>\n          <Col sm={24}>\n            <Title\n              level={2}\n              style={{ textAlign: \"center\", paddingTop: \"2rem\" }}\n            >\n              Upload Three Photos\n            </Title>\n          </Col>\n          <Row justify=\"center\" style={{ paddingBottom: \"2rem\" }}>\n            <Col style={{ width: \"100%\" }}>\n              <Form.Item name=\"imageFile\">\n             \n              </Form.Item>\n            </Col>\n          </Row>\n          <Row\n            justify=\"space-between\"\n            style={{ position: \"absolute\", bottom: \"0\", width: \"100%\" }}\n          >\n            <Button\n              onClick={() => {\n                handleStepChange(1);\n              }}\n              danger\n              shape=\"circle\"\n              size=\"large\"\n              icon={<ArrowLeftOutlined />}\n            />\n            <Form.Item>\n              <Button\n                // onClick={handleStepTwoData}\n                type=\"primary\"\n                htmlType=\"submit\"\n                shape=\"circle\"\n                size=\"large\"\n                icon={<ArrowRightOutlined />}\n              />\n            </Form.Item>\n          </Row>\n        </Space>\n      </Form>\n    </div>\n  );\n};\n\nexport default CreateSetupStepTwoForm;\n//  return (\n//     <div id={styles.stepTwoFormContainer}>\n//       <Modal\n//         visible={modalStatus}\n//         title=\"Continue?\"\n//         onCancel={handleModalCancel}\n//         footer={[\n//           <Button key=\"back\" onClick={handleModalCancel}>\n//             Go back\n//           </Button>,\n//           <Button key=\"submit\" type=\"primary\" onClick={sendFormTwoData}>\n//             Submit\n//           </Button>,\n//         ]}\n//       >\n//         <div\n//           id=\"modalContainer\"\n//           style={{ textAlign: \"center\", padding: \"1rem\" }}\n//         >\n//           <Text>Less than three photos selected</Text>\n//           <br />\n//           <Text> Do you wish to continue?</Text>\n//         </div>\n//       </Modal>\n//       <Space size={30} direction=\"vertical\" style={{ width: \"100%\" }}>\n//         <Col sm={24}>\n//           <Title level={2} style={{ textAlign: \"center\", paddingTop: \"2rem\" }}>\n//             Upload Three Photos\n//           </Title>\n//         </Col>\n//         <Row justify=\"center\" style={{ paddingBottom: \"2rem\" }}>\n//           <Col style={{ width: \"100%\" }}>\n//             <Dragger\n//               listType=\"picture\"\n//               fileList={fileList}\n//               onChange={onChange}\n//               onPreview={onPreview}\n//               maxCount={3}\n//               beforeUpload={beforeUpload}\n//             >\n//               {fileList.length < 3 && (\n//                 <>\n//                   <p className=\"ant-upload-drag-icon\">\n//                     <InboxOutlined />\n//                   </p>\n//                   <p className=\"ant-upload-text\">Drag and Drop or Browse</p>\n//                 </>\n//               )}\n//               {fileList.length >= 3 && (\n//                 <>\n//                   <p className=\"ant-upload-drag-icon\">\n//                     <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\n//                   </p>\n//                   <p className=\"ant-upload-text\">Max photos selected</p>\n//                   <p className=\"ant-upload-hint\">Delete Photo(s) or Continue</p>\n//                 </>\n//               )}\n//             </Dragger>\n//           </Col>\n//         </Row>\n//         <Row\n//           justify=\"space-between\"\n//           style={{ position: \"absolute\", bottom: \"0\", width: \"100%\" }}\n//         >\n//           <Button\n//             onClick={() => {\n//               handleStepChange(1);\n//             }}\n//             danger\n//             htmlType=\"submit\"\n//             shape=\"circle\"\n//             size=\"large\"\n//             icon={<ArrowLeftOutlined />}\n//           />\n\n//           <Button\n//             onClick={handleStepTwoData}\n//             type=\"primary\"\n//             htmlType=\"submit\"\n//             shape=\"circle\"\n//             size=\"large\"\n//             icon={<ArrowRightOutlined />}\n//           />\n//         </Row>\n//       </Space>\n//     </div>\n//   );\n// };\n\n// export default CreateSetupStepTwoForm;\n"]},"metadata":{},"sourceType":"module"}