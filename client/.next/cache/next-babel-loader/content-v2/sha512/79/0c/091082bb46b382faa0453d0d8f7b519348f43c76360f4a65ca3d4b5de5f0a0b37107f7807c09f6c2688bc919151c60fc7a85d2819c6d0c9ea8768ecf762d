{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/joshmcdaniel/Documents/work/repos/setup_share/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/joshmcdaniel/Documents/work/repos/setup_share/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/register.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Row, Col, Form, Input, Button, message, Typography } from \"antd\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nimport { BaseAPI } from \"../utils/constants/common\";\nimport styles from \"../pageStyles/register.module.scss\";\nvar Title = Typography.Title,\n    Text = Typography.Text;\nexport var __N_SSP = true;\nexport default function RegisterPage() {\n  _s();\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var router = useRouter();\n\n  var userRegistration = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values) {\n      var first_name, last_name, username, email, password, confrim_password, registerUser, response, errorMessage;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              first_name = values.first_name, last_name = values.last_name, username = values.username, email = values.email, password = values.password, confrim_password = values.confrim_password;\n\n              if (!(password !== confrim_password)) {\n                _context2.next = 5;\n                break;\n              }\n\n              message.error(\"Passswords do not match\");\n              _context2.next = 20;\n              break;\n\n            case 5:\n              _context2.prev = 5;\n              setLoading(true);\n              _context2.next = 9;\n              return axios.post(\"\".concat(BaseAPI, \"/user/register\"), {\n                first_name: first_name,\n                last_name: last_name,\n                username: username,\n                email: email,\n                password: password\n              });\n\n            case 9:\n              registerUser = _context2.sent;\n              response = registerUser;\n              message.success(\"Registration successful\");\n              setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return router.push(\"/login\");\n\n                      case 2:\n                        setLoading(false);\n\n                      case 3:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              })), 1000);\n              _context2.next = 20;\n              break;\n\n            case 15:\n              _context2.prev = 15;\n              _context2.t0 = _context2[\"catch\"](5);\n              errorMessage = _context2.t0.response.data.message;\n              message.error(errorMessage);\n              setLoading(false);\n\n            case 20:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[5, 15]]);\n    }));\n\n    return function userRegistration(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: styles.registerPageContainer,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      justify: \"center\",\n      align: \"middle\",\n      style: {\n        minHeight: \"100vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: {\n          span: 20\n        },\n        md: {\n          span: 18\n        },\n        lg: {\n          span: 12\n        },\n        xl: {\n          span: 8\n        },\n        id: styles.formWindow,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            level: 2,\n            children: \"ShareStation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Title, {\n            level: 3,\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: \"To Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          name: \"register\",\n          onFinish: userRegistration,\n          labelCol: {\n            span: 24\n          } // onFinishFailed={onFinishFailed}\n          ,\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"First Name\",\n            name: \"first_name\",\n            rules: [{\n              required: true,\n              message: \"Please input your first name\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Last Name\",\n            name: \"last_name\",\n            rules: [{\n              required: true,\n              message: \"Please input your last name\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"User Name\",\n            name: \"username\",\n            rules: [{\n              required: true,\n              message: \"Please input your user name\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Email\",\n            name: \"email\",\n            rules: [{\n              required: true,\n              message: \"Please input your email address\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Password\",\n            name: \"password\",\n            rules: [{\n              required: true,\n              message: \"Please input your password\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Confirm Passwrod\",\n            name: \"confrim_password\",\n            rules: [{\n              required: true,\n              message: \"Please confirm your password\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              size: \"large\",\n              shape: \"round\",\n              htmlType: \"submit\",\n              style: {\n                width: \"100%\",\n                marginTop: \".5rem\"\n              },\n              loading: loading,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterPage, \"wyLmrtRC2OKK6TwrXwYEMKxQaAo=\", false, function () {\n  return [useRouter];\n});\n\n_c = RegisterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"sources":["/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/register.tsx"],"names":["useState","Row","Col","Form","Input","Button","message","Typography","axios","useRouter","BaseAPI","styles","Title","Text","RegisterPage","loading","setLoading","router","userRegistration","values","first_name","last_name","username","email","password","confrim_password","error","post","registerUser","response","success","setTimeout","push","errorMessage","data","registerPageContainer","minHeight","span","formWindow","textAlign","required","width","marginTop"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { Row, Col, Form, Input, Button, message, Typography } from \"antd\";\nimport axios from \"axios\";\nimport { GetServerSideProps } from \"next\";\nimport { useRouter } from \"next/router\";\nimport { BaseAPI } from \"../utils/constants/common\";\nimport styles from \"../pageStyles/register.module.scss\";\nimport { ConsoleSqlOutlined } from \"@ant-design/icons\";\n\nconst { Title, Text } = Typography;\n\ninterface User {\n  first_name: string;\n  last_name: string;\n  username: string;\n  email: string;\n  password: string;\n  confrim_password: string;\n}\n\nexport default function RegisterPage() {\n  const [loading, setLoading] = useState(false);\n  const router = useRouter();\n\n  const userRegistration = async (values: User) => {\n    const {\n      first_name,\n      last_name,\n      username,\n      email,\n      password,\n      confrim_password,\n    } = values;\n    if (password !== confrim_password) {\n      message.error(\"Passswords do not match\");\n    } else {\n      try {\n        setLoading(true);\n        const registerUser = await axios.post(`${BaseAPI}/user/register`, {\n          first_name,\n          last_name,\n          username,\n          email,\n          password,\n        });\n        const response = registerUser;\n        message.success(\"Registration successful\");\n        setTimeout(async () => {\n          await router.push(\"/login\");\n          setLoading(false);\n        }, 1000);\n      } catch (error: any) {\n        const errorMessage = error.response.data.message;\n        message.error(errorMessage);\n        setLoading(false);\n      }\n    }\n  };\n  return (\n    <div id={styles.registerPageContainer}>\n      <Row justify=\"center\" align=\"middle\" style={{ minHeight: \"100vh\" }}>\n        <Col\n          xs={{ span: 20 }}\n          md={{ span: 18 }}\n          lg={{ span: 12 }}\n          xl={{ span: 8 }}\n          id={styles.formWindow}\n        >\n          <div style={{ textAlign: \"center\" }}>\n            <Title level={2}>ShareStation</Title>\n            <Title level={3}>Sign In</Title>\n            <Text>To Continue</Text>\n          </div>\n          <Form\n            name=\"register\"\n            onFinish={userRegistration}\n            labelCol={{ span: 24 }}\n            // onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              label=\"First Name\"\n              name=\"first_name\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your first name\",\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Last Name\"\n              name=\"last_name\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your last name\",\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              label=\"User Name\"\n              name=\"username\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your user name\",\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              label=\"Email\"\n              name=\"email\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your email address\",\n                },\n              ]}\n            >\n              <Input type=\"email\" />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Password\"\n              name=\"password\"\n              rules={[\n                { required: true, message: \"Please input your password\" },\n              ]}\n            >\n              <Input.Password />\n            </Form.Item>\n            <Form.Item\n              label=\"Confirm Passwrod\"\n              name=\"confrim_password\"\n              rules={[\n                { required: true, message: \"Please confirm your password\" },\n              ]}\n            >\n              <Input.Password />\n            </Form.Item>\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                size=\"large\"\n                shape=\"round\"\n                htmlType=\"submit\"\n                style={{ width: \"100%\", marginTop: \".5rem\" }}\n                loading={loading}\n              >\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport const getServerSideProps: GetServerSideProps = async (context: any) => {\n  try {\n    // const cookie = context.req.headers.cookie.replace(\"token=\", \"\");\n    const cookie = context.req.headers.cookie;\n    const response = await axios.post(`${BaseAPI}/user/pageauth`, { cookie });\n    const data = await response.data;\n    return {\n      redirect: {\n        permanent: false,\n        destination: \"/\",\n      },\n    };\n  } catch (error) {\n    return {\n      props: {},\n    };\n  }\n};\n"]},"metadata":{},"sourceType":"module"}