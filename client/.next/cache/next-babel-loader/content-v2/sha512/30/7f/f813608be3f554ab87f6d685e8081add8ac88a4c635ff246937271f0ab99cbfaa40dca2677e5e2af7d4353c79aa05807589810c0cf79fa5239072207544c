{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/dashboard.tsx\";\nimport { useEffect, useContext, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { UserContext } from \"../utils/context/userContext\";\nimport styles from \"../pageStyles/dashboard.module.scss\";\nimport DashboardLayout from \"../components/Layout/DashboardLayout\";\nimport { Button, PageHeader } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { BaseAPI } from \"../utils/constants/common\";\nimport axios from \"axios\";\nimport { pageAuthCheck } from \"../utils/helperFunctions/pageAuthCheck\";\nimport ProjectsList from \"../components/projectList/ProjectList\";\nimport cookies from \"next-cookies\";\nimport { useCookies } from \"react-cookie\";\nexport default function Dashboard(props) {\n  const router = useRouter();\n  const {\n    currentUser,\n    setUser\n  } = useContext(UserContext);\n  const {\n    userDashboardInfo\n  } = props;\n  const {\n    0: activeSetup,\n    1: setActiveSetup\n  } = useState();\n  const [cookies, setCookies] = useCookies([\"user\"]);\n  useEffect(() => {\n    if (!currentUser) {\n      reload();\n    }\n  }, []);\n\n  const reload = async () => {\n    try {\n      const response = await axios.get(`${BaseAPI}/user/usercontext`, {\n        withCredentials: true\n      });\n      const userInfo = await response.data;\n      setUser(userInfo);\n    } catch (error) {\n      return {\n        redirect: {\n          permanent: false,\n          destination: \"/login\"\n        }\n      };\n    }\n  };\n\n  const data = {\n    setups: [\"test\"],\n    items: [\"test item\"]\n  };\n  cookies.get(\"user\");\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    title: \"Dashboard\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: styles.dashboardContainer,\n      children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n        style: {\n          padding: \"1rem 0\"\n        },\n        title: \"Setups\",\n        extra: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          value: \"small\",\n          shape: \"round\",\n          children: [/*#__PURE__*/_jsxDEV(PlusOutlined, {}, \"2\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), \"New setup\"]\n        }, \"1\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          setCookie(\"user\", JSON.stringify(data), {\n            path: \"/\",\n            maxAge: 3600,\n            // Expires after 1hr\n            sameSite: true\n          });\n        },\n        type: \"primary\",\n        children: [\"test\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProjectsList, {\n        projects: userDashboardInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\nexport const getServerSideProps = async context => {\n  var _authCheck$props;\n\n  const allCookies = cookies(context);\n  const authCheck = await pageAuthCheck(context);\n\n  if ((_authCheck$props = authCheck.props) !== null && _authCheck$props !== void 0 && _authCheck$props.data.authd) {\n    try {\n      const response = await axios.get(`${BaseAPI}/user/dashboard/${authCheck.props.data.user}`);\n      const userDashboardInfo = await response.data;\n      return {\n        props: userDashboardInfo\n      };\n    } catch (e) {\n      return {\n        redirect: {\n          permanent: false,\n          destination: \"/login\"\n        }\n      };\n    }\n  } else {\n    return {\n      redirect: {\n        permanent: false,\n        destination: \"/login\"\n      }\n    };\n  }\n};","map":{"version":3,"sources":["/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/dashboard.tsx"],"names":["useEffect","useContext","useState","useRouter","UserContext","styles","DashboardLayout","Button","PageHeader","PlusOutlined","BaseAPI","axios","pageAuthCheck","ProjectsList","cookies","useCookies","Dashboard","props","router","currentUser","setUser","userDashboardInfo","activeSetup","setActiveSetup","setCookies","reload","response","get","withCredentials","userInfo","data","error","redirect","permanent","destination","setups","items","dashboardContainer","padding","setCookie","JSON","stringify","path","maxAge","sameSite","getServerSideProps","context","allCookies","authCheck","authd","user","e"],"mappings":"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","sourcesContent":["import { useEffect, useContext, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { UserContext } from \"../utils/context/userContext\";\nimport styles from \"../pageStyles/dashboard.module.scss\";\nimport DashboardLayout from \"../components/Layout/DashboardLayout\";\nimport { Button, PageHeader } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { GetServerSideProps } from \"next\";\nimport { BaseAPI } from \"../utils/constants/common\";\nimport axios from \"axios\";\nimport { pageAuthCheck } from \"../utils/helperFunctions/pageAuthCheck\";\nimport ProjectsList from \"../components/projectList/ProjectList\";\nimport cookies from \"next-cookies\";\nimport { useCookies } from \"react-cookie\";\nimport { getCookieParser } from \"next/dist/next-server/server/api-utils\";\n\ninterface Props {\n  userDashboardInfo: Array<dashboardItem>;\n}\ninterface dashboardItem {\n  user_id: string;\n  username: string;\n  setup_id: string;\n  setup_title: string;\n  setup_description: string;\n  setup_type: string;\n  setup_created_date: Date;\n  created_screen_type: any;\n  image_id: string;\n  image_url: string;\n  image_position: string;\n  image_position_number: number;\n}\n\nexport default function Dashboard(props: Props) {\n  const router = useRouter();\n  const { currentUser, setUser } = useContext<any>(UserContext);\n  const { userDashboardInfo } = props;\n  const [activeSetup, setActiveSetup] = useState();\n  const [cookies, setCookies] = useCookies([\"user\"]);\n\n  useEffect(() => {\n    if (!currentUser) {\n      reload();\n    }\n  }, []);\n\n  const reload = async () => {\n    try {\n      const response = await axios.get(`${BaseAPI}/user/usercontext`, {\n        withCredentials: true,\n      });\n      const userInfo = await response.data;\n      setUser(userInfo);\n    } catch (error) {\n      return {\n        redirect: {\n          permanent: false,\n          destination: \"/login\",\n        },\n      };\n    }\n  };\n\n  const data = {\n    setups: [\"test\"],\n    items: [\"test item\"],\n  };\n\n  cookies.get(\"user\");\n\n  return (\n    <DashboardLayout title=\"Dashboard\">\n      <div id={styles.dashboardContainer}>\n        <PageHeader\n          style={{ padding: \"1rem 0\" }}\n          title=\"Setups\"\n          extra={[\n            <Button type=\"primary\" key=\"1\" value=\"small\" shape=\"round\">\n              <PlusOutlined key=\"2\" />\n              New setup\n            </Button>,\n          ]}\n        />\n        <Button\n          onClick={() => {\n            setCookie(\"user\", JSON.stringify(data), {\n              path: \"/\",\n              maxAge: 3600, // Expires after 1hr\n              sameSite: true,\n            });\n          }}\n          type=\"primary\"\n        >\n          test{\" \"}\n        </Button>\n        <ProjectsList projects={userDashboardInfo} />\n      </div>\n    </DashboardLayout>\n  );\n}\n\nexport const getServerSideProps: GetServerSideProps = async (context) => {\n  const allCookies = cookies(context);\n\n  const authCheck = await pageAuthCheck(context);\n  if (authCheck.props?.data.authd) {\n    try {\n      const response = await axios.get(\n        `${BaseAPI}/user/dashboard/${authCheck.props.data.user}`\n      );\n      const userDashboardInfo = await response.data;\n      return {\n        props: userDashboardInfo,\n      };\n    } catch (e) {\n      return {\n        redirect: {\n          permanent: false,\n          destination: \"/login\",\n        },\n      };\n    }\n  } else {\n    return {\n      redirect: {\n        permanent: false,\n        destination: \"/login\",\n      },\n    };\n  }\n};\n"]},"metadata":{},"sourceType":"module"}