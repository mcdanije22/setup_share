{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/setup/[id].tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { Row, Col, PageHeader, Typography } from \"antd\";\nimport ImageMapper from \"react-image-mapper\";\nimport { Carousel, Tabs, Divider } from \"antd\";\nimport { HeartTwoTone, EyeOutlined } from \"@ant-design/icons\";\nimport styles from \"./setupPage.module.scss\";\nconst {\n  Link,\n  Title\n} = Typography;\nconst {\n  TabPane\n} = Tabs;\nexport default function SetupPage(props) {\n  const {\n    0: currentImageView,\n    1: setImageView\n  } = useState(\"Main\");\n  const {\n    0: currentImageObject,\n    1: setImageObject\n  } = useState({});\n  const {\n    0: currentImageItems,\n    1: setImageItems\n  } = useState([]);\n  const {\n    0: currentImageCoordList,\n    1: setImageCoordList\n  } = useState([]);\n  const {\n    0: imageAreas,\n    1: setImageAreas\n  } = useState([]);\n  const {\n    getSetUpInfo,\n    getImageItems\n  } = props;\n  useEffect(() => {\n    console.log(props);\n\n    if (getSetUpInfo.length > 1) {\n      carouselRef.current.goTo(1, true);\n    }\n  }, []);\n  useEffect(() => {\n    setDataPageInfo();\n  }, [currentImageView]);\n\n  const setDataPageInfo = async () => {\n    const filteredImageObject = getSetUpInfo.filter((imageObject, i) => {\n      return imageObject.image_position === currentImageView;\n    });\n    setImageObject(filteredImageObject[0]); // const currentItems = await getImageItems.filter((item, i) => {\n    //   return item.image_id === filteredImageObject[0].image_id;\n    // });\n    // const setItemCoords = await getImageItems.map((item, i) => {\n    //   if (item.image_id === filteredImageObject[0].image_id) {\n    //     getItemcoordsList(item);\n    //   }\n    // });\n    //use area functions only\n\n    const createMapAreas = await getImageItems.map((item, i) => {\n      if (item.image_id === filteredImageObject[0].image_id) {\n        const currentList = imageAreas;\n        const addToAreaList = currentList.push(createArea(item));\n        console.log(\"test\", imageAreas);\n      }\n    });\n    console.log(\"new\", imageAreas); // setImageItems(currentItems);\n  };\n\n  const createArea = item => {\n    return {\n      id: item.item_id,\n      name: item.item_name,\n      shape: \"poly\",\n      coords: [...item.coords_list],\n      url: item.item_url,\n      preFillColor: \"green\",\n      fillColor: \"blue\"\n    };\n  };\n\n  const getItemcoordsList = item => {\n    const currentList = currentImageCoordList;\n    const addToCoordList = currentList.push(...item.coords_list);\n    setImageCoordList(currentList);\n  };\n\n  console.log(currentImageCoordList);\n  let MAP = {\n    name: \"image-map\",\n    areas: [...imageAreas]\n  };\n\n  function onChange(a) {\n    setImageView(getSetUpInfo[a].image_position);\n  }\n\n  function callback(key) {\n    console.log(key);\n  }\n\n  const carouselRef = /*#__PURE__*/React.createRef();\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: `${getSetUpInfo[0].username}'s ${getSetUpInfo[0].setup_title} setup`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: styles.setupPageContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          justify: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            span: 24,\n            children: /*#__PURE__*/_jsxDEV(Title, {\n              level: 1,\n              style: {\n                textAlign: \"center\"\n              },\n              children: getSetUpInfo[0].setup_title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          justify: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            span: 22,\n            children: /*#__PURE__*/_jsxDEV(PageHeader, {\n              title: `${getSetUpInfo[0].username}`,\n              extra: [/*#__PURE__*/_jsxDEV(HeartTwoTone, {\n                twoToneColor: \"#eb2f96\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 25\n              }, this)],\n              avatar: {\n                src: \"https://avatars1.githubusercontent.com/u/8186664?s=460&v=4\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          justify: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            span: 24,\n            children: /*#__PURE__*/_jsxDEV(Carousel, {\n              afterChange: onChange,\n              ref: carouselRef,\n              children: getSetUpInfo.sort((a, b) => a.image_position_number > b.image_position_number ? 1 : -1).map((item, i) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(ImageMapper, {\n                    src: item.image_url,\n                    map: MAP,\n                    width: 375,\n                    height: 350,\n                    onMouseEnter: area => {\n                      alert(\"test\");\n                    },\n                    onImageClick: e => {\n                      console.log(\"test\");\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 25\n                  }, this)\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          justify: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            span: 24,\n            children: /*#__PURE__*/_jsxDEV(Title, {\n              level: 3,\n              style: {\n                textAlign: \"center\",\n                marginTop: \"1rem\"\n              },\n              children: currentImageObject.image_position\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            span: 24,\n            children: /*#__PURE__*/_jsxDEV(Tabs, {\n              defaultActiveKey: \"1\",\n              onChange: callback,\n              children: [/*#__PURE__*/_jsxDEV(TabPane, {\n                tab: \"Items\",\n                children: imageAreas.map((item, i) => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Row, {\n                      justify: \"space-between\",\n                      children: [/*#__PURE__*/_jsxDEV(Col, {\n                        children: [i + 1, \".\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n                          href: `${item.item_url}`,\n                          target: \"_blank\",\n                          rel: \"noopener noreferrer\",\n                          children: item.item_name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 176,\n                          columnNumber: 29\n                        }, this)]\n                      }, i, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 174,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(EyeOutlined, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 184,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 25\n                    }, this), i !== currentImageItems.length - 1 ? /*#__PURE__*/_jsxDEV(Divider, {\n                      orientation: \"left\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 187,\n                      columnNumber: 27\n                    }, this) : \"\"]\n                  }, i, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 23\n                  }, this);\n                })\n              }, \"1\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                tab: \"Description\",\n                children: getSetUpInfo[0].setup_description\n              }, \"2\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                tab: \"Comments\",\n                children: \"Content of Tab Pane 3\"\n              }, \"3\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\nexport const getServerSideProps = async context => {\n  const {\n    id\n  } = context.query;\n  const response = await axios.get(`${process.env.BASE_API}/setup/${id}`);\n  const setUpPageData = await response.data;\n  return {\n    props: setUpPageData\n  };\n};","map":{"version":3,"sources":["/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/setup/[id].tsx"],"names":["React","useEffect","useState","Layout","axios","Row","Col","PageHeader","Typography","ImageMapper","Carousel","Tabs","Divider","HeartTwoTone","EyeOutlined","styles","Link","Title","TabPane","SetupPage","props","currentImageView","setImageView","currentImageObject","setImageObject","currentImageItems","setImageItems","currentImageCoordList","setImageCoordList","imageAreas","setImageAreas","getSetUpInfo","getImageItems","console","log","length","carouselRef","current","goTo","setDataPageInfo","filteredImageObject","filter","imageObject","i","image_position","createMapAreas","map","item","image_id","currentList","addToAreaList","push","createArea","id","item_id","name","item_name","shape","coords","coords_list","url","item_url","preFillColor","fillColor","getItemcoordsList","addToCoordList","MAP","areas","onChange","a","callback","key","createRef","username","setup_title","setupPageContainer","textAlign","src","sort","b","image_position_number","image_url","area","alert","e","marginTop","setup_description","getServerSideProps","context","query","response","get","process","env","BASE_API","setUpPageData","data"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport {\n  Row,\n  Col,\n  Form,\n  Input,\n  Button,\n  Checkbox,\n  PageHeader,\n  Typography,\n  Avatar,\n  Space,\n} from \"antd\";\nimport { GetServerSideProps } from \"next\";\nimport ImageMapper from \"react-image-mapper\";\nimport { Carousel, Tabs, Divider } from \"antd\";\nimport { UserOutlined, HeartTwoTone, EyeOutlined } from \"@ant-design/icons\";\nimport styles from \"./setupPage.module.scss\";\n\nconst { Link, Title } = Typography;\nconst { TabPane } = Tabs;\n\ninterface Props {\n  getSetUpInfo: Array<any>;\n}\n\nexport default function SetupPage(props: Props) {\n  const [currentImageView, setImageView] = useState<string>(\"Main\");\n  const [currentImageObject, setImageObject] = useState<object>({});\n  const [currentImageItems, setImageItems] = useState([]);\n  const [currentImageCoordList, setImageCoordList] = useState([]);\n  const [imageAreas, setImageAreas] = useState([]);\n  const { getSetUpInfo, getImageItems } = props;\n\n  useEffect(() => {\n    console.log(props);\n    if (getSetUpInfo.length > 1) {\n      carouselRef.current.goTo(1, true);\n    }\n  }, []);\n\n  useEffect(() => {\n    setDataPageInfo();\n  }, [currentImageView]);\n\n  const setDataPageInfo = async () => {\n    const filteredImageObject = getSetUpInfo.filter((imageObject, i) => {\n      return imageObject.image_position === currentImageView;\n    });\n    setImageObject(filteredImageObject[0]);\n    // const currentItems = await getImageItems.filter((item, i) => {\n    //   return item.image_id === filteredImageObject[0].image_id;\n    // });\n    // const setItemCoords = await getImageItems.map((item, i) => {\n    //   if (item.image_id === filteredImageObject[0].image_id) {\n    //     getItemcoordsList(item);\n    //   }\n    // });\n    //use area functions only\n    const createMapAreas = await getImageItems.map((item, i) => {\n      if (item.image_id === filteredImageObject[0].image_id) {\n        const currentList = imageAreas;\n        const addToAreaList = currentList.push(createArea(item));\n        console.log(\"test\", imageAreas);\n      }\n    });\n    console.log(\"new\", imageAreas);\n    // setImageItems(currentItems);\n  };\n  const createArea = (item) => {\n    return {\n      id: item.item_id,\n      name: item.item_name,\n      shape: \"poly\",\n      coords: [...item.coords_list],\n      url: item.item_url,\n      preFillColor: \"green\",\n      fillColor: \"blue\",\n    };\n  };\n  const getItemcoordsList = (item) => {\n    const currentList = currentImageCoordList;\n    const addToCoordList = currentList.push(...item.coords_list);\n    setImageCoordList(currentList);\n  };\n  console.log(currentImageCoordList);\n  let MAP = {\n    name: \"image-map\",\n    areas: [...imageAreas],\n  };\n\n  function onChange(a) {\n    setImageView(getSetUpInfo[a].image_position);\n  }\n  function callback(key) {\n    console.log(key);\n  }\n\n  const carouselRef = React.createRef();\n\n  return (\n    <Layout\n      title={`${getSetUpInfo[0].username}'s ${getSetUpInfo[0].setup_title} setup`}\n    >\n      <div id={styles.setupPageContainer}>\n        <div>\n          <Row justify=\"center\">\n            <Col span={24}>\n              <Title level={1} style={{ textAlign: \"center\" }}>\n                {getSetUpInfo[0].setup_title}\n              </Title>\n            </Col>\n          </Row>\n          <Row justify=\"center\">\n            <Col span={22}>\n              <PageHeader\n                title={`${getSetUpInfo[0].username}`}\n                extra={[<HeartTwoTone twoToneColor=\"#eb2f96\" />]}\n                avatar={{\n                  src: \"https://avatars1.githubusercontent.com/u/8186664?s=460&v=4\",\n                }}\n              />\n            </Col>\n          </Row>\n\n          <Row justify=\"center\">\n            <Col span={24}>\n              <Carousel afterChange={onChange} ref={carouselRef}>\n                {getSetUpInfo\n                  .sort((a, b) =>\n                    a.image_position_number > b.image_position_number ? 1 : -1\n                  )\n                  .map((item, i) => {\n                    return (\n                      <div key={i}>\n                        <ImageMapper\n                          src={item.image_url}\n                          map={MAP}\n                          width={375}\n                          height={350}\n                          onMouseEnter={(area: any) => {\n                            alert(\"test\");\n                          }}\n                          onImageClick={(e: any) => {\n                            console.log(\"test\");\n                          }}\n                        />\n                      </div>\n                    );\n                  })}\n              </Carousel>\n            </Col>\n          </Row>\n          <Row justify=\"center\">\n            <Col span={24}>\n              <Title\n                level={3}\n                style={{ textAlign: \"center\", marginTop: \"1rem\" }}\n              >\n                {currentImageObject.image_position}\n              </Title>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={24}>\n              <Tabs defaultActiveKey=\"1\" onChange={callback}>\n                <TabPane tab=\"Items\" key=\"1\">\n                  {imageAreas.map((item, i) => {\n                    return (\n                      <div key={i}>\n                        <Row justify=\"space-between\">\n                          <Col key={i}>\n                            {i + 1}.{\" \"}\n                            <Link\n                              href={`${item.item_url}`}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              {item.item_name}\n                            </Link>\n                          </Col>\n                          <EyeOutlined />\n                        </Row>\n                        {i !== currentImageItems.length - 1 ? (\n                          <Divider orientation=\"left\" />\n                        ) : (\n                          \"\"\n                        )}\n                      </div>\n                    );\n                  })}\n                </TabPane>\n                <TabPane tab=\"Description\" key=\"2\">\n                  {getSetUpInfo[0].setup_description}\n                </TabPane>\n                <TabPane tab=\"Comments\" key=\"3\">\n                  Content of Tab Pane 3\n                </TabPane>\n              </Tabs>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport const getServerSideProps: GetServerSideProps = async (context) => {\n  const { id } = context.query;\n  const response = await axios.get(`${process.env.BASE_API}/setup/${id}`);\n  const setUpPageData = await response.data;\n  return {\n    props: setUpPageData,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}