{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/login.tsx\";\nimport { useState, useContext, useEffect } from \"react\";\nimport { Row, Col, Form, Input, Button, message, Typography } from \"antd\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nimport { BaseAPI } from \"../utils/constants/common\";\nimport styles from \"../pageStyles/login.module.scss\";\nimport { UserContext } from \"../utils/context/userContext\";\nconst {\n  Title,\n  Text\n} = Typography;\nexport default function LoginPage() {\n  const {\n    currentUser,\n    setUser\n  } = useContext(UserContext);\n  const router = useRouter();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  useEffect(() => {\n    contextCheck();\n  }, []);\n\n  const contextCheck = () => {\n    if (currentUser) {\n      return {\n        redirect: {\n          permanent: false,\n          destination: \"/\"\n        }\n      };\n    }\n  };\n\n  const userLogin = async values => {\n    const {\n      email,\n      password\n    } = values;\n    setLoading(true);\n\n    try {\n      const getUser = await axios.post(`${BaseAPI}/user/login`, {\n        email,\n        password\n      }, {\n        withCredentials: true\n      });\n      const response = getUser;\n      setUser(getUser.data.user);\n      message.success(\"Logged in successfully\");\n      setTimeout(async () => {\n        await router.push(\"/\");\n        setLoading(false);\n      }, 1000);\n    } catch (error) {\n      const errorMessage = error.response.data.message;\n      message.error(errorMessage);\n      setLoading(false);\n    }\n  };\n\n  const test = async () => {\n    try {\n      const getTest = await axios.get(`${BaseAPI}/user/test`, {\n        withCredentials: true\n      });\n      const data = getTest;\n      console.log(data);\n    } catch (error) {\n      console.log(error.response.data.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: styles.loginPageContainer,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      justify: \"center\",\n      align: \"middle\",\n      style: {\n        minHeight: \"100vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: {\n          span: 20\n        },\n        md: {\n          span: 18\n        },\n        lg: {\n          span: 12\n        },\n        xl: {\n          span: 8\n        },\n        id: styles.formWindow,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            level: 2,\n            children: \"ShareStation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Title, {\n            level: 3,\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: \"To Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          labelCol: {\n            span: 24\n          },\n          name: \"login\",\n          onFinish: userLogin // onFinishFailed={onFinishFailed}\n          ,\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Email\",\n            name: \"email\",\n            rules: [{\n              required: true,\n              message: \"Please input your email address\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Password\",\n            name: \"password\",\n            rules: [{\n              required: true,\n              message: \"Please input your password\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              size: \"large\",\n              shape: \"round\",\n              htmlType: \"submit\",\n              style: {\n                width: \"100%\",\n                marginTop: \".5rem\"\n              },\n              loading: loading,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: test,\n        children: \"test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/login.tsx"],"names":["useState","useContext","useEffect","Row","Col","Form","Input","Button","message","Typography","axios","useRouter","BaseAPI","styles","UserContext","Title","Text","LoginPage","currentUser","setUser","router","loading","setLoading","contextCheck","redirect","permanent","destination","userLogin","values","email","password","getUser","post","withCredentials","response","data","user","success","setTimeout","push","error","errorMessage","test","getTest","get","console","log","loginPageContainer","minHeight","span","formWindow","textAlign","required","width","marginTop"],"mappings":"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","sourcesContent":["import {\n  useState,\n  useContext,\n  Dispatch,\n  SetStateAction,\n  useEffect,\n} from \"react\";\nimport {\n  Row,\n  Col,\n  Form,\n  Input,\n  Button,\n  Checkbox,\n  message,\n  PageHeader,\n  Typography,\n} from \"antd\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nimport { BaseAPI } from \"../utils/constants/common\";\nimport styles from \"../pageStyles/login.module.scss\";\nimport { UserContext } from \"../utils/context/userContext\";\n\nconst { Title, Text } = Typography;\n\ninterface User {\n  email: string;\n  password: string;\n}\n\nexport default function LoginPage() {\n  const { currentUser, setUser } = useContext<any>(UserContext);\n  const router = useRouter();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    contextCheck();\n  }, []);\n\n  const contextCheck = () => {\n    if (currentUser) {\n      return {\n        redirect: {\n          permanent: false,\n          destination: \"/\",\n        },\n      };\n    }\n  };\n\n  const userLogin = async (values: User) => {\n    const { email, password } = values;\n    setLoading(true);\n    try {\n      const getUser = await axios.post(\n        `${BaseAPI}/user/login`,\n        {\n          email,\n          password,\n        },\n        {\n          withCredentials: true,\n        }\n      );\n      const response = getUser;\n      setUser(getUser.data.user);\n      message.success(\"Logged in successfully\");\n      setTimeout(async () => {\n        await router.push(\"/\");\n        setLoading(false);\n      }, 1000);\n    } catch (error: any) {\n      const errorMessage = error.response.data.message;\n      message.error(errorMessage);\n      setLoading(false);\n    }\n  };\n  const test = async () => {\n    try {\n      const getTest = await axios.get(`${BaseAPI}/user/test`, {\n        withCredentials: true,\n      });\n      const data = getTest;\n      console.log(data);\n    } catch (error: any) {\n      console.log(error.response.data.message);\n    }\n  };\n  return (\n    <div id={styles.loginPageContainer}>\n      <Row justify=\"center\" align=\"middle\" style={{ minHeight: \"100vh\" }}>\n        <Col\n          xs={{ span: 20 }}\n          md={{ span: 18 }}\n          lg={{ span: 12 }}\n          xl={{ span: 8 }}\n          id={styles.formWindow}\n        >\n          <div style={{ textAlign: \"center\" }}>\n            <Title level={2}>ShareStation</Title>\n            <Title level={3}>Sign In</Title>\n            <Text>To Continue</Text>\n          </div>\n          <Form\n            labelCol={{ span: 24 }}\n            name=\"login\"\n            onFinish={userLogin}\n            // onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              label=\"Email\"\n              name=\"email\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your email address\",\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              label=\"Password\"\n              name=\"password\"\n              rules={[\n                { required: true, message: \"Please input your password\" },\n              ]}\n            >\n              <Input.Password />\n            </Form.Item>\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                size=\"large\"\n                shape=\"round\"\n                htmlType=\"submit\"\n                style={{ width: \"100%\", marginTop: \".5rem\" }}\n                loading={loading}\n              >\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n        </Col>\n        <Button onClick={test}>test</Button>\n      </Row>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}