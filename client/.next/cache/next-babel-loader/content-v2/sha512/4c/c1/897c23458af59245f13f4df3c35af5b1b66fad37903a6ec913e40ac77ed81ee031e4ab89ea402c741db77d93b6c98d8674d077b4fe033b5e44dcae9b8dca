{"ast":null,"code":"import axios from \"axios\";\nimport { BaseAPI } from \"../constants/common\";\nexport const pageAuthCheck = async (context, currentUser) => {\n  try {\n    const cookie = context.req.headers.cookie.replace(\"token=\", \"\");\n    const response = await axios.post(`${BaseAPI}/user/pageauth`, {\n      cookie\n    });\n    const data = await response.data;\n    return {\n      props: {\n        user: data\n      }\n    };\n  } catch (error) {\n    return {\n      redirect: {\n        permanent: false,\n        destination: \"/login\"\n      }\n    };\n  }\n};","map":{"version":3,"sources":["/Users/joshmcdaniel/Documents/work/repos/setup_share/utils/helperFunctions/pageAuthCheck.tsx"],"names":["axios","BaseAPI","pageAuthCheck","context","currentUser","cookie","req","headers","replace","response","post","data","props","user","error","redirect","permanent","destination"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AAYA,OAAO,MAAMC,aAAa,GAAG,OAAOC,OAAP,EAAqBC,WAArB,KAA2C;AACtE,MAAI;AACF,UAAMC,MAAM,GAAGF,OAAO,CAACG,GAAR,CAAYC,OAAZ,CAAoBF,MAApB,CAA2BG,OAA3B,CAAmC,QAAnC,EAA6C,EAA7C,CAAf;AACA,UAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAY,GAAET,OAAQ,gBAAtB,EAAuC;AAAEI,MAAAA;AAAF,KAAvC,CAAvB;AACA,UAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAA5B;AACA,WAAO;AACLC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAEF;AAAR;AADF,KAAP;AAGD,GAPD,CAOE,OAAOG,KAAP,EAAc;AACd,WAAO;AACLC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,SAAS,EAAE,KADH;AAERC,QAAAA,WAAW,EAAE;AAFL;AADL,KAAP;AAMD;AACF,CAhBM","sourcesContent":["import axios from \"axios\";\nimport { BaseAPI } from \"../constants/common\";\n\ninterface User {\n  username: string;\n  email: string;\n  password: string;\n  first_name: string;\n  last_name: string;\n  user_created_date: Date;\n  subscription_exp_date: Date;\n}\n\nexport const pageAuthCheck = async (context: any, currentUser: User) => {\n  try {\n    const cookie = context.req.headers.cookie.replace(\"token=\", \"\");\n    const response = await axios.post(`${BaseAPI}/user/pageauth`, { cookie });\n    const data = await response.data;\n    return {\n      props: { user: data },\n    };\n  } catch (error) {\n    return {\n      redirect: {\n        permanent: false,\n        destination: \"/login\",\n      },\n    };\n  }\n};\n"]},"metadata":{},"sourceType":"module"}