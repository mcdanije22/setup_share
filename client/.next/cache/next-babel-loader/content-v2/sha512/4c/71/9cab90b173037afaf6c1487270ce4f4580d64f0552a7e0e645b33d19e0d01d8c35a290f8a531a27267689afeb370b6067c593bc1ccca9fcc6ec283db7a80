{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/Users/joshmcdaniel/Documents/work/repos/setup_share/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/joshmcdaniel/Documents/work/repos/setup_share/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/joshmcdaniel/Documents/work/repos/setup_share/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/setup/[id].tsx\",\n    _s = $RefreshSig$();\n\n//import React, { useEffect, useState } from \"react\";\n//import Layout from \"../../components/Layout/Layout\";\n//import { v4 as uuidv4 } from \"uuid\";\n//import axios from \"axios\";\n//import {\n//  Row,\n//  Col,\n//  Form,\n//  Input,\n//  Button,\n//  Checkbox,\n//  PageHeader,\n//  Typography,\n//  Avatar,\n//  Space,\n//} from \"antd\";\n//import { GetServerSideProps } from \"next\";\n//import ImageMapper from \"react-image-mapper\";\n//import { Carousel, Tabs, Divider } from \"antd\";\n//import {\n//  UserOutlined,\n//  HeartTwoTone,\n//  EyeOutlined,\n//  LeftOutlined,\n//  RightOutlined,\n//} from \"@ant-design/icons\";\n//import styles from \"./setupPage.module.scss\";\n//import ImageOneMapContainer from \"../../components/imageMapContainers/ImageOneMapContainer\";\n//import ImageTwoMapContainer from \"../../components/imageMapContainers/ImageTwoMapContainer\";\n//import ImageThreeMapContainer from \"../../components/imageMapContainers/ImageThreeMapContainer\";\n//const { Link, Title } = Typography;\n//const { TabPane } = Tabs;\n//interface Props {\n//  getSetUpInfo: Array<any>;\n//}\n//export default function SetupPage(props: Props) {\n//  const [currentImageView, setImageView] = useState<string>(\"Main\");\n//  const [currentImageObject, setImageObject] = useState<object>({});\n//  const [currentImageItems, setImageItems] = useState([]);\n//  const [isActive, setActiveStatus] = useState(false);\n//  const [imageAreas, setImageAreas] = useState([]);\n//  const { getSetUpInfo, getImageItems } = props;\n//  const [fillColor, setFillColor] = useState(\"\");\n//  useEffect(() => {\n//    console.log(props);\n//    if (getSetUpInfo.length > 1) {\n//      carouselRef.current.goTo(1, true);\n//    }\n//  }, []);\n//  useEffect(() => {\n//    setDataPageInfo();\n//    resetCurrentImageAreas();\n//  }, [currentImageView]);\n//  useEffect(() => {\n//    setDataPageInfo();\n//    createCurrentImageAreasList();\n//  }, [currentImageObject]);\n//  const setDataPageInfo = async () => {\n//    const filteredImageObject = getSetUpInfo.filter((imageObject, i) => {\n//      return imageObject.image_position === currentImageView;\n//    });\n//    setImageObject(filteredImageObject[0]);\n//    //shouldn't need this logic but items dont show without it\n//    const currentItems = await getImageItems.filter((item, i) => {\n//      return item.image_id === filteredImageObject[0].image_id;\n//    });\n//    setImageItems(currentItems);\n//  };\n//  const createCurrentImageAreasList = async () => {\n//    const createMapAreas = await getImageItems.map((item, i) => {\n//      let currentList = imageAreas;\n//      if (item.image_id === currentImageObject.image_id) {\n//        const addToAreaList = currentList.push(createArea(item));\n//        console.log(\"test\", imageAreas);\n//      }\n//      setImageAreas(currentList);\n//    });\n//  };\n//  const createArea = (item) => {\n//    return {\n//      id: item.item_id,\n//      name: item.item_name,\n//      shape: \"poly\",\n//      coords: [...item.coords_list],\n//      href: item.item_url,\n//      preFillColor: \"transparent\",\n//    };\n//  };\n//  const resetCurrentImageAreas = () => {\n//    MAP.areas = [];\n//    setImageAreas([]);\n//  };\n//  let MAP = {\n//    name: uuidv4(),\n//    areas: [...imageAreas],\n//  };\n//  let MAP2 = {\n//    name: uuidv4(),\n//    areas: [...imageAreas],\n//  };\n//  function onChange(a) {\n//    setImageView(getSetUpInfo[a].image_position);\n//  }\n//  function callback(key) {\n//    console.log(key);\n//  }\n//  const carouselRef = React.createRef();\n//  console.log(currentImageObject);\n//  return (\n//    <Layout\n//      title={`${getSetUpInfo[0].username}'s ${getSetUpInfo[0].setup_title} setup`}\n//    >\n//      <div id={styles.setupPageContainer}>\n//        <div>\n//          <Row justify=\"center\">\n//            <Col span={24}>\n//              <Title level={1} style={{ textAlign: \"center\" }}>\n//                {getSetUpInfo[0].setup_title}\n//              </Title>\n//            </Col>\n//          </Row>\n//          <Row justify=\"center\">\n//            <Col span={22}>\n//              <PageHeader\n//                title={`${getSetUpInfo[0].username}`}\n//                extra={<HeartTwoTone twoToneColor=\"#eb2f96\" />}\n//                avatar={{\n//                  src: \"https://avatars1.githubusercontent.com/u/8186664?s=460&v=4\",\n//                }}\n//              />\n//            </Col>\n//          </Row>\n//          <Row>\n//            <Col span={24} style={{ display: \"\" }}>\n//              <ImageOneMapContainer\n//                name={getSetUpInfo[0].image_id}\n//                area={imageAreas}\n//              />\n//            </Col>\n//            <Col span={24} style={{ display: \"none\" }}>\n//              <ImageTwoMapContainer\n//                name={getSetUpInfo[1].image_id}\n//                area={imageAreas}\n//              />\n//            </Col>\n//            <Col span={24} style={{ display: \"none\" }}>\n//              <ImageThreeMapContainer name={\"test\"} area={imageAreas} />\n//            </Col>\n//          </Row>\n//          <Row justify=\"center\" style={{ padding: \".5rem 0\" }}>\n//            <Col span={22}>\n//              <Row justify=\"space-between\" style={{ alignItems: \"center\" }}>\n//                <Col>\n//                  <LeftOutlined />\n//                </Col>\n//                <Col>\n//                  <Title level={3} style={{ margin: \"0\" }}>\n//                    {currentImageObject.image_position}\n//                  </Title>\n//                </Col>\n//                <Col>\n//                  <RightOutlined />\n//                </Col>\n//              </Row>\n//            </Col>\n//          </Row>\n//          <Row justify=\"center\">\n//            <Col span={24}>\n//              <Carousel afterChange={onChange} ref={carouselRef}>\n//                {getSetUpInfo\n//                  .sort((a, b) =>\n//                    a.image_position_number > b.image_position_number ? 1 : -1\n//                  )\n//                  .map((item, i) => {\n//                    return (\n//                      <div key={i}>\n//                        <ImageMapper\n//                          src={item.image_url}\n//                          map={MAP}\n//                          fillColor={\"red\"}\n//                          width={375}\n//                          height={350}\n//                          onMouseEnter={(area: any) => {\n//                            console.log(area);\n//                          }}\n//                          onImageClick={(e: any) => {\n//                            console.log(\"test\");\n//                          }}\n//                        />\n//                      </div>\n//                    );\n//                  })}\n//              </Carousel>\n//            </Col>\n//          </Row>\n//          <Row justify=\"center\">\n//            <Col span={24}>\n//              <Title\n//                level={3}\n//                style={{ textAlign: \"center\", marginTop: \"1rem\" }}\n//              >\n//                {currentImageObject.image_position}\n//              </Title>\n//            </Col>\n//          </Row>\n//          <Row>\n//            <Col span={24}>\n//              <Tabs defaultActiveKey=\"1\" onChange={callback}>\n//                <TabPane tab=\"Items\" key=\"1\">\n//                  {imageAreas.map((item, i) => {\n//                    return (\n//                      <div key={i}>\n//                        <Row justify=\"space-between\">\n//                          <Col key={i}>\n//                            {i + 1}.{\" \"}\n//                            <Link\n//                              href={`${item.href}`}\n//                              target=\"_blank\"\n//                              rel=\"noopener noreferrer\"\n//                            >\n//                              {item.name}\n//                            </Link>\n//                          </Col>\n//                          <EyeOutlined />\n//                        </Row>\n//                        {i !== imageAreas.length - 1 ? (\n//                          <Divider orientation=\"left\" />\n//                        ) : (\n//                          \"\"\n//                        )}\n//                      </div>\n//                    );\n//                  })}\n//                </TabPane>\n//                <TabPane tab=\"Description\" key=\"2\">\n//                  {getSetUpInfo[0].setup_description}\n//                </TabPane>\n//                <TabPane tab=\"Comments\" key=\"3\">\n//                  Content of Tab Pane 3\n//                </TabPane>\n//              </Tabs>\n//            </Col>\n//          </Row>\n//        </div>\n//      </div>\n//    </Layout>\n//  );\n//}\n//export const getServerSideProps: GetServerSideProps = async (context) => {\n//  const { id } = context.query;\n//  const response = await axios.get(`${process.env.BASE_API}/setup/${id}`);\n//  const setUpPageData = await response.data;\n//  return {\n//    props: setUpPageData,\n//  };\n//};\n//\n//\n//\nimport React, { useEffect, useState } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport { Row, Col, PageHeader, Typography } from \"antd\";\nimport { Tabs, Divider } from \"antd\";\nimport { HeartTwoTone, EyeOutlined, LeftOutlined, RightOutlined } from \"@ant-design/icons\";\nimport styles from \"./setupPage.module.scss\";\nimport ImageMapContainer from \"../../components/imageMapContainer/ImageMapContainer\";\nvar Link = Typography.Link,\n    Title = Typography.Title,\n    Text = Typography.Text;\nvar TabPane = Tabs.TabPane;\nexport var __N_SSP = true;\nexport default function SetupPage(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(\"Main\"),\n      currentImageView = _useState[0],\n      setImageView = _useState[1];\n\n  var _useState2 = useState({}),\n      currentImageObject = _useState2[0],\n      setImageObject = _useState2[1];\n\n  var _useState3 = useState([]),\n      currentImageItems = _useState3[0],\n      setImageItems = _useState3[1];\n\n  var _useState4 = useState(false),\n      isActive = _useState4[0],\n      setActiveStatus = _useState4[1];\n\n  var _useState5 = useState([]),\n      imageAreas = _useState5[0],\n      setImageAreas = _useState5[1];\n\n  var getSetUpInfo = props.getSetUpInfo,\n      getImageItems = props.getImageItems;\n\n  var _useState6 = useState(\"\"),\n      fillColor = _useState6[0],\n      setFillColor = _useState6[1];\n\n  var _useState7 = useState([]),\n      imagePositions = _useState7[0],\n      setPositionList = _useState7[1];\n\n  useEffect(function () {\n    console.log(props);\n\n    if (getSetUpInfo.length > 1) {}\n\n    var list = [];\n    getSetUpInfo.map(function (item, i) {\n      list.push(item.image_position);\n      setPositionList(list);\n    });\n  }, []);\n  useEffect(function () {\n    createCurrentImageAreasList(); // resetCurrentImageAreas();\n  }, [currentImageView]);\n  useEffect(function () {\n    setDataPageInfo();\n    createCurrentImageAreasList();\n  }, [currentImageObject]);\n\n  var setDataPageInfo = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var filteredImageObject, currentItems;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              filteredImageObject = getSetUpInfo.filter(function (imageObject, i) {\n                return imageObject.image_position === currentImageView;\n              });\n              setImageObject(filteredImageObject[0]); //shouldn't need this logic but items dont show without it\n\n              _context.next = 4;\n              return getImageItems.filter(function (item, i) {\n                return item.image_id === filteredImageObject[0].image_id;\n              });\n\n            case 4:\n              currentItems = _context.sent;\n              setImageItems(currentItems);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function setDataPageInfo() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var createCurrentImageAreasList = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var currentList, createMapAreas;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              currentList = [];\n              _context2.next = 3;\n              return getImageItems.map(function (item, i) {\n                if (item.image_id === currentImageObject.image_id) {\n                  var addToAreaList = currentList.push(createArea(item));\n                  console.log(\"test\", imageAreas);\n                }\n\n                setImageAreas(currentList);\n              });\n\n            case 3:\n              createMapAreas = _context2.sent;\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function createCurrentImageAreasList() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var createArea = function createArea(item) {\n    return {\n      id: item.item_id,\n      name: item.item_name,\n      shape: \"poly\",\n      coords: _toConsumableArray(item.coords_list),\n      href: item.item_url,\n      preFillColor: \"transparent\"\n    };\n  }; // const resetCurrentImageAreas = () => {\n  //   MAP.areas = [];\n  //   setImageAreas([]);\n  // };\n\n\n  function callback(key) {\n    console.log(key);\n  }\n\n  console.log(imagePositions);\n\n  var goRightImage = function goRightImage() {\n    var positionListLength = imagePositions.length;\n    var currentImageIndex = imagePositions.indexOf(currentImageView);\n\n    if (currentImageIndex === positionListLength - 1) {\n      setImageView(imagePositions[0]);\n    } else {\n      setImageView(imagePositions[currentImageIndex + 1]);\n    }\n  };\n\n  var goLeftImage = function goLeftImage() {\n    var positionListLength = imagePositions.length;\n    var currentImageIndex = imagePositions.indexOf(currentImageView);\n\n    if (currentImageIndex === 0) {\n      setImageView(imagePositions[positionListLength - 1]);\n    } else {\n      setImageView(imagePositions[currentImageIndex - 1]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: \"\".concat(getSetUpInfo[0].username, \"'s \").concat(getSetUpInfo[0].setup_title, \" setup\"),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: styles.setupPageContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          justify: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: 24,\n            children: /*#__PURE__*/_jsxDEV(Title, {\n              level: 1,\n              style: {\n                textAlign: \"center\",\n                marginBottom: \"0\"\n              },\n              children: getSetUpInfo[0].setup_title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 24,\n            children: /*#__PURE__*/_jsxDEV(Title, {\n              level: 2,\n              type: \"secondary\",\n              style: {\n                textAlign: \"center\",\n                fontSize: \".8rem\"\n              },\n              children: getSetUpInfo[0].setup_type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          justify: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            span: 22,\n            children: /*#__PURE__*/_jsxDEV(PageHeader, {\n              title: \"\".concat(getSetUpInfo[0].username),\n              extra: /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n                twoToneColor: \"#eb2f96\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 24\n              }, this),\n              avatar: {\n                src: \"https://avatars1.githubusercontent.com/u/8186664?s=460&v=4\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: getSetUpInfo.sort(function (a, b) {\n            return a.image_position_number > b.image_position_number ? 1 : -1;\n          }).map(function (item, i) {\n            return /*#__PURE__*/_jsxDEV(Col, {\n              span: 24,\n              style: {\n                display: item.image_position !== currentImageView ? \"none\" : \"\"\n              },\n              children: /*#__PURE__*/_jsxDEV(ImageMapContainer, {\n                src: item.image_url,\n                name: item.image_id,\n                area: imageAreas\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 21\n              }, _this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 19\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          justify: \"center\",\n          style: {\n            padding: \".5rem 0\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            span: 22,\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              justify: \"space-between\",\n              style: {\n                alignItems: \"center\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(LeftOutlined, {\n                  onClick: goLeftImage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(Title, {\n                  level: 3,\n                  style: {\n                    margin: \"0\"\n                  },\n                  children: currentImageObject.image_position\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(RightOutlined, {\n                  onClick: goRightImage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            span: 24,\n            children: /*#__PURE__*/_jsxDEV(Tabs, {\n              defaultActiveKey: \"1\",\n              onChange: callback,\n              children: [/*#__PURE__*/_jsxDEV(TabPane, {\n                tab: \"Items\",\n                children: imageAreas.map(function (item, i) {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Row, {\n                      justify: \"space-between\",\n                      children: [/*#__PURE__*/_jsxDEV(Col, {\n                        children: [i + 1, \".\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n                          href: \"\".concat(item.href),\n                          target: \"_blank\",\n                          rel: \"noopener noreferrer\",\n                          children: item.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 486,\n                          columnNumber: 29\n                        }, _this)]\n                      }, i, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 484,\n                        columnNumber: 27\n                      }, _this), /*#__PURE__*/_jsxDEV(EyeOutlined, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 494,\n                        columnNumber: 27\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 483,\n                      columnNumber: 25\n                    }, _this), i !== imageAreas.length - 1 ? /*#__PURE__*/_jsxDEV(Divider, {\n                      orientation: \"left\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 497,\n                      columnNumber: 27\n                    }, _this) : \"\"]\n                  }, i, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 482,\n                    columnNumber: 23\n                  }, _this);\n                })\n              }, \"1\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                tab: \"Description\",\n                children: getSetUpInfo[0].setup_description\n              }, \"2\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                tab: \"Comments\",\n                children: \"Content of Tab Pane 3\"\n              }, \"3\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 399,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SetupPage, \"AddXGag6LAlb0l1i3we/qkxh6Fo=\");\n\n_c = SetupPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetupPage\");","map":{"version":3,"sources":["/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/setup/[id].tsx"],"names":["React","useEffect","useState","Layout","Row","Col","PageHeader","Typography","Tabs","Divider","HeartTwoTone","EyeOutlined","LeftOutlined","RightOutlined","styles","ImageMapContainer","Link","Title","Text","TabPane","SetupPage","props","currentImageView","setImageView","currentImageObject","setImageObject","currentImageItems","setImageItems","isActive","setActiveStatus","imageAreas","setImageAreas","getSetUpInfo","getImageItems","fillColor","setFillColor","imagePositions","setPositionList","console","log","length","list","map","item","i","push","image_position","createCurrentImageAreasList","setDataPageInfo","filteredImageObject","filter","imageObject","image_id","currentItems","currentList","addToAreaList","createArea","createMapAreas","id","item_id","name","item_name","shape","coords","coords_list","href","item_url","preFillColor","callback","key","goRightImage","positionListLength","currentImageIndex","indexOf","goLeftImage","username","setup_title","setupPageContainer","textAlign","marginBottom","fontSize","setup_type","src","sort","a","b","image_position_number","display","image_url","padding","alignItems","margin","setup_description"],"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","sourcesContent":["//import React, { useEffect, useState } from \"react\";\n//import Layout from \"../../components/Layout/Layout\";\n//import { v4 as uuidv4 } from \"uuid\";\n//import axios from \"axios\";\n//import {\n//  Row,\n//  Col,\n//  Form,\n//  Input,\n//  Button,\n//  Checkbox,\n//  PageHeader,\n//  Typography,\n//  Avatar,\n//  Space,\n//} from \"antd\";\n//import { GetServerSideProps } from \"next\";\n//import ImageMapper from \"react-image-mapper\";\n//import { Carousel, Tabs, Divider } from \"antd\";\n//import {\n//  UserOutlined,\n//  HeartTwoTone,\n//  EyeOutlined,\n//  LeftOutlined,\n//  RightOutlined,\n//} from \"@ant-design/icons\";\n//import styles from \"./setupPage.module.scss\";\n//import ImageOneMapContainer from \"../../components/imageMapContainers/ImageOneMapContainer\";\n//import ImageTwoMapContainer from \"../../components/imageMapContainers/ImageTwoMapContainer\";\n//import ImageThreeMapContainer from \"../../components/imageMapContainers/ImageThreeMapContainer\";\n\n//const { Link, Title } = Typography;\n//const { TabPane } = Tabs;\n\n//interface Props {\n//  getSetUpInfo: Array<any>;\n//}\n\n//export default function SetupPage(props: Props) {\n//  const [currentImageView, setImageView] = useState<string>(\"Main\");\n//  const [currentImageObject, setImageObject] = useState<object>({});\n//  const [currentImageItems, setImageItems] = useState([]);\n//  const [isActive, setActiveStatus] = useState(false);\n//  const [imageAreas, setImageAreas] = useState([]);\n//  const { getSetUpInfo, getImageItems } = props;\n//  const [fillColor, setFillColor] = useState(\"\");\n\n//  useEffect(() => {\n//    console.log(props);\n//    if (getSetUpInfo.length > 1) {\n//      carouselRef.current.goTo(1, true);\n//    }\n//  }, []);\n//  useEffect(() => {\n//    setDataPageInfo();\n//    resetCurrentImageAreas();\n//  }, [currentImageView]);\n\n//  useEffect(() => {\n//    setDataPageInfo();\n//    createCurrentImageAreasList();\n//  }, [currentImageObject]);\n\n//  const setDataPageInfo = async () => {\n//    const filteredImageObject = getSetUpInfo.filter((imageObject, i) => {\n//      return imageObject.image_position === currentImageView;\n//    });\n//    setImageObject(filteredImageObject[0]);\n//    //shouldn't need this logic but items dont show without it\n//    const currentItems = await getImageItems.filter((item, i) => {\n//      return item.image_id === filteredImageObject[0].image_id;\n//    });\n//    setImageItems(currentItems);\n//  };\n//  const createCurrentImageAreasList = async () => {\n//    const createMapAreas = await getImageItems.map((item, i) => {\n//      let currentList = imageAreas;\n//      if (item.image_id === currentImageObject.image_id) {\n//        const addToAreaList = currentList.push(createArea(item));\n//        console.log(\"test\", imageAreas);\n//      }\n//      setImageAreas(currentList);\n//    });\n//  };\n\n//  const createArea = (item) => {\n//    return {\n//      id: item.item_id,\n//      name: item.item_name,\n//      shape: \"poly\",\n//      coords: [...item.coords_list],\n//      href: item.item_url,\n//      preFillColor: \"transparent\",\n//    };\n//  };\n\n//  const resetCurrentImageAreas = () => {\n//    MAP.areas = [];\n//    setImageAreas([]);\n//  };\n//  let MAP = {\n//    name: uuidv4(),\n//    areas: [...imageAreas],\n//  };\n//  let MAP2 = {\n//    name: uuidv4(),\n//    areas: [...imageAreas],\n//  };\n\n//  function onChange(a) {\n//    setImageView(getSetUpInfo[a].image_position);\n//  }\n//  function callback(key) {\n//    console.log(key);\n//  }\n\n//  const carouselRef = React.createRef();\n//  console.log(currentImageObject);\n\n//  return (\n//    <Layout\n//      title={`${getSetUpInfo[0].username}'s ${getSetUpInfo[0].setup_title} setup`}\n//    >\n//      <div id={styles.setupPageContainer}>\n//        <div>\n//          <Row justify=\"center\">\n//            <Col span={24}>\n//              <Title level={1} style={{ textAlign: \"center\" }}>\n//                {getSetUpInfo[0].setup_title}\n//              </Title>\n//            </Col>\n//          </Row>\n//          <Row justify=\"center\">\n//            <Col span={22}>\n//              <PageHeader\n//                title={`${getSetUpInfo[0].username}`}\n//                extra={<HeartTwoTone twoToneColor=\"#eb2f96\" />}\n//                avatar={{\n//                  src: \"https://avatars1.githubusercontent.com/u/8186664?s=460&v=4\",\n//                }}\n//              />\n//            </Col>\n//          </Row>\n//          <Row>\n//            <Col span={24} style={{ display: \"\" }}>\n//              <ImageOneMapContainer\n//                name={getSetUpInfo[0].image_id}\n//                area={imageAreas}\n//              />\n//            </Col>\n//            <Col span={24} style={{ display: \"none\" }}>\n//              <ImageTwoMapContainer\n//                name={getSetUpInfo[1].image_id}\n//                area={imageAreas}\n//              />\n//            </Col>\n//            <Col span={24} style={{ display: \"none\" }}>\n//              <ImageThreeMapContainer name={\"test\"} area={imageAreas} />\n//            </Col>\n//          </Row>\n//          <Row justify=\"center\" style={{ padding: \".5rem 0\" }}>\n//            <Col span={22}>\n//              <Row justify=\"space-between\" style={{ alignItems: \"center\" }}>\n//                <Col>\n//                  <LeftOutlined />\n//                </Col>\n//                <Col>\n//                  <Title level={3} style={{ margin: \"0\" }}>\n//                    {currentImageObject.image_position}\n//                  </Title>\n//                </Col>\n//                <Col>\n//                  <RightOutlined />\n//                </Col>\n//              </Row>\n//            </Col>\n//          </Row>\n//          <Row justify=\"center\">\n//            <Col span={24}>\n//              <Carousel afterChange={onChange} ref={carouselRef}>\n//                {getSetUpInfo\n//                  .sort((a, b) =>\n//                    a.image_position_number > b.image_position_number ? 1 : -1\n//                  )\n//                  .map((item, i) => {\n//                    return (\n//                      <div key={i}>\n//                        <ImageMapper\n//                          src={item.image_url}\n//                          map={MAP}\n//                          fillColor={\"red\"}\n//                          width={375}\n//                          height={350}\n//                          onMouseEnter={(area: any) => {\n//                            console.log(area);\n//                          }}\n//                          onImageClick={(e: any) => {\n//                            console.log(\"test\");\n//                          }}\n//                        />\n//                      </div>\n//                    );\n//                  })}\n//              </Carousel>\n//            </Col>\n//          </Row>\n//          <Row justify=\"center\">\n//            <Col span={24}>\n//              <Title\n//                level={3}\n//                style={{ textAlign: \"center\", marginTop: \"1rem\" }}\n//              >\n//                {currentImageObject.image_position}\n//              </Title>\n//            </Col>\n//          </Row>\n//          <Row>\n//            <Col span={24}>\n//              <Tabs defaultActiveKey=\"1\" onChange={callback}>\n//                <TabPane tab=\"Items\" key=\"1\">\n//                  {imageAreas.map((item, i) => {\n//                    return (\n//                      <div key={i}>\n//                        <Row justify=\"space-between\">\n//                          <Col key={i}>\n//                            {i + 1}.{\" \"}\n//                            <Link\n//                              href={`${item.href}`}\n//                              target=\"_blank\"\n//                              rel=\"noopener noreferrer\"\n//                            >\n//                              {item.name}\n//                            </Link>\n//                          </Col>\n//                          <EyeOutlined />\n//                        </Row>\n//                        {i !== imageAreas.length - 1 ? (\n//                          <Divider orientation=\"left\" />\n//                        ) : (\n//                          \"\"\n//                        )}\n//                      </div>\n//                    );\n//                  })}\n//                </TabPane>\n//                <TabPane tab=\"Description\" key=\"2\">\n//                  {getSetUpInfo[0].setup_description}\n//                </TabPane>\n//                <TabPane tab=\"Comments\" key=\"3\">\n//                  Content of Tab Pane 3\n//                </TabPane>\n//              </Tabs>\n//            </Col>\n//          </Row>\n//        </div>\n//      </div>\n//    </Layout>\n//  );\n//}\n\n//export const getServerSideProps: GetServerSideProps = async (context) => {\n//  const { id } = context.query;\n//  const response = await axios.get(`${process.env.BASE_API}/setup/${id}`);\n//  const setUpPageData = await response.data;\n//  return {\n//    props: setUpPageData,\n//  };\n//};\n//\n//\n//\nimport React, { useEffect, useState } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport axios from \"axios\";\nimport {\n  Row,\n  Col,\n  Form,\n  Input,\n  Button,\n  Checkbox,\n  PageHeader,\n  Typography,\n  Avatar,\n  Space,\n} from \"antd\";\nimport { GetServerSideProps } from \"next\";\nimport ImageMapper from \"react-image-mapper\";\nimport { Carousel, Tabs, Divider } from \"antd\";\nimport {\n  UserOutlined,\n  HeartTwoTone,\n  EyeOutlined,\n  LeftOutlined,\n  RightOutlined,\n} from \"@ant-design/icons\";\nimport styles from \"./setupPage.module.scss\";\nimport ImageMapContainer from \"../../components/imageMapContainer/ImageMapContainer\";\n\nconst { Link, Title, Text } = Typography;\nconst { TabPane } = Tabs;\n\ninterface Props {\n  getSetUpInfo: Array<any>;\n}\n\nexport default function SetupPage(props: Props) {\n  const [currentImageView, setImageView] = useState<string>(\"Main\");\n  const [currentImageObject, setImageObject] = useState<object>({});\n  const [currentImageItems, setImageItems] = useState([]);\n  const [isActive, setActiveStatus] = useState(false);\n  const [imageAreas, setImageAreas] = useState([]);\n  const { getSetUpInfo, getImageItems } = props;\n  const [fillColor, setFillColor] = useState(\"\");\n  const [imagePositions, setPositionList] = useState([]);\n\n  useEffect(() => {\n    console.log(props);\n    if (getSetUpInfo.length > 1) {\n    }\n    const list = [];\n    getSetUpInfo.map((item, i) => {\n      list.push(item.image_position);\n      setPositionList(list);\n    });\n  }, []);\n\n  useEffect(() => {\n    createCurrentImageAreasList();\n    // resetCurrentImageAreas();\n  }, [currentImageView]);\n\n  useEffect(() => {\n    setDataPageInfo();\n    createCurrentImageAreasList();\n  }, [currentImageObject]);\n\n  const setDataPageInfo = async () => {\n    const filteredImageObject = getSetUpInfo.filter((imageObject, i) => {\n      return imageObject.image_position === currentImageView;\n    });\n    setImageObject(filteredImageObject[0]);\n    //shouldn't need this logic but items dont show without it\n    const currentItems = await getImageItems.filter((item, i) => {\n      return item.image_id === filteredImageObject[0].image_id;\n    });\n    setImageItems(currentItems);\n  };\n  const createCurrentImageAreasList = async () => {\n    let currentList = [];\n    const createMapAreas = await getImageItems.map((item, i) => {\n      if (item.image_id === currentImageObject.image_id) {\n        const addToAreaList = currentList.push(createArea(item));\n        console.log(\"test\", imageAreas);\n      }\n      setImageAreas(currentList);\n    });\n  };\n\n  const createArea = (item) => {\n    return {\n      id: item.item_id,\n      name: item.item_name,\n      shape: \"poly\",\n      coords: [...item.coords_list],\n      href: item.item_url,\n      preFillColor: \"transparent\",\n    };\n  };\n\n  // const resetCurrentImageAreas = () => {\n  //   MAP.areas = [];\n  //   setImageAreas([]);\n  // };\n  function callback(key) {\n    console.log(key);\n  }\n  console.log(imagePositions);\n  const goRightImage = () => {\n    const positionListLength = imagePositions.length;\n    const currentImageIndex = imagePositions.indexOf(currentImageView);\n    if (currentImageIndex === positionListLength - 1) {\n      setImageView(imagePositions[0]);\n    } else {\n      setImageView(imagePositions[currentImageIndex + 1]);\n    }\n  };\n  const goLeftImage = () => {\n    const positionListLength = imagePositions.length;\n    const currentImageIndex = imagePositions.indexOf(currentImageView);\n    if (currentImageIndex === 0) {\n      setImageView(imagePositions[positionListLength - 1]);\n    } else {\n      setImageView(imagePositions[currentImageIndex - 1]);\n    }\n  };\n  return (\n    <Layout\n      title={`${getSetUpInfo[0].username}'s ${getSetUpInfo[0].setup_title} setup`}\n    >\n      <div id={styles.setupPageContainer}>\n        <div>\n          <Row justify=\"center\">\n            <Col span={24}>\n              <Title\n                level={1}\n                style={{ textAlign: \"center\", marginBottom: \"0\" }}\n              >\n                {getSetUpInfo[0].setup_title}\n              </Title>\n            </Col>\n            <Col span={24}>\n              <Title\n                level={2}\n                type=\"secondary\"\n                style={{ textAlign: \"center\", fontSize: \".8rem\" }}\n              >\n                {getSetUpInfo[0].setup_type}\n              </Title>\n            </Col>\n          </Row>\n          <Row justify=\"center\">\n            <Col span={22}>\n              <PageHeader\n                title={`${getSetUpInfo[0].username}`}\n                extra={<HeartTwoTone twoToneColor=\"#eb2f96\" />}\n                avatar={{\n                  src: \"https://avatars1.githubusercontent.com/u/8186664?s=460&v=4\",\n                }}\n              />\n            </Col>\n          </Row>\n          <Row>\n            {/*Works as long not using carousel. List out images*/}\n            {getSetUpInfo\n              .sort((a, b) =>\n                a.image_position_number > b.image_position_number ? 1 : -1\n              )\n              .map((item, i) => {\n                return (\n                  <Col\n                    key={i}\n                    span={24}\n                    style={{\n                      display:\n                        item.image_position !== currentImageView ? \"none\" : \"\",\n                    }}\n                  >\n                    <ImageMapContainer\n                      src={item.image_url}\n                      name={item.image_id}\n                      area={imageAreas}\n                    />\n                  </Col>\n                );\n              })}\n          </Row>\n          <Row justify=\"center\" style={{ padding: \".5rem 0\" }}>\n            <Col span={22}>\n              <Row justify=\"space-between\" style={{ alignItems: \"center\" }}>\n                <Col>\n                  <LeftOutlined onClick={goLeftImage} />\n                </Col>\n                <Col>\n                  <Title level={3} style={{ margin: \"0\" }}>\n                    {currentImageObject.image_position}\n                  </Title>\n                </Col>\n                <Col>\n                  <RightOutlined onClick={goRightImage} />\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={24}>\n              <Tabs defaultActiveKey=\"1\" onChange={callback}>\n                <TabPane tab=\"Items\" key=\"1\">\n                  {imageAreas.map((item, i) => {\n                    return (\n                      <div key={i}>\n                        <Row justify=\"space-between\">\n                          <Col key={i}>\n                            {i + 1}.{\" \"}\n                            <Link\n                              href={`${item.href}`}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              {item.name}\n                            </Link>\n                          </Col>\n                          <EyeOutlined />\n                        </Row>\n                        {i !== imageAreas.length - 1 ? (\n                          <Divider orientation=\"left\" />\n                        ) : (\n                          \"\"\n                        )}\n                      </div>\n                    );\n                  })}\n                </TabPane>\n                <TabPane tab=\"Description\" key=\"2\">\n                  {getSetUpInfo[0].setup_description}\n                </TabPane>\n                <TabPane tab=\"Comments\" key=\"3\">\n                  Content of Tab Pane 3\n                </TabPane>\n              </Tabs>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport const getServerSideProps: GetServerSideProps = async (context) => {\n  const { id } = context.query;\n  const response = await axios.get(`${process.env.BASE_API}/setup/${id}`);\n  const setUpPageData = await response.data;\n  return {\n    props: setUpPageData,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}