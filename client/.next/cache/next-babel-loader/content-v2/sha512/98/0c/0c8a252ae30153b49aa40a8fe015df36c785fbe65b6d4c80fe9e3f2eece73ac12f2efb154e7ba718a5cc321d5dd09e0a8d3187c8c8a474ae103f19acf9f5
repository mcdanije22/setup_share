{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/login.tsx\";\nimport { useState } from \"react\";\nimport { Row, Col, Form, Input, Button, message } from \"antd\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nimport { BaseAPI } from \"../utils/constants/common\";\nexport default function LoginPage() {\n  const router = useRouter();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const userLogin = async values => {\n    const {\n      email,\n      password\n    } = values;\n    setLoading(true);\n\n    try {\n      const getUser = await axios.post(`${BaseAPI}/user/login`, {\n        email,\n        password\n      }, {\n        withCredentials: true\n      });\n      const response = getUser;\n      message.success(\"Logged in successfully\");\n      setTimeout(() => {\n        router.push(\"/\");\n        setLoading(false);\n      }, 1000);\n    } catch (error) {\n      const errorMessage = error.response.data.message;\n      message.error(errorMessage);\n      setLoading(false);\n    }\n  };\n\n  const test = async () => {\n    const getTest = await axios.get(`${BaseAPI}/user/test`, {\n      withCredentials: true\n    });\n    const data = getTest;\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      justify: \"center\",\n      align: \"middle\",\n      style: {\n        minHeight: \"100vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: {\n          span: 20\n        },\n        sm: {\n          span: 8\n        },\n        style: {\n          padding: \"6rem 4rem\",\n          backgroundColor: \"white\",\n          border: \"1px solid black\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          name: \"login\",\n          initialValues: {\n            remember: true\n          },\n          onFinish: userLogin // onFinishFailed={onFinishFailed}\n          ,\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Email\",\n            name: \"email\",\n            rules: [{\n              required: true,\n              message: \"Please input your email address\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Password\",\n            name: \"password\",\n            rules: [{\n              required: true,\n              message: \"Please input your password\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              size: \"large\",\n              shape: \"round\",\n              htmlType: \"submit\",\n              style: {\n                width: \"100%\"\n              },\n              loading: loading,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/login.tsx"],"names":["useState","Row","Col","Form","Input","Button","message","axios","useRouter","BaseAPI","LoginPage","router","loading","setLoading","userLogin","values","email","password","getUser","post","withCredentials","response","success","setTimeout","push","error","errorMessage","data","test","getTest","get","console","log","minHeight","span","padding","backgroundColor","border","remember","required","width"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { Row, Col, Form, Input, Button, Checkbox, message } from \"antd\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nimport { BaseAPI } from \"../utils/constants/common\";\n\ninterface User {\n  email: string;\n  password: string;\n}\n\nexport default function LoginPage() {\n  const router = useRouter();\n  const [loading, setLoading] = useState(false);\n  const userLogin = async (values: User) => {\n    const { email, password } = values;\n    setLoading(true);\n    try {\n      const getUser = await axios.post(\n        `${BaseAPI}/user/login`,\n        {\n          email,\n          password,\n        },\n        {\n          withCredentials: true,\n        }\n      );\n      const response = getUser;\n      message.success(\"Logged in successfully\");\n      setTimeout(() => {\n        router.push(\"/\");\n        setLoading(false);\n      }, 1000);\n    } catch (error: any) {\n      const errorMessage = error.response.data.message;\n      message.error(errorMessage);\n      setLoading(false);\n    }\n  };\n  const test = async () => {\n    const getTest = await axios.get(`${BaseAPI}/user/test`, {\n      withCredentials: true,\n    });\n    const data = getTest;\n    console.log(data);\n  };\n  return (\n    <div id=\"container\">\n      <Row justify=\"center\" align=\"middle\" style={{ minHeight: \"100vh\" }}>\n        <Col\n          xs={{ span: 20 }}\n          sm={{ span: 8 }}\n          style={{\n            padding: \"6rem 4rem\",\n            backgroundColor: \"white\",\n            border: \"1px solid black\",\n          }}\n        >\n          <Form\n            name=\"login\"\n            initialValues={{ remember: true }}\n            onFinish={userLogin}\n            // onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              label=\"Email\"\n              name=\"email\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your email address\",\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              label=\"Password\"\n              name=\"password\"\n              rules={[\n                { required: true, message: \"Please input your password\" },\n              ]}\n            >\n              <Input.Password />\n            </Form.Item>\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                size=\"large\"\n                shape=\"round\"\n                htmlType=\"submit\"\n                style={{ width: \"100%\" }}\n                loading={loading}\n              >\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n        </Col>\n        {/* <Button onClick={test}>test</Button> */}\n      </Row>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}