{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joshmcdaniel/Documents/work/repos/setup_share/components/projectList/ProjectList.tsx\";\nimport styles from \"./projectList.module.scss\";\nimport { Card, Row, Col, PageHeader, Tag, Typography, Table, Space } from \"antd\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nconst {\n  Meta\n} = Card;\nconst {\n  Text\n} = Typography;\nconst data = [{\n  key: \"1\",\n  name: \"John Brown\",\n  age: 32,\n  address: \"New York No. 1 Lake Park\",\n  tags: [\"nice\", \"developer\"]\n}, {\n  key: \"2\",\n  name: \"Jim Green\",\n  age: 42,\n  address: \"London No. 1 Lake Park\",\n  tags: [\"loser\"]\n}, {\n  key: \"3\",\n  name: \"Joe Black\",\n  age: 32,\n  address: \"Sidney No. 1 Lake Park\",\n  tags: [\"cool\", \"teacher\"]\n}];\nconst columns = [{\n  title: \"Name\",\n  dataIndex: \"name\",\n  key: \"name\",\n  render: text => /*#__PURE__*/_jsxDEV(\"a\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 23\n  }, this)\n}, {\n  title: \"Age\",\n  dataIndex: \"age\",\n  key: \"age\"\n}, {\n  title: \"Address\",\n  dataIndex: \"address\",\n  key: \"address\"\n}, {\n  title: \"Tags\",\n  key: \"tags\",\n  dataIndex: \"tags\",\n  render: tags => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: tags.map(tag => {\n      let color = tag.length > 5 ? \"geekblue\" : \"green\";\n\n      if (tag === \"loser\") {\n        color = \"volcano\";\n      }\n\n      return /*#__PURE__*/_jsxDEV(Tag, {\n        color: color,\n        children: tag.toUpperCase()\n      }, tag, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false)\n}, {\n  title: \"Action\",\n  key: \"action\",\n  render: (text, record) => /*#__PURE__*/_jsxDEV(Space, {\n    size: \"middle\",\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      children: [\"Invite \", record.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 7\n  }, this)\n}];\n\nconst ProjectsList = props => {\n  const {\n    projects\n  } = props;\n  console.log(\"test\", projects);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: styles.ProjectList,\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      gutter: [48, 28],\n      justify: \"start\",\n      children: projects.sort((a, b) => a.setup_created_date < b.setup_created_date ? 1 : -1).map((project, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xs: {\n              span: 24\n            },\n            md: {\n              span: 12\n            },\n            lg: {\n              span: 6\n            },\n            style: {\n              padding: \"4rem 2rem\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              hoverable: true,\n              cover: /*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"Main photo\",\n                src: project.image_url\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 28\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(Meta, {\n                title: /*#__PURE__*/_jsxDEV(PageHeader, {\n                  title: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [project.setup_title, \" setup\"]\n                  }, 1, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 29\n                  }, this)],\n                  extra: [/*#__PURE__*/_jsxDEV(DeleteOutlined, {\n                    onClick: () => {\n                      alert(\"test\");\n                    }\n                  }, 1, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 25\n                }, this),\n                description: /*#__PURE__*/_jsxDEV(Tag, {\n                  color: \"blue\",\n                  children: project.setup_type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 36\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      style: {\n        marginTop: \"8rem\"\n      },\n      columns: columns,\n      dataSource: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n\nexport default ProjectsList;","map":{"version":3,"sources":["/Users/joshmcdaniel/Documents/work/repos/setup_share/components/projectList/ProjectList.tsx"],"names":["styles","Card","Row","Col","PageHeader","Tag","Typography","Table","Space","DeleteOutlined","Meta","Text","data","key","name","age","address","tags","columns","title","dataIndex","render","text","map","tag","color","length","toUpperCase","record","ProjectsList","props","projects","console","log","ProjectList","sort","a","b","setup_created_date","project","i","span","padding","image_url","setup_title","alert","setup_type","marginTop"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport styles from \"./projectList.module.scss\";\nimport {\n  Card,\n  Row,\n  Col,\n  Modal,\n  Button,\n  PageHeader,\n  Tag,\n  Divider,\n  Typography,\n  message,\n  Table,\n  Space,\n} from \"antd\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport Link from \"next/link\";\nimport axios from \"axios\";\n\nconst { Meta } = Card;\nconst { Text } = Typography;\n\ninterface DashboardItem {\n  setup_id: string;\n  setup_title: string;\n  setup_description: string;\n  setup_type: string;\n  setup_created_date: Date;\n  created_screen_type: any;\n  image_id: string;\n  image_url: string;\n  image_position: string;\n  image_position_number: number;\n}\n\ntype DashboardProps = {\n  projects: Array<DashboardItem>;\n};\nconst data = [\n  {\n    key: \"1\",\n    name: \"John Brown\",\n    age: 32,\n    address: \"New York No. 1 Lake Park\",\n    tags: [\"nice\", \"developer\"],\n  },\n  {\n    key: \"2\",\n    name: \"Jim Green\",\n    age: 42,\n    address: \"London No. 1 Lake Park\",\n    tags: [\"loser\"],\n  },\n  {\n    key: \"3\",\n    name: \"Joe Black\",\n    age: 32,\n    address: \"Sidney No. 1 Lake Park\",\n    tags: [\"cool\", \"teacher\"],\n  },\n];\n\nconst columns = [\n  {\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n    render: (text) => <a>{text}</a>,\n  },\n  {\n    title: \"Age\",\n    dataIndex: \"age\",\n    key: \"age\",\n  },\n  {\n    title: \"Address\",\n    dataIndex: \"address\",\n    key: \"address\",\n  },\n  {\n    title: \"Tags\",\n    key: \"tags\",\n    dataIndex: \"tags\",\n    render: (tags) => (\n      <>\n        {tags.map((tag) => {\n          let color = tag.length > 5 ? \"geekblue\" : \"green\";\n          if (tag === \"loser\") {\n            color = \"volcano\";\n          }\n          return (\n            <Tag color={color} key={tag}>\n              {tag.toUpperCase()}\n            </Tag>\n          );\n        })}\n      </>\n    ),\n  },\n  {\n    title: \"Action\",\n    key: \"action\",\n    render: (text, record) => (\n      <Space size=\"middle\">\n        <a>Invite {record.name}</a>\n        <a>Delete</a>\n      </Space>\n    ),\n  },\n];\n\nconst ProjectsList = (props: DashboardProps) => {\n  const { projects } = props;\n  console.log(\"test\", projects);\n  return (\n    <div id={styles.ProjectList}>\n      <Row gutter={[48, 28]} justify=\"start\">\n        {projects\n          .sort((a, b) =>\n            a.setup_created_date < b.setup_created_date ? 1 : -1\n          )\n          .map((project, i) => {\n            return (\n              <div key={i}>\n                <Col\n                  xs={{ span: 24 }}\n                  md={{ span: 12 }}\n                  lg={{ span: 6 }}\n                  style={{ padding: \"4rem 2rem\" }}\n                >\n                  <Card\n                    hoverable\n                    cover={<img alt=\"Main photo\" src={project.image_url} />}\n                  >\n                    <Meta\n                      title={\n                        <PageHeader\n                          title={[\n                            <div key={1}>{project.setup_title} setup</div>,\n                          ]}\n                          extra={[\n                            <DeleteOutlined\n                              key={1}\n                              onClick={() => {\n                                alert(\"test\");\n                              }}\n                            />,\n                          ]}\n                        ></PageHeader>\n                      }\n                      description={<Tag color=\"blue\">{project.setup_type}</Tag>}\n                    />\n                  </Card>\n                </Col>\n              </div>\n            );\n          })}\n      </Row>\n      <Table\n        style={{ marginTop: \"8rem\" }}\n        columns={columns}\n        dataSource={data}\n      />\n    </div>\n  );\n};\nexport default ProjectsList;\n"]},"metadata":{},"sourceType":"module"}