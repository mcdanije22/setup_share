{"ast":null,"code":"import _regeneratorRuntime from \"/Users/joshmcdaniel/Documents/work/repos/setup_share/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/joshmcdaniel/Documents/work/repos/setup_share/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { BaseAPI } from \"../constants/common\";\nimport { useRouter } from \"next/router\";\nimport { message } from \"antd\";\nexport var authCheck = /*#__PURE__*/function () {\n  var _s = $RefreshSig$();\n\n  var _ref = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var router, _useState, loading, setLoading, _authCheck, data;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _s();\n\n            router = useRouter();\n            _useState = useState(false), loading = _useState[0], setLoading = _useState[1];\n            _context2.prev = 3;\n            setLoading(true);\n            _context2.next = 7;\n            return axios.get(\"\".concat(BaseAPI, \"/user/pageauth\"), {\n              withCredentials: true\n            });\n\n          case 7:\n            _authCheck = _context2.sent;\n            data = _authCheck;\n            _context2.next = 16;\n            break;\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](3);\n            message.error(\"Please log in\");\n            setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return router.push(\"/login\");\n\n                    case 2:\n                      setLoading(false);\n\n                    case 3:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            })), 1000);\n            console.log(_context2.t0);\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[3, 11]]);\n  }), \"OeGW3YQfIEwiDdtbkZtE38+y0P4=\", false, function () {\n    return [useRouter];\n  }));\n\n  return function authCheck() {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/joshmcdaniel/Documents/work/repos/setup_share/utils/helperFunctions/authCheck.tsx"],"names":["useState","axios","BaseAPI","useRouter","message","authCheck","router","loading","setLoading","get","withCredentials","data","error","setTimeout","push","console","log"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,QAAwB,MAAxB;AAEA,OAAO,IAAMC,SAAS;AAAA;;AAAA,yEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AACjBC,YAAAA,MADiB,GACRH,SAAS,EADD;AAAA,wBAEOH,QAAQ,CAAC,KAAD,CAFf,EAEhBO,OAFgB,iBAEPC,UAFO;AAAA;AAIrBA,YAAAA,UAAU,CAAC,IAAD,CAAV;AAJqB;AAAA,mBAKGP,KAAK,CAACQ,GAAN,WAAaP,OAAb,qBAAsC;AAC5DQ,cAAAA,eAAe,EAAE;AAD2C,aAAtC,CALH;;AAAA;AAKfL,YAAAA,UALe;AAQfM,YAAAA,IARe,GAQRN,UARQ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUrBD,YAAAA,OAAO,CAACQ,KAAR,CAAc,eAAd;AACAC,YAAAA,UAAU,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACHP,MAAM,CAACQ,IAAP,CAAY,QAAZ,CADG;;AAAA;AAETN,sBAAAA,UAAU,CAAC,KAAD,CAAV;;AAFS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAD,IAGP,IAHO,CAAV;AAIAO,YAAAA,OAAO,CAACC,GAAR;;AAfqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;AAAA,YACLb,SADK;AAAA;;AAAA,kBAATE,SAAS;AAAA;AAAA;AAAA,GAAf","sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport { BaseAPI } from \"../constants/common\";\nimport { useRouter } from \"next/router\";\nimport { message } from \"antd\";\n\nexport const authCheck = async () => {\n  const router = useRouter();\n  const [loading, setLoading] = useState(false);\n  try {\n    setLoading(true);\n    const authCheck = await axios.get(`${BaseAPI}/user/pageauth`, {\n      withCredentials: true,\n    });\n    const data = authCheck;\n  } catch (error) {\n    message.error(\"Please log in\");\n    setTimeout(async () => {\n      await router.push(\"/login\");\n      setLoading(false);\n    }, 1000);\n    console.log(error);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}