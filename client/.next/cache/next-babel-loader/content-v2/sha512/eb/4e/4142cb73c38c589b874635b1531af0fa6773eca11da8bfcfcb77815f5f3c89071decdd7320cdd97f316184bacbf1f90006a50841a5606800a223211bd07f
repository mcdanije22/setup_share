{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joshmcdaniel/Documents/work/repos/setup_share/components/CreateSetupForms/CreateSetupStepOneForm.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Row, Col, Form, Input, Button, Typography, Select } from \"antd\";\nimport { ArrowRightOutlined, CloseOutlined } from \"@ant-design/icons\";\nconst {\n  TextArea\n} = Input;\nconst {\n  Title\n} = Typography;\nconst {\n  Option\n} = Select;\n\nconst CreateSetupStepOneForm = ({\n  setStepOneForm,\n  handleStepChange,\n  stepOneForm\n}) => {\n  const handleStepOneForm = values => {\n    setStepOneForm(_objectSpread({}, values));\n    handleStepChange(2);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"stepOneFormContainer\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      initialValues: {\n        title: `${stepOneForm ? stepOneForm.title : \"\"}`,\n        description: `${stepOneForm ? stepOneForm.description : \"\"}`,\n        roomType: `${stepOneForm ? stepOneForm.roomType : \"\"}`\n      },\n      labelCol: {\n        span: 8\n      },\n      wrapperCol: {\n        span: 24\n      },\n      layout: \"vertical\",\n      name: \"CreateSetupStepOneForm\",\n      onFinish: handleStepOneForm,\n      style: {\n        height: \"100vh\"\n      } // onFinishFailed={onFinishFailed}\n      ,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        sm: 24,\n        children: /*#__PURE__*/_jsxDEV(Title, {\n          level: 2,\n          style: {\n            textAlign: \"center\",\n            paddingTop: \"2rem\"\n          },\n          children: \"New Setup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"title\",\n        rules: [{\n          required: true,\n          message: \"Please input a setup title\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          style: {\n            borderBottom: \"1px solid black\",\n            width: \"14rem\"\n          },\n          bordered: false,\n          placeholder: \"Choose a Setup Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"roomType\",\n        label: \"Room Type\",\n        rules: [{\n          required: true,\n          message: \"Please choose a room type\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          children: [/*#__PURE__*/_jsxDEV(Option, {\n            value: \"Desk setup\",\n            children: \"Desk setup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"Pc Build\",\n            children: \"Pc Build\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"Bag\",\n            children: \"Everyday Bag\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"Cooking Setup\",\n            children: \"Cooking Setup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"Gaming Setup\",\n            children: \"Kitchen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Give a Description\",\n        name: \"description\",\n        rules: [{\n          required: true,\n          message: \"Please enter a description for your setup\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(TextArea, {\n          rows: 18,\n          style: {\n            borderRadius: \".5rem\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        justify: \"space-between\",\n        style: {\n          position: \"absolute\",\n          bottom: \"0\",\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            danger: true,\n            htmlType: \"submit\",\n            shape: \"circle\",\n            size: \"large\",\n            icon: /*#__PURE__*/_jsxDEV(CloseOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            shape: \"circle\",\n            size: \"large\",\n            icon: /*#__PURE__*/_jsxDEV(ArrowRightOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\nexport default CreateSetupStepOneForm;","map":{"version":3,"sources":["/Users/joshmcdaniel/Documents/work/repos/setup_share/components/CreateSetupForms/CreateSetupStepOneForm.tsx"],"names":["React","Row","Col","Form","Input","Button","Typography","Select","ArrowRightOutlined","CloseOutlined","TextArea","Title","Option","CreateSetupStepOneForm","setStepOneForm","handleStepChange","stepOneForm","handleStepOneForm","values","title","description","roomType","span","height","textAlign","paddingTop","required","message","borderBottom","width","borderRadius","position","bottom"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Row, Col, Form, Input, Button, Typography, Space, Select } from \"antd\";\nimport { ArrowRightOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport { useEffect, useState, Dispatch, SetStateAction } from \"react\";\n\nconst { TextArea } = Input;\nconst { Title } = Typography;\nconst { Option } = Select;\n\ninterface Props {\n  setStepOneForm: Dispatch<SetStateAction<StepOne>>;\n  handleStepChange(number: number): void;\n  stepOneForm: StepOne;\n}\n\ninterface StepOne {\n  title: string;\n  description: string;\n  roomType: string;\n}\n\nconst CreateSetupStepOneForm: React.FC<Props> = ({\n  setStepOneForm,\n  handleStepChange,\n  stepOneForm,\n}) => {\n  const handleStepOneForm = (values: StepOne) => {\n    setStepOneForm({ ...values });\n    handleStepChange(2);\n  };\n  return (\n    <div id=\"stepOneFormContainer\">\n      <Form\n        initialValues={{\n          title: `${stepOneForm ? stepOneForm.title : \"\"}`,\n          description: `${stepOneForm ? stepOneForm.description : \"\"}`,\n          roomType: `${stepOneForm ? stepOneForm.roomType : \"\"}`,\n        }}\n        labelCol={{ span: 8 }}\n        wrapperCol={{ span: 24 }}\n        layout=\"vertical\"\n        name=\"CreateSetupStepOneForm\"\n        onFinish={handleStepOneForm}\n        style={{ height: \"100vh\" }}\n        // onFinishFailed={onFinishFailed}\n      >\n          <Col sm={24}>\n            <Title\n              level={2}\n              style={{ textAlign: \"center\", paddingTop: \"2rem\" }}\n            >\n              New Setup\n            </Title>\n          </Col>\n          <Form.Item\n            name=\"title\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input a setup title\",\n              },\n            ]}\n          >\n            <Input\n              style={{ borderBottom: \"1px solid black\", width: \"14rem\" }}\n              bordered={false}\n              placeholder=\"Choose a Setup Title\"\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"roomType\"\n            label=\"Room Type\"\n            rules={[\n              {\n                required: true,\n                message: \"Please choose a room type\",\n              },\n            ]}\n          >\n            <Select>\n              <Option value=\"Desk setup\">Desk setup</Option>\n              <Option value=\"Pc Build\">Pc Build</Option>\n              <Option value=\"Bag\">Everyday Bag</Option>\n              <Option value=\"Cooking Setup\">Cooking Setup</Option>\n              <Option value=\"Gaming Setup\">Kitchen</Option>\n            </Select>\n          </Form.Item>\n          <Form.Item\n            label=\"Give a Description\"\n            name=\"description\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter a description for your setup\",\n              },\n            ]}\n          >\n            <TextArea rows={18} style={{ borderRadius: \".5rem\" }} />\n          </Form.Item>\n        <Row\n          justify=\"space-between\"\n          style={{ position: \"absolute\", bottom: \"0\", width: \"100%\" }}\n        >\n          <Form.Item>\n            <Button\n              danger\n              htmlType=\"submit\"\n              shape=\"circle\"\n              size=\"large\"\n              icon={<CloseOutlined />}\n            />\n          </Form.Item>\n          <Form.Item>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              shape=\"circle\"\n              size=\"large\"\n              icon={<ArrowRightOutlined />}\n            />\n          </Form.Item>\n        </Row>\n      </Form>\n    </div>\n  );\n};\n\nexport default CreateSetupStepOneForm;\n"]},"metadata":{},"sourceType":"module"}