{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/register.tsx\";\nimport { useState } from \"react\";\nimport { Row, Col, Form, Input, Button, message, Typography } from \"antd\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nimport { BaseAPI } from \"../utils/constants/common\";\nimport styles from \"../pageStyles/register.module.scss\";\nconst {\n  Title,\n  Text\n} = Typography;\nexport default function RegisterPage() {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const router = useRouter();\n\n  const userRegistration = async values => {\n    const {\n      first_name,\n      last_name,\n      username,\n      email,\n      password,\n      confrim_password\n    } = values;\n\n    if (password !== confrim_password) {\n      message.error(\"Passswords do not match\");\n    } else {\n      try {\n        setLoading(true);\n        const registerUser = await axios.post(`${BaseAPI}/user/register`, {\n          first_name,\n          last_name,\n          username,\n          email,\n          password\n        });\n        const response = registerUser;\n        message.success(\"Registration successful\");\n        setTimeout(async () => {\n          await router.push(\"/login\");\n          setLoading(false);\n        }, 1000);\n      } catch (error) {\n        const errorMessage = error.response.data.message;\n        message.error(errorMessage);\n        setLoading(false);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: styles.registerPageContainer,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      justify: \"center\",\n      align: \"middle\",\n      style: {\n        minHeight: \"100vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: {\n          span: 20\n        },\n        md: {\n          span: 18\n        },\n        lg: {\n          span: 12\n        },\n        xl: {\n          span: 8\n        },\n        id: styles.formWindow,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            level: 2,\n            children: \"ShareStation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Title, {\n            level: 3,\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: \"To Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          name: \"register\",\n          onFinish: userRegistration,\n          labelCol: {\n            span: 24\n          } // onFinishFailed={onFinishFailed}\n          ,\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"First Name\",\n            name: \"first_name\",\n            rules: [{\n              required: true,\n              message: \"Please input your first name\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Last Name\",\n            name: \"last_name\",\n            rules: [{\n              required: true,\n              message: \"Please input your last name\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"User Name\",\n            name: \"username\",\n            rules: [{\n              required: true,\n              message: \"Please input your user name\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Email\",\n            name: \"email\",\n            rules: [{\n              required: true,\n              message: \"Please input your email address\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Password\",\n            name: \"password\",\n            rules: [{\n              required: true,\n              message: \"Please input your password\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Confirm Passwrod\",\n            name: \"confrim_password\",\n            rules: [{\n              required: true,\n              message: \"Please confirm your password\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              size: \"large\",\n              shape: \"round\",\n              htmlType: \"submit\",\n              style: {\n                width: \"100%\",\n                marginTop: \".5rem\"\n              },\n              loading: loading,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\nexport const getServerSideProps = async context => {\n  try {\n    // const cookie = context.req.headers.cookie.replace(\"token=\", \"\");\n    const cookie = context.req.headers.cookie;\n    console.log(\"new cookie\", cookie);\n    const response = await axios.post(`${BaseAPI}/user/pageauth`, {\n      cookie\n    });\n    const data = await response.data;\n    return {\n      redirect: {\n        permanent: false,\n        destination: \"/\"\n      }\n    };\n  } catch (error) {\n    return {\n      props: {}\n    };\n  }\n};","map":{"version":3,"sources":["/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/register.tsx"],"names":["useState","Row","Col","Form","Input","Button","message","Typography","axios","useRouter","BaseAPI","styles","Title","Text","RegisterPage","loading","setLoading","router","userRegistration","values","first_name","last_name","username","email","password","confrim_password","error","registerUser","post","response","success","setTimeout","push","errorMessage","data","registerPageContainer","minHeight","span","formWindow","textAlign","required","width","marginTop","getServerSideProps","context","cookie","req","headers","console","log","redirect","permanent","destination","props"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { Row, Col, Form, Input, Button, message, Typography } from \"antd\";\nimport axios from \"axios\";\nimport { GetServerSideProps } from \"next\";\nimport { useRouter } from \"next/router\";\nimport { BaseAPI } from \"../utils/constants/common\";\nimport styles from \"../pageStyles/register.module.scss\";\nimport { ConsoleSqlOutlined } from \"@ant-design/icons\";\n\nconst { Title, Text } = Typography;\n\ninterface User {\n  first_name: string;\n  last_name: string;\n  username: string;\n  email: string;\n  password: string;\n  confrim_password: string;\n}\n\nexport default function RegisterPage() {\n  const [loading, setLoading] = useState(false);\n  const router = useRouter();\n\n  const userRegistration = async (values: User) => {\n    const {\n      first_name,\n      last_name,\n      username,\n      email,\n      password,\n      confrim_password,\n    } = values;\n    if (password !== confrim_password) {\n      message.error(\"Passswords do not match\");\n    } else {\n      try {\n        setLoading(true);\n        const registerUser = await axios.post(`${BaseAPI}/user/register`, {\n          first_name,\n          last_name,\n          username,\n          email,\n          password,\n        });\n        const response = registerUser;\n        message.success(\"Registration successful\");\n        setTimeout(async () => {\n          await router.push(\"/login\");\n          setLoading(false);\n        }, 1000);\n      } catch (error: any) {\n        const errorMessage = error.response.data.message;\n        message.error(errorMessage);\n        setLoading(false);\n      }\n    }\n  };\n  return (\n    <div id={styles.registerPageContainer}>\n      <Row justify=\"center\" align=\"middle\" style={{ minHeight: \"100vh\" }}>\n        <Col\n          xs={{ span: 20 }}\n          md={{ span: 18 }}\n          lg={{ span: 12 }}\n          xl={{ span: 8 }}\n          id={styles.formWindow}\n        >\n          <div style={{ textAlign: \"center\" }}>\n            <Title level={2}>ShareStation</Title>\n            <Title level={3}>Sign In</Title>\n            <Text>To Continue</Text>\n          </div>\n          <Form\n            name=\"register\"\n            onFinish={userRegistration}\n            labelCol={{ span: 24 }}\n            // onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              label=\"First Name\"\n              name=\"first_name\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your first name\",\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Last Name\"\n              name=\"last_name\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your last name\",\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              label=\"User Name\"\n              name=\"username\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your user name\",\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              label=\"Email\"\n              name=\"email\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your email address\",\n                },\n              ]}\n            >\n              <Input type=\"email\" />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Password\"\n              name=\"password\"\n              rules={[\n                { required: true, message: \"Please input your password\" },\n              ]}\n            >\n              <Input.Password />\n            </Form.Item>\n            <Form.Item\n              label=\"Confirm Passwrod\"\n              name=\"confrim_password\"\n              rules={[\n                { required: true, message: \"Please confirm your password\" },\n              ]}\n            >\n              <Input.Password />\n            </Form.Item>\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                size=\"large\"\n                shape=\"round\"\n                htmlType=\"submit\"\n                style={{ width: \"100%\", marginTop: \".5rem\" }}\n                loading={loading}\n              >\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport const getServerSideProps: GetServerSideProps = async (context: any) => {\n  try {\n    // const cookie = context.req.headers.cookie.replace(\"token=\", \"\");\n    const cookie = context.req.headers.cookie;\n    console.log(\"new cookie\", cookie);\n    const response = await axios.post(`${BaseAPI}/user/pageauth`, { cookie });\n    const data = await response.data;\n    return {\n      redirect: {\n        permanent: false,\n        destination: \"/\",\n      },\n    };\n  } catch (error) {\n    return {\n      props: {},\n    };\n  }\n};\n"]},"metadata":{},"sourceType":"module"}