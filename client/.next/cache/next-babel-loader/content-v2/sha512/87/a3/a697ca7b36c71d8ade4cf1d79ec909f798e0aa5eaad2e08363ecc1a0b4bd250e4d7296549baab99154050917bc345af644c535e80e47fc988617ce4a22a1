{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/joshmcdaniel/Documents/work/repos/setup_share/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/joshmcdaniel/Documents/work/repos/setup_share/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/joshmcdaniel/Documents/work/repos/setup_share/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/joshmcdaniel/Documents/work/repos/setup_share/components/CreateSetupForms/CreateSetupStepTwoForm.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Upload, Row, Col, Typography, Space, Button, message, Modal, Form } from \"antd\";\nimport axios from \"axios\";\nimport styles from \"./createRoomForms.module.scss\";\nimport { ArrowRightOutlined, ArrowLeftOutlined, InboxOutlined, CheckCircleTwoTone } from \"@ant-design/icons\";\nvar Title = Typography.Title,\n    Text = Typography.Text;\nvar Dragger = Upload.Dragger;\n\nvar CreateSetupStepTwoForm = function CreateSetupStepTwoForm(_ref) {\n  _s();\n\n  var setStepTwoForm = _ref.setStepTwoForm,\n      handleStepChange = _ref.handleStepChange,\n      stepTwoForm = _ref.stepTwoForm;\n\n  var _useState = useState([]),\n      fileList = _useState[0],\n      setFileList = _useState[1];\n\n  var _useState2 = useState([]),\n      uploadFileList = _useState2[0],\n      setUploadList = _useState2[1];\n\n  var _useState3 = useState(false),\n      isLoading = _useState3[0],\n      setLoadingStatus = _useState3[1];\n\n  var _useState4 = useState(false),\n      modalStatus = _useState4[0],\n      setModalStatus = _useState4[1];\n\n  useEffect(function () {\n    if (stepTwoForm) {\n      setFileList(_toConsumableArray(stepTwoForm));\n    }\n  }, []);\n\n  var onPreview = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(file) {\n      var src, image, imgWindow;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              src = file.url;\n\n              if (src) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 4;\n              return new Promise(function (resolve) {\n                var reader = new FileReader();\n                reader.readAsDataURL(file.originFileObj);\n\n                reader.onload = function () {\n                  return resolve(reader.result);\n                };\n              });\n\n            case 4:\n              src = _context.sent;\n\n            case 5:\n              image = new Image();\n              image.src = src;\n              imgWindow = window.open(src);\n              console.log(imgWindow);\n              imgWindow.document.write(image.outerHTML);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onPreview(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var beforeUpload = function beforeUpload() {\n    if (fileList.length >= 3) {\n      message.error(\"Delete image first before trying to add a new one\");\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  var sendFormTwoData = function sendFormTwoData() {\n    setStepTwoForm(_toConsumableArray(fileList));\n    handleStepChange(3);\n  };\n\n  var handleModalCancel = function handleModalCancel() {\n    setModalStatus(false);\n  };\n\n  var handleStepTwoData = function handleStepTwoData() {\n    if (fileList.length === 0) {\n      message.error(\"Please upload a photo before continuing\");\n    } else if (fileList.length < 3) {\n      setModalStatus(true);\n    } else {\n      sendFormTwoData();\n    }\n  };\n\n  var upload = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(file) {\n      var data, result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              data = new FormData();\n              data.append(\"image-file\", file);\n              _context2.prev = 2;\n              _context2.next = 5;\n              return axios.post(\"http://localhost:5000/image/upload\", data, {\n                headers: {\n                  \"Content-Type\": \"multipart/form-data\"\n                }\n              });\n\n            case 5:\n              result = _context2.sent;\n              console.log(result);\n              message.success(\"sucess\");\n              _context2.next = 13;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](2);\n              console.log(_context2.t0);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 10]]);\n    }));\n\n    return function upload(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var uploadFile = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(values) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setLoadingStatus(true);\n              _context3.next = 3;\n              return upload(values.imageFile.fileList[0].originFileObj);\n\n            case 3:\n              _context3.next = 5;\n              return upload(values.imageFile.fileList[1].originFileObj);\n\n            case 5:\n              _context3.next = 7;\n              return upload(values.imageFile.fileList[2].originFileObj);\n\n            case 7:\n              setLoadingStatus(false);\n              handleStepTwoData(); //likely wont need this list tracking, will look to have custom preview images and single uploads\n              // setFileList([...imageList, values.imageFile.file.originFileObj]);\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function uploadFile(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var dummyRequest = function dummyRequest(file) {\n    console.log(file);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: styles.stepTwoFormContainer,\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      visible: modalStatus,\n      title: \"Continue?\",\n      onCancel: handleModalCancel,\n      footer: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleModalCancel,\n        children: \"Go back\"\n      }, \"back\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: sendFormTwoData,\n        children: \"Submit\"\n      }, \"submit\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, _this)],\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"modalContainer\",\n        style: {\n          textAlign: \"center\",\n          padding: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: \"Less than three photos selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Text, {\n          children: \" Do you wish to continue?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Form, {\n      name: \"file-upload-form\",\n      onFinish: uploadFile,\n      children: /*#__PURE__*/_jsxDEV(Space, {\n        size: 30,\n        direction: \"vertical\",\n        style: {\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: 24,\n          children: /*#__PURE__*/_jsxDEV(Title, {\n            level: 2,\n            style: {\n              textAlign: \"center\",\n              paddingTop: \"2rem\"\n            },\n            children: \"Upload Three Photos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Row, {\n          justify: \"center\",\n          style: {\n            paddingBottom: \"2rem\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            style: {\n              width: \"100%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"imageFile\",\n              children: /*#__PURE__*/_jsxDEV(Dragger, {\n                name: \"image\",\n                listType: \"picture\",\n                fileList: fileList,\n                onPreview: onPreview,\n                maxCount: 3,\n                beforeUpload: beforeUpload,\n                customRequest: dummyRequest,\n                multiple: true,\n                children: [fileList.length < 3 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"ant-upload-drag-icon\",\n                    children: /*#__PURE__*/_jsxDEV(InboxOutlined, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 171,\n                      columnNumber: 25\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"ant-upload-text\",\n                    children: \"Drag and Drop or Browse\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 23\n                  }, _this)]\n                }, void 0, true), fileList.length >= 3 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"ant-upload-drag-icon\",\n                    children: /*#__PURE__*/_jsxDEV(CheckCircleTwoTone, {\n                      twoToneColor: \"#52c41a\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 25\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"ant-upload-text\",\n                    children: \"Max photos selected\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"ant-upload-hint\",\n                    children: \"Delete Photo(s) or Continue\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 23\n                  }, _this)]\n                }, void 0, true)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Row, {\n          justify: \"space-between\",\n          style: {\n            position: \"absolute\",\n            bottom: \"0\",\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: function onClick() {\n              handleStepChange(1);\n            },\n            danger: true,\n            shape: \"circle\",\n            size: \"large\",\n            icon: /*#__PURE__*/_jsxDEV(ArrowLeftOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 21\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Button // onClick={handleStepTwoData}\n            , {\n              type: \"primary\",\n              htmlType: \"submit\",\n              shape: \"circle\",\n              size: \"large\",\n              icon: /*#__PURE__*/_jsxDEV(ArrowRightOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 23\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CreateSetupStepTwoForm, \"hVz48xdcvVkK4mNHAAsx6g6kZaY=\");\n\n_c = CreateSetupStepTwoForm;\nexport default CreateSetupStepTwoForm; // import React, { Dispatch, SetStateAction, useState, useEffect } from \"react\";\n// import {\n//   Upload,\n//   Row,\n//   Col,\n//   Typography,\n//   Space,\n//   Button,\n//   message,\n//   Modal,\n// } from \"antd\";\n// import ImgCrop from \"antd-img-crop\";\n// import styles from \"./createRoomForms.module.scss\";\n// import {\n//   ArrowRightOutlined,\n//   ArrowLeftOutlined,\n//   InboxOutlined,\n//   CheckCircleTwoTone,\n// } from \"@ant-design/icons\";\n// const { Title, Text } = Typography;\n// const { Dragger } = Upload;\n// interface Props {\n//   setStepTwoForm: Dispatch<SetStateAction<object>>;\n//   handleStepChange(number: number): void;\n//   stepTwoForm: Array<object>;\n// }\n// const CreateSetupStepTwoForm: React.FC<Props> = ({\n//   setStepTwoForm,\n//   handleStepChange,\n//   stepTwoForm,\n// }) => {\n//   const [fileList, setFileList] = useState<Array<any>>([]);\n//   const [modalStatus, setModalStatus] = useState<boolean>(false);\n//   useEffect(() => {\n//     if (stepTwoForm) {\n//       setFileList([...stepTwoForm]);\n//     }\n//   }, []);\n//   const onChange = ({ fileList: newFileList }: any) => {\n//     setFileList(newFileList);\n//   };\n//   const onPreview = async (file: any) => {\n//     let src = file.url;\n//     if (!src) {\n//       src = await new Promise((resolve) => {\n//         const reader = new FileReader();\n//         reader.readAsDataURL(file.originFileObj);\n//         reader.onload = () => resolve(reader.result);\n//       });\n//     }\n//     const image = new Image();\n//     image.src = src;\n//     const imgWindow: any = window.open(src);\n//     console.log(imgWindow);\n//     imgWindow.document.write(image.outerHTML);\n//   };\n//   const beforeUpload = () => {\n//     if (fileList.length >= 3) {\n//       message.error(\"Delete image first before trying to add a new one\");\n//       return false;\n//     } else {\n//       return true;\n//     }\n//   };\n//   console.log(fileList);\n//   const sendFormTwoData = () => {\n//     setStepTwoForm([...fileList]);\n//     handleStepChange(3);\n//   };\n//   const handleModalCancel = () => {\n//     setModalStatus(false);\n//   };\n//   const handleStepTwoData = () => {\n//     if (fileList.length === 0) {\n//       message.error(\"Please upload a photo before continuing\");\n//     } else if (fileList.length < 3) {\n//       setModalStatus(true);\n//     } else {\n//       sendFormTwoData();\n//     }\n//   };\n//   return (\n//     <div id={styles.stepTwoFormContainer}>\n//       <Modal\n//         visible={modalStatus}\n//         title=\"Continue?\"\n//         onCancel={handleModalCancel}\n//         footer={[\n//           <Button key=\"back\" onClick={handleModalCancel}>\n//             Go back\n//           </Button>,\n//           <Button key=\"submit\" type=\"primary\" onClick={sendFormTwoData}>\n//             Submit\n//           </Button>,\n//         ]}\n//       >\n//         <div\n//           id=\"modalContainer\"\n//           style={{ textAlign: \"center\", padding: \"1rem\" }}\n//         >\n//           <Text>Less than three photos selected</Text>\n//           <br />\n//           <Text> Do you wish to continue?</Text>\n//         </div>\n//       </Modal>\n//       <Space size={30} direction=\"vertical\" style={{ width: \"100%\" }}>\n//         <Col sm={24}>\n//           <Title level={2} style={{ textAlign: \"center\", paddingTop: \"2rem\" }}>\n//             Upload Three Photos\n//           </Title>\n//         </Col>\n//         <Row justify=\"center\" style={{ paddingBottom: \"2rem\" }}>\n//           <Col style={{ width: \"100%\" }}>\n//             <Dragger\n//               listType=\"picture\"\n//               fileList={fileList}\n//               onChange={onChange}\n//               onPreview={onPreview}\n//               maxCount={3}\n//               beforeUpload={beforeUpload}\n//             >\n//               {fileList.length < 3 && (\n//                 <>\n//                   <p className=\"ant-upload-drag-icon\">\n//                     <InboxOutlined />\n//                   </p>\n//                   <p className=\"ant-upload-text\">Drag and Drop or Browse</p>\n//                 </>\n//               )}\n//               {fileList.length >= 3 && (\n//                 <>\n//                   <p className=\"ant-upload-drag-icon\">\n//                     <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\n//                   </p>\n//                   <p className=\"ant-upload-text\">Max photos selected</p>\n//                   <p className=\"ant-upload-hint\">Delete Photo(s) or Continue</p>\n//                 </>\n//               )}\n//             </Dragger>\n//           </Col>\n//         </Row>\n//         <Row\n//           justify=\"space-between\"\n//           style={{ position: \"absolute\", bottom: \"0\", width: \"100%\" }}\n//         >\n//           <Button\n//             onClick={() => {\n//               handleStepChange(1);\n//             }}\n//             danger\n//             htmlType=\"submit\"\n//             shape=\"circle\"\n//             size=\"large\"\n//             icon={<ArrowLeftOutlined />}\n//           />\n//           <Button\n//             onClick={handleStepTwoData}\n//             type=\"primary\"\n//             htmlType=\"submit\"\n//             shape=\"circle\"\n//             size=\"large\"\n//             icon={<ArrowRightOutlined />}\n//           />\n//         </Row>\n//       </Space>\n//     </div>\n//   );\n// };\n// export default CreateSetupStepTwoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateSetupStepTwoForm\");","map":{"version":3,"sources":["/Users/joshmcdaniel/Documents/work/repos/setup_share/components/CreateSetupForms/CreateSetupStepTwoForm.tsx"],"names":["React","useState","useEffect","Upload","Row","Col","Typography","Space","Button","message","Modal","Form","axios","styles","ArrowRightOutlined","ArrowLeftOutlined","InboxOutlined","CheckCircleTwoTone","Title","Text","Dragger","CreateSetupStepTwoForm","setStepTwoForm","handleStepChange","stepTwoForm","fileList","setFileList","uploadFileList","setUploadList","isLoading","setLoadingStatus","modalStatus","setModalStatus","onPreview","file","src","url","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","result","image","Image","imgWindow","window","open","console","log","document","write","outerHTML","beforeUpload","length","error","sendFormTwoData","handleModalCancel","handleStepTwoData","upload","data","FormData","append","post","headers","success","uploadFile","values","imageFile","dummyRequest","stepTwoFormContainer","textAlign","padding","width","paddingTop","paddingBottom","position","bottom"],"mappings":"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":["import React, { Dispatch, SetStateAction, useState, useEffect } from \"react\";\nimport {\n  Upload,\n  Row,\n  Col,\n  Typography,\n  Space,\n  Button,\n  message,\n  Modal,\n  Form,\n} from \"antd\";\nimport axios from \"axios\";\nimport ImgCrop from \"antd-img-crop\";\nimport styles from \"./createRoomForms.module.scss\";\nimport {\n  ArrowRightOutlined,\n  ArrowLeftOutlined,\n  InboxOutlined,\n  CheckCircleTwoTone,\n} from \"@ant-design/icons\";\n\nconst { Title, Text } = Typography;\nconst { Dragger } = Upload;\n\ninterface Props {\n  setStepTwoForm: Dispatch<SetStateAction<object>>;\n  handleStepChange(number: number): void;\n  stepTwoForm: Array<object>;\n}\n\nconst CreateSetupStepTwoForm: React.FC<Props> = ({\n  setStepTwoForm,\n  handleStepChange,\n  stepTwoForm,\n}) => {\n  const [fileList, setFileList] = useState<Array<any>>([]);\n  const [uploadFileList, setUploadList] = useState<Array<any>>([]);\n  const [isLoading, setLoadingStatus] = useState(false);\n  const [modalStatus, setModalStatus] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (stepTwoForm) {\n      setFileList([...stepTwoForm]);\n    }\n  }, []);\n\n  const onPreview = async (file: any) => {\n    let src = file.url;\n    if (!src) {\n      src = await new Promise((resolve) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file.originFileObj);\n        reader.onload = () => resolve(reader.result);\n      });\n    }\n    const image = new Image();\n    image.src = src;\n    const imgWindow: any = window.open(src);\n    console.log(imgWindow);\n    imgWindow.document.write(image.outerHTML);\n  };\n  const beforeUpload = () => {\n    if (fileList.length >= 3) {\n      message.error(\"Delete image first before trying to add a new one\");\n      return false;\n    } else {\n      return true;\n    }\n  };\n  const sendFormTwoData = () => {\n    setStepTwoForm([...fileList]);\n    handleStepChange(3);\n  };\n  const handleModalCancel = () => {\n    setModalStatus(false);\n  };\n  const handleStepTwoData = () => {\n    if (fileList.length === 0) {\n      message.error(\"Please upload a photo before continuing\");\n    } else if (fileList.length < 3) {\n      setModalStatus(true);\n    } else {\n      sendFormTwoData();\n    }\n  };\n  const upload = async (file) => {\n    const data = new FormData();\n    data.append(\"image-file\", file);\n    try {\n      const result = await axios.post(\n        \"http://localhost:5000/image/upload\",\n        data,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      );\n      console.log(result);\n      message.success(\"sucess\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const uploadFile = async (values) => {\n    setLoadingStatus(true);\n    await upload(values.imageFile.fileList[0].originFileObj);\n    await upload(values.imageFile.fileList[1].originFileObj);\n    await upload(values.imageFile.fileList[2].originFileObj);\n    setLoadingStatus(false);\n    handleStepTwoData();\n    //likely wont need this list tracking, will look to have custom preview images and single uploads\n    // setFileList([...imageList, values.imageFile.file.originFileObj]);\n  };\n  const dummyRequest = (file) => {\n    console.log(file)\n  };\n\n  return (\n    <div id={styles.stepTwoFormContainer}>\n      <Modal\n        visible={modalStatus}\n        title=\"Continue?\"\n        onCancel={handleModalCancel}\n        footer={[\n          <Button key=\"back\" onClick={handleModalCancel}>\n            Go back\n          </Button>,\n          <Button key=\"submit\" type=\"primary\" onClick={sendFormTwoData}>\n            Submit\n          </Button>,\n        ]}\n      >\n        <div\n          id=\"modalContainer\"\n          style={{ textAlign: \"center\", padding: \"1rem\" }}\n        >\n          <Text>Less than three photos selected</Text>\n          <br />\n          <Text> Do you wish to continue?</Text>\n        </div>\n      </Modal>\n\n      <Form name=\"file-upload-form\" onFinish={uploadFile}>\n        <Space size={30} direction=\"vertical\" style={{ width: \"100%\" }}>\n          <Col sm={24}>\n            <Title\n              level={2}\n              style={{ textAlign: \"center\", paddingTop: \"2rem\" }}\n            >\n              Upload Three Photos\n            </Title>\n          </Col>\n          <Row justify=\"center\" style={{ paddingBottom: \"2rem\" }}>\n            <Col style={{ width: \"100%\" }}>\n              <Form.Item name=\"imageFile\">\n                <Dragger\n                  name=\"image\"\n                  listType=\"picture\"\n                  fileList={fileList}\n                  onPreview={onPreview}\n                  maxCount={3}\n                  beforeUpload={beforeUpload}\n                  customRequest={dummyRequest}\n                  multiple={true}\n                >\n                  {fileList.length < 3 && (\n                    <>\n                      <p className=\"ant-upload-drag-icon\">\n                        <InboxOutlined />\n                      </p>\n                      <p className=\"ant-upload-text\">Drag and Drop or Browse</p>\n                    </>\n                  )}\n                  {fileList.length >= 3 && (\n                    <>\n                      <p className=\"ant-upload-drag-icon\">\n                        <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\n                      </p>\n                      <p className=\"ant-upload-text\">Max photos selected</p>\n                      <p className=\"ant-upload-hint\">\n                        Delete Photo(s) or Continue\n                      </p>\n                    </>\n                  )}\n                </Dragger>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row\n            justify=\"space-between\"\n            style={{ position: \"absolute\", bottom: \"0\", width: \"100%\" }}\n          >\n            <Button\n              onClick={() => {\n                handleStepChange(1);\n              }}\n              danger\n              shape=\"circle\"\n              size=\"large\"\n              icon={<ArrowLeftOutlined />}\n            />\n            <Form.Item>\n              <Button\n                // onClick={handleStepTwoData}\n                type=\"primary\"\n                htmlType=\"submit\"\n                shape=\"circle\"\n                size=\"large\"\n                icon={<ArrowRightOutlined />}\n              />\n            </Form.Item>\n          </Row>\n        </Space>\n      </Form>\n    </div>\n  );\n};\n\nexport default CreateSetupStepTwoForm;\n\n// import React, { Dispatch, SetStateAction, useState, useEffect } from \"react\";\n// import {\n//   Upload,\n//   Row,\n//   Col,\n//   Typography,\n//   Space,\n//   Button,\n//   message,\n//   Modal,\n// } from \"antd\";\n// import ImgCrop from \"antd-img-crop\";\n// import styles from \"./createRoomForms.module.scss\";\n// import {\n//   ArrowRightOutlined,\n//   ArrowLeftOutlined,\n//   InboxOutlined,\n//   CheckCircleTwoTone,\n// } from \"@ant-design/icons\";\n\n// const { Title, Text } = Typography;\n// const { Dragger } = Upload;\n\n// interface Props {\n//   setStepTwoForm: Dispatch<SetStateAction<object>>;\n//   handleStepChange(number: number): void;\n//   stepTwoForm: Array<object>;\n// }\n\n// const CreateSetupStepTwoForm: React.FC<Props> = ({\n//   setStepTwoForm,\n//   handleStepChange,\n//   stepTwoForm,\n// }) => {\n//   const [fileList, setFileList] = useState<Array<any>>([]);\n//   const [modalStatus, setModalStatus] = useState<boolean>(false);\n\n//   useEffect(() => {\n//     if (stepTwoForm) {\n//       setFileList([...stepTwoForm]);\n//     }\n//   }, []);\n\n//   const onChange = ({ fileList: newFileList }: any) => {\n//     setFileList(newFileList);\n//   };\n\n//   const onPreview = async (file: any) => {\n//     let src = file.url;\n//     if (!src) {\n//       src = await new Promise((resolve) => {\n//         const reader = new FileReader();\n//         reader.readAsDataURL(file.originFileObj);\n//         reader.onload = () => resolve(reader.result);\n//       });\n//     }\n//     const image = new Image();\n//     image.src = src;\n//     const imgWindow: any = window.open(src);\n//     console.log(imgWindow);\n//     imgWindow.document.write(image.outerHTML);\n//   };\n//   const beforeUpload = () => {\n//     if (fileList.length >= 3) {\n//       message.error(\"Delete image first before trying to add a new one\");\n//       return false;\n//     } else {\n//       return true;\n//     }\n//   };\n//   console.log(fileList);\n\n//   const sendFormTwoData = () => {\n//     setStepTwoForm([...fileList]);\n//     handleStepChange(3);\n//   };\n//   const handleModalCancel = () => {\n//     setModalStatus(false);\n//   };\n//   const handleStepTwoData = () => {\n//     if (fileList.length === 0) {\n//       message.error(\"Please upload a photo before continuing\");\n//     } else if (fileList.length < 3) {\n//       setModalStatus(true);\n//     } else {\n//       sendFormTwoData();\n//     }\n//   };\n//   return (\n//     <div id={styles.stepTwoFormContainer}>\n//       <Modal\n//         visible={modalStatus}\n//         title=\"Continue?\"\n//         onCancel={handleModalCancel}\n//         footer={[\n//           <Button key=\"back\" onClick={handleModalCancel}>\n//             Go back\n//           </Button>,\n//           <Button key=\"submit\" type=\"primary\" onClick={sendFormTwoData}>\n//             Submit\n//           </Button>,\n//         ]}\n//       >\n//         <div\n//           id=\"modalContainer\"\n//           style={{ textAlign: \"center\", padding: \"1rem\" }}\n//         >\n//           <Text>Less than three photos selected</Text>\n//           <br />\n//           <Text> Do you wish to continue?</Text>\n//         </div>\n//       </Modal>\n//       <Space size={30} direction=\"vertical\" style={{ width: \"100%\" }}>\n//         <Col sm={24}>\n//           <Title level={2} style={{ textAlign: \"center\", paddingTop: \"2rem\" }}>\n//             Upload Three Photos\n//           </Title>\n//         </Col>\n//         <Row justify=\"center\" style={{ paddingBottom: \"2rem\" }}>\n//           <Col style={{ width: \"100%\" }}>\n//             <Dragger\n//               listType=\"picture\"\n//               fileList={fileList}\n//               onChange={onChange}\n//               onPreview={onPreview}\n//               maxCount={3}\n//               beforeUpload={beforeUpload}\n//             >\n//               {fileList.length < 3 && (\n//                 <>\n//                   <p className=\"ant-upload-drag-icon\">\n//                     <InboxOutlined />\n//                   </p>\n//                   <p className=\"ant-upload-text\">Drag and Drop or Browse</p>\n//                 </>\n//               )}\n//               {fileList.length >= 3 && (\n//                 <>\n//                   <p className=\"ant-upload-drag-icon\">\n//                     <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\n//                   </p>\n//                   <p className=\"ant-upload-text\">Max photos selected</p>\n//                   <p className=\"ant-upload-hint\">Delete Photo(s) or Continue</p>\n//                 </>\n//               )}\n//             </Dragger>\n//           </Col>\n//         </Row>\n//         <Row\n//           justify=\"space-between\"\n//           style={{ position: \"absolute\", bottom: \"0\", width: \"100%\" }}\n//         >\n//           <Button\n//             onClick={() => {\n//               handleStepChange(1);\n//             }}\n//             danger\n//             htmlType=\"submit\"\n//             shape=\"circle\"\n//             size=\"large\"\n//             icon={<ArrowLeftOutlined />}\n//           />\n\n//           <Button\n//             onClick={handleStepTwoData}\n//             type=\"primary\"\n//             htmlType=\"submit\"\n//             shape=\"circle\"\n//             size=\"large\"\n//             icon={<ArrowRightOutlined />}\n//           />\n//         </Row>\n//       </Space>\n//     </div>\n//   );\n// };\n\n// export default CreateSetupStepTwoForm;"]},"metadata":{},"sourceType":"module"}