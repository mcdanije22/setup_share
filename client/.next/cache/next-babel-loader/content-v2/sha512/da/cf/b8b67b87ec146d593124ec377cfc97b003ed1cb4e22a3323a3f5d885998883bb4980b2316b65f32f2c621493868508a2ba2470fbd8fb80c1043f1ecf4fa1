{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/joshmcdaniel/Documents/work/repos/setup_share/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/joshmcdaniel/Documents/work/repos/setup_share/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/register.tsx\";\nimport { useState } from \"react\";\nimport { Row, Col, Form, Input, Button, message } from \"antd\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nimport { BaseAPI } from \"../utils/constants/common\";\nexport default function RegisterPage() {\n  var userRegistration = /*#__PURE__*/function () {\n    var _s = $RefreshSig$();\n\n    var _ref = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var router, _useState, loading, setLoading, first_name, last_name, username, email, password, confrim_password, registerUser, response, errorMessage;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _s();\n\n              router = useRouter();\n              _useState = useState(false), loading = _useState[0], setLoading = _useState[1];\n              first_name = values.first_name, last_name = values.last_name, username = values.username, email = values.email, password = values.password, confrim_password = values.confrim_password;\n\n              if (!(password !== confrim_password)) {\n                _context.next = 8;\n                break;\n              }\n\n              message.error(\"Passswords do not match\");\n              _context.next = 24;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              setLoading(true);\n              _context.next = 12;\n              return axios.post(\"\".concat(BaseAPI, \"/user/register\"), {\n                first_name: first_name,\n                last_name: last_name,\n                username: username,\n                email: email,\n                password: password\n              });\n\n            case 12:\n              registerUser = _context.sent;\n              response = registerUser;\n              message.success(\"Registration successful\");\n              setTimeout(function () {\n                router.push(\"/login\");\n                setLoading(false);\n              }, 1000);\n              console.log(response);\n              _context.next = 24;\n              break;\n\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](8);\n              errorMessage = _context.t0.response.data.message;\n              message.error(errorMessage);\n              setLoading(false);\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[8, 19]]);\n    }), \"OeGW3YQfIEwiDdtbkZtE38+y0P4=\", false, function () {\n      return [useRouter];\n    }));\n\n    return function userRegistration(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      justify: \"center\",\n      align: \"middle\",\n      style: {\n        minHeight: \"100vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: {\n          span: 20\n        },\n        sm: {\n          span: 12\n        },\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          name: \"register\",\n          onFinish: userRegistration // onFinishFailed={onFinishFailed}\n          ,\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"First Name\",\n            name: \"first_name\",\n            rules: [{\n              required: true,\n              message: \"Please input your first name\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Last Name\",\n            name: \"last_name\",\n            rules: [{\n              required: true,\n              message: \"Please input your last name\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"User Name\",\n            name: \"username\",\n            rules: [{\n              required: true,\n              message: \"Please input your user name\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Email\",\n            name: \"email\",\n            rules: [{\n              required: true,\n              message: \"Please input your email address\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Password\",\n            name: \"password\",\n            rules: [{\n              required: true,\n              message: \"Please input your password\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Confirm Passwrod\",\n            name: \"confrim_password\",\n            rules: [{\n              required: true,\n              message: \"Please confirm your password\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_c = RegisterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"sources":["/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/register.tsx"],"names":["useState","Row","Col","Form","Input","Button","message","axios","useRouter","BaseAPI","RegisterPage","userRegistration","values","router","loading","setLoading","first_name","last_name","username","email","password","confrim_password","error","post","registerUser","response","success","setTimeout","push","console","log","errorMessage","data","minHeight","span","required"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { Row, Col, Form, Input, Button, message } from \"antd\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nimport { BaseAPI } from \"../utils/constants/common\";\n\nexport default function RegisterPage() {\n  interface User {\n    first_name: string;\n    last_name: string;\n    username: string;\n    email: string;\n    password: string;\n    confrim_password: string;\n  }\n\n  const userRegistration = async (values: User) => {\n    const router = useRouter();\n    const [loading, setLoading] = useState(false);\n    const {\n      first_name,\n      last_name,\n      username,\n      email,\n      password,\n      confrim_password,\n    } = values;\n    if (password !== confrim_password) {\n      message.error(\"Passswords do not match\");\n    } else {\n      try {\n        setLoading(true);\n        const registerUser = await axios.post(`${BaseAPI}/user/register`, {\n          first_name,\n          last_name,\n          username,\n          email,\n          password,\n        });\n        const response = registerUser;\n        message.success(\"Registration successful\");\n        setTimeout(() => {\n          router.push(\"/login\");\n          setLoading(false);\n        }, 1000);\n        console.log(response);\n      } catch (error: any) {\n        const errorMessage = error.response.data.message;\n        message.error(errorMessage);\n        setLoading(false);\n      }\n    }\n  };\n  return (\n    <div id=\"container\">\n      <Row justify=\"center\" align=\"middle\" style={{ minHeight: \"100vh\" }}>\n        <Col xs={{ span: 20 }} sm={{ span: 12 }}>\n          <Form\n            name=\"register\"\n            onFinish={userRegistration}\n            // onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              label=\"First Name\"\n              name=\"first_name\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your first name\",\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Last Name\"\n              name=\"last_name\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your last name\",\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              label=\"User Name\"\n              name=\"username\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your user name\",\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              label=\"Email\"\n              name=\"email\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your email address\",\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Password\"\n              name=\"password\"\n              rules={[\n                { required: true, message: \"Please input your password\" },\n              ]}\n            >\n              <Input.Password />\n            </Form.Item>\n            <Form.Item\n              label=\"Confirm Passwrod\"\n              name=\"confrim_password\"\n              rules={[\n                { required: true, message: \"Please confirm your password\" },\n              ]}\n            >\n              <Input.Password />\n            </Form.Item>\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}