{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/register.tsx\";\nimport { useState } from \"react\";\nimport { Row, Col, Form, Input, message } from \"antd\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nimport { BaseAPI } from \"../utils/constants/common\";\nimport styles from \"../pageStyles/register.module.scss\";\nexport default function RegisterPage() {\n  const userRegistration = async values => {\n    const router = useRouter();\n    const {\n      0: loading,\n      1: setLoading\n    } = useState(false);\n    const {\n      first_name,\n      last_name,\n      username,\n      email,\n      password,\n      confrim_password\n    } = values;\n\n    if (password !== confrim_password) {\n      message.error(\"Passswords do not match\");\n    } else {\n      try {\n        setLoading(true);\n        const registerUser = await axios.post(`${BaseAPI}/user/register`, {\n          first_name,\n          last_name,\n          username,\n          email,\n          password\n        });\n        const response = registerUser;\n        message.success(\"Registration successful\");\n        setTimeout(() => {\n          router.push(\"/login\");\n          setLoading(false);\n        }, 1000);\n        console.log(response);\n      } catch (error) {\n        const errorMessage = error.response.data.message;\n        message.error(errorMessage);\n        setLoading(false);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: styles.loginPageContainer,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      justify: \"center\",\n      align: \"middle\",\n      style: {\n        minHeight: \"100vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: {\n          span: 20\n        },\n        md: {\n          span: 18\n        },\n        lg: {\n          span: 12\n        },\n        xl: {\n          span: 8\n        },\n        id: styles.formWindow,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          name: \"register\",\n          onFinish: userRegistration,\n          labelCol: {\n            span: 24\n          } // onFinishFailed={onFinishFailed}\n          ,\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"First Name\",\n            name: \"first_name\",\n            rules: [{\n              required: true,\n              message: \"Please input your first name\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Last Name\",\n            name: \"last_name\",\n            rules: [{\n              required: true,\n              message: \"Please input your last name\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/register.tsx"],"names":["useState","Row","Col","Form","Input","message","axios","useRouter","BaseAPI","styles","RegisterPage","userRegistration","values","router","loading","setLoading","first_name","last_name","username","email","password","confrim_password","error","registerUser","post","response","success","setTimeout","push","console","log","errorMessage","data","loginPageContainer","minHeight","span","formWindow","required"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { Row, Col, Form, Input, Button, message } from \"antd\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nimport { BaseAPI } from \"../utils/constants/common\";\nimport styles from \"../pageStyles/register.module.scss\";\n\nexport default function RegisterPage() {\n  interface User {\n    first_name: string;\n    last_name: string;\n    username: string;\n    email: string;\n    password: string;\n    confrim_password: string;\n  }\n\n  const userRegistration = async (values: User) => {\n    const router = useRouter();\n    const [loading, setLoading] = useState(false);\n    const {\n      first_name,\n      last_name,\n      username,\n      email,\n      password,\n      confrim_password,\n    } = values;\n    if (password !== confrim_password) {\n      message.error(\"Passswords do not match\");\n    } else {\n      try {\n        setLoading(true);\n        const registerUser = await axios.post(`${BaseAPI}/user/register`, {\n          first_name,\n          last_name,\n          username,\n          email,\n          password,\n        });\n        const response = registerUser;\n        message.success(\"Registration successful\");\n        setTimeout(() => {\n          router.push(\"/login\");\n          setLoading(false);\n        }, 1000);\n        console.log(response);\n      } catch (error: any) {\n        const errorMessage = error.response.data.message;\n        message.error(errorMessage);\n        setLoading(false);\n      }\n    }\n  };\n  return (\n    <div id={styles.loginPageContainer}>\n      <Row justify=\"center\" align=\"middle\" style={{ minHeight: \"100vh\" }}>\n        <Col\n          xs={{ span: 20 }}\n          md={{ span: 18 }}\n          lg={{ span: 12 }}\n          xl={{ span: 8 }}\n          id={styles.formWindow}\n        >\n          <Form\n            name=\"register\"\n            onFinish={userRegistration}\n            labelCol={{ span: 24 }}\n            // onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              label=\"First Name\"\n              name=\"first_name\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your first name\",\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Last Name\"\n              name=\"last_name\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your last name\",\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}