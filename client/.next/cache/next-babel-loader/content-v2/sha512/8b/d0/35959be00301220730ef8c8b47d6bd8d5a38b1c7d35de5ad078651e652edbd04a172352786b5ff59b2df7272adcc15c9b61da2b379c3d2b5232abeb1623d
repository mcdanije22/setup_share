{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/analytics/[id].tsx\";\nimport { useContext } from \"react\";\nimport styles from \"../../pageStyles/analytics.module.scss\";\nimport DashboardLayout from \"../../components/Layout/DashboardLayout\";\nimport { pageAuthCheck } from \"../../utils/helperFunctions/pageAuthCheck\";\nimport { BaseAPI } from \"../../utils/constants/common\";\nimport axios from \"axios\";\nimport { Card, Row, Col, Modal, Button, PageHeader, Typography, Table, Space, Breadcrumb, message } from \"antd\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport Link from \"next/link\";\nimport { useEffect, useState } from \"react\";\nimport { UserContext } from \"../../utils/context/userContext\";\nconst {\n  Meta\n} = Card;\nconst {\n  Title,\n  Text\n} = Typography;\nexport default function AnalyticsPage(props) {\n  const {\n    setUpInfo,\n    imageItems\n  } = props;\n  const {\n    0: currentImageItems,\n    1: setCurrentImageItems\n  } = useState(imageItems);\n  const {\n    currentUser,\n    setUser\n  } = useContext(UserContext);\n  const {\n    0: selectedImageItems,\n    1: setSelectedImageItems\n  } = useState();\n  const {\n    0: activeSelection,\n    1: setActiveSelection\n  } = useState();\n  const {\n    0: isLoading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: isItemModalOpen,\n    1: setItemModalStatus\n  } = useState(false);\n  const {\n    0: selectedItem,\n    1: setItemSelection\n  } = useState(null);\n  const {\n    0: isModalOpen,\n    1: setModalStatus\n  } = useState(false);\n  useEffect(() => {\n    if (!currentUser) {\n      reload();\n    }\n  }, []);\n\n  const reload = async () => {\n    try {\n      const response = await axios.get(`${BaseAPI}/user/usercontext`, {\n        withCredentials: true\n      });\n      const userInfo = await response.data;\n      setUser(userInfo);\n    } catch (error) {\n      return {\n        redirect: {\n          permanent: false,\n          destination: \"/login\"\n        }\n      };\n    }\n  };\n\n  useEffect(() => {\n    if (!activeSelection) {\n      setActiveSelection(setUpInfo[0].image_id);\n    }\n  }, []);\n  useEffect(() => {\n    filterActiveImageSelection();\n  }, [activeSelection, currentImageItems]);\n\n  const filterActiveImageSelection = async () => {\n    setLoading(true);\n    const orgList = currentImageItems;\n    const newList = orgList.filter(item => {\n      return item.image_id === activeSelection;\n    });\n    setSelectedImageItems(newList);\n    setLoading(false);\n  };\n\n  const tableData = selectedImageItems === null || selectedImageItems === void 0 ? void 0 : selectedImageItems.map((item, i) => {\n    //need object to update here in useeffect after item delete\n    return {\n      key: item.item_id,\n      itemName: item.item_name,\n      affilateLink: item.item_url\n    };\n  });\n  const columns = [{\n    title: \"Item Name\",\n    dataIndex: \"itemName\",\n    key: \"name\"\n  }, {\n    title: \"Affilate Link\",\n    dataIndex: \"affilateLink\",\n    key: \"link\"\n  }, {\n    title: \"Clicks\",\n    dataIndex: \"age\",\n    key: \"age\"\n  }, {\n    title: \"Action\",\n    key: \"action\",\n    render: (text, record) => /*#__PURE__*/_jsxDEV(Space, {\n      size: \"middle\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        danger: true,\n        type: \"link\",\n        icon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 19\n        }, this),\n        onClick: () => {\n          setSelectedItem(record);\n          handleItemModalOpen();\n        },\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this)\n  }];\n\n  const handleItemModalCancel = () => {\n    setItemModalStatus(false);\n    setItemSelection(null);\n  };\n\n  const handleItemModalOpen = () => {\n    setItemModalStatus(true);\n  };\n\n  const setSelectedItem = item => {\n    setItemSelection(item);\n  };\n\n  const filterItemList = itemId => {\n    const orgItemList = currentImageItems;\n    const newList = orgItemList.filter(item => {\n      return item.item_id != itemId;\n    });\n    setCurrentImageItems(newList);\n  };\n\n  const deleteItem = async () => {\n    try {\n      const response = await axios.put(`${BaseAPI}/setup/item/delete`, {\n        itemId: selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.key,\n        userId: currentUser.user.user_id\n      }, {\n        withCredentials: true\n      });\n      const result = await response.data;\n      const successMessage = await result.message;\n      filterItemList(selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.key);\n      message.success(successMessage);\n      handleItemModalCancel();\n    } catch (error) {\n      const errorMessage = error.response.data.message;\n      message.error(errorMessage);\n      handleItemModalCancel();\n    }\n  };\n\n  const handleModalCancel = () => {\n    setModalStatus(false);\n  };\n\n  const handleModalOpen = () => {\n    setModalStatus(true);\n  };\n\n  const deleteSetup = async () => {\n    try {\n      const response = await axios.put(`${BaseAPI}/setup/delete`, {\n        setupID: setUpInfo[0].setup_id,\n        userId: currentUser.user.user_id\n      }, {\n        withCredentials: true\n      });\n      const result = await response.data;\n      const successMessage = await result.message;\n      message.success(successMessage);\n      handleItemModalCancel();\n    } catch (error) {\n      const errorMessage = error.response.data.message;\n      message.error(errorMessage);\n      handleItemModalCancel();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      visible: isItemModalOpen,\n      title: `Delete Item ${selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.itemName}?`,\n      onCancel: handleItemModalCancel,\n      footer: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleItemModalCancel,\n        className: \"buttonShadow\",\n        children: \"Cancel\"\n      }, \"back\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        danger: true,\n        className: \"buttonShadow\",\n        onClick: deleteItem,\n        children: \"Delete\"\n      }, \"submit\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this)],\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"modalContainer\",\n        style: {\n          textAlign: \"center\",\n          padding: \"1rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: \"Delete Item From Setup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      visible: isModalOpen,\n      title: \"Delete setup?\",\n      onCancel: handleModalCancel,\n      footer: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleModalCancel,\n        className: \"buttonShadow\",\n        children: \"Cancel\"\n      }, \"back\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        danger: true,\n        className: \"buttonShadow\",\n        onClick: deleteItem,\n        children: \"Delete\"\n      }, \"submit\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this)],\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"modalContainer\",\n        style: {\n          textAlign: \"center\",\n          padding: \"1rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: `Delete ${setUpInfo[0].setup_title} setup?`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: styles.analyticsContainer,\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: `/dashboard`,\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n          children: [setUpInfo[0].setup_title, \" setup\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PageHeader, {\n        style: {\n          padding: \"1rem 0\"\n        },\n        title: `${setUpInfo[0].setup_title} Analytics`,\n        subTitle: \"10 Views\",\n        extra: [/*#__PURE__*/_jsxDEV(Button, {\n          danger: true,\n          onClick: handleModalOpen,\n          children: \"Delete\"\n        }, \"2\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this)]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          gutter: [48, 28],\n          justify: \"start\",\n          children: setUpInfo.sort((a, b) => a.image_position_number > b.image_position_number ? 1 : -1).map((setupImage, i) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                xs: {\n                  span: 24\n                },\n                md: {\n                  span: 12\n                },\n                lg: {\n                  span: 6\n                },\n                className: styles.cardSpacer,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  hoverable: true,\n                  cover: /*#__PURE__*/_jsxDEV(\"img\", {\n                    alt: \"setup photo\",\n                    src: setupImage.image_url\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 27\n                  }, this),\n                  onClick: () => {\n                    setActiveSelection(setupImage.image_id);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Meta, {\n                    title: [/*#__PURE__*/_jsxDEV(Title, {\n                      level: 5,\n                      className: setupImage.image_id === activeSelection ? styles.active : \"\",\n                      children: [setupImage.image_position, \" Image\"]\n                    }, \"1\", true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 334,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 332,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 21\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        style: {\n          marginTop: \"6rem\"\n        },\n        columns: columns,\n        dataSource: tableData,\n        loading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n}\nexport const getServerSideProps = async context => {\n  var _authCheck$props;\n\n  const {\n    id\n  } = context.query;\n  const authCheck = await pageAuthCheck(context);\n\n  if ((_authCheck$props = authCheck.props) !== null && _authCheck$props !== void 0 && _authCheck$props.data.authd) {\n    try {\n      const response = await axios.get(`${BaseAPI}/user/analytics/${id}`);\n      const setupAnalyticsInfo = await response.data;\n\n      if (setupAnalyticsInfo.setUpInfo.length === 0) {\n        return {\n          redirect: {\n            permanent: false,\n            destination: \"/404\"\n          }\n        };\n      }\n\n      if (authCheck.props.data.user !== setupAnalyticsInfo.setUpInfo[0].user_id) {\n        return {\n          redirect: {\n            permanent: false,\n            destination: \"/dashboard\"\n          }\n        };\n      } else {\n        return {\n          props: setupAnalyticsInfo\n        };\n      }\n    } catch (e) {\n      return {\n        redirect: {\n          permanent: false,\n          destination: \"/404\"\n        }\n      };\n    }\n  } else {\n    return {\n      redirect: {\n        permanent: false,\n        destination: \"/login\"\n      }\n    };\n  }\n};","map":{"version":3,"sources":["/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/analytics/[id].tsx"],"names":["useContext","styles","DashboardLayout","pageAuthCheck","BaseAPI","axios","Card","Row","Col","Modal","Button","PageHeader","Typography","Table","Space","Breadcrumb","message","DeleteOutlined","Link","useEffect","useState","UserContext","Meta","Title","Text","AnalyticsPage","props","setUpInfo","imageItems","currentImageItems","setCurrentImageItems","currentUser","setUser","selectedImageItems","setSelectedImageItems","activeSelection","setActiveSelection","isLoading","setLoading","isItemModalOpen","setItemModalStatus","selectedItem","setItemSelection","isModalOpen","setModalStatus","reload","response","get","withCredentials","userInfo","data","error","redirect","permanent","destination","image_id","filterActiveImageSelection","orgList","newList","filter","item","tableData","map","i","key","item_id","itemName","item_name","affilateLink","item_url","columns","title","dataIndex","render","text","record","setSelectedItem","handleItemModalOpen","handleItemModalCancel","filterItemList","itemId","orgItemList","deleteItem","put","userId","user","user_id","result","successMessage","success","errorMessage","handleModalCancel","handleModalOpen","deleteSetup","setupID","setup_id","textAlign","padding","setup_title","analyticsContainer","sort","a","b","image_position_number","setupImage","span","cardSpacer","image_url","active","image_position","marginTop","getServerSideProps","context","id","query","authCheck","authd","setupAnalyticsInfo","length","e"],"mappings":"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","sourcesContent":["import { useContext } from \"react\";\nimport styles from \"../../pageStyles/analytics.module.scss\";\nimport dashboardStyles from \"../../../components/Layout/DashboardLayout.module.scss\";\nimport DashboardLayout from \"../../components/Layout/DashboardLayout\";\nimport { GetServerSideProps } from \"next\";\nimport { pageAuthCheck } from \"../../utils/helperFunctions/pageAuthCheck\";\nimport { BaseAPI } from \"../../utils/constants/common\";\nimport axios from \"axios\";\nimport {\n  Card,\n  Row,\n  Col,\n  Modal,\n  Button,\n  PageHeader,\n  Typography,\n  Table,\n  Space,\n  Breadcrumb,\n  message,\n} from \"antd\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport Link from \"next/link\";\nimport { useEffect, useState } from \"react\";\nimport { UserContext } from \"../../utils/context/userContext\";\n\nconst { Meta } = Card;\nconst { Title, Text } = Typography;\n\ninterface Props {\n  setUpInfo: Array<Setup>;\n  imageItems: Array<Item>;\n}\n\ninterface Setup {\n  setup_id: string;\n  setup_title: string;\n  setup_description: string;\n  setup_type: string;\n  setup_created_date: Date;\n  created_screen_type?: any;\n  image_id: string;\n  image_url: string;\n  image_position: string;\n  image_position_number: number;\n  user_id: string;\n  username: string;\n}\n\ninterface Item {\n  item_id: string;\n  image_id: string;\n  coords_list: number[];\n  item_name: string;\n  item_url: string;\n}\n\ninterface RowItem {\n  key: string;\n  itemName: string;\n  affilateLink: string;\n}\n\nexport default function AnalyticsPage(props: Props) {\n  const { setUpInfo, imageItems } = props;\n  const [currentImageItems, setCurrentImageItems] = useState(imageItems);\n  const { currentUser, setUser } = useContext<any>(UserContext);\n  const [selectedImageItems, setSelectedImageItems] = useState<Array<Item>>();\n  const [activeSelection, setActiveSelection] = useState<string>();\n  const [isLoading, setLoading] = useState<boolean>(false);\n  const [isItemModalOpen, setItemModalStatus] = useState<boolean>(false);\n  const [selectedItem, setItemSelection] = useState<RowItem | null>(null);\n  const [isModalOpen, setModalStatus] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (!currentUser) {\n      reload();\n    }\n  }, []);\n\n  const reload = async () => {\n    try {\n      const response = await axios.get(`${BaseAPI}/user/usercontext`, {\n        withCredentials: true,\n      });\n      const userInfo = await response.data;\n      setUser(userInfo);\n    } catch (error) {\n      return {\n        redirect: {\n          permanent: false,\n          destination: \"/login\",\n        },\n      };\n    }\n  };\n\n  useEffect(() => {\n    if (!activeSelection) {\n      setActiveSelection(setUpInfo[0].image_id);\n    }\n  }, []);\n\n  useEffect(() => {\n    filterActiveImageSelection();\n  }, [activeSelection, currentImageItems]);\n\n  const filterActiveImageSelection = async () => {\n    setLoading(true);\n    const orgList = currentImageItems;\n    const newList = orgList.filter((item) => {\n      return item.image_id === activeSelection;\n    });\n    setSelectedImageItems(newList);\n    setLoading(false);\n  };\n\n  const tableData = selectedImageItems?.map((item, i) => {\n    //need object to update here in useeffect after item delete\n    return {\n      key: item.item_id,\n      itemName: item.item_name,\n      affilateLink: item.item_url,\n    };\n  });\n\n  const columns = [\n    {\n      title: \"Item Name\",\n      dataIndex: \"itemName\",\n      key: \"name\",\n    },\n    {\n      title: \"Affilate Link\",\n      dataIndex: \"affilateLink\",\n      key: \"link\",\n    },\n    {\n      title: \"Clicks\",\n      dataIndex: \"age\",\n      key: \"age\",\n    },\n    {\n      title: \"Action\",\n      key: \"action\",\n      render: (text: string, record: any) => (\n        <Space size=\"middle\">\n          <Button\n            danger\n            type=\"link\"\n            icon={<DeleteOutlined />}\n            onClick={() => {\n              setSelectedItem(record);\n              handleItemModalOpen();\n            }}\n          >\n            Delete\n          </Button>\n        </Space>\n      ),\n    },\n  ];\n  const handleItemModalCancel = () => {\n    setItemModalStatus(false);\n    setItemSelection(null);\n  };\n  const handleItemModalOpen = () => {\n    setItemModalStatus(true);\n  };\n  const setSelectedItem = (item: RowItem) => {\n    setItemSelection(item);\n  };\n  const filterItemList = (itemId: string | undefined) => {\n    const orgItemList = currentImageItems;\n    const newList = orgItemList.filter((item) => {\n      return item.item_id != itemId;\n    });\n    setCurrentImageItems(newList);\n  };\n\n  const deleteItem = async () => {\n    try {\n      const response = await axios.put(\n        `${BaseAPI}/setup/item/delete`,\n        {\n          itemId: selectedItem?.key,\n          userId: currentUser.user.user_id,\n        },\n        { withCredentials: true }\n      );\n      const result = await response.data;\n      const successMessage = await result.message;\n      filterItemList(selectedItem?.key);\n      message.success(successMessage);\n      handleItemModalCancel();\n    } catch (error: any) {\n      const errorMessage = error.response.data.message;\n      message.error(errorMessage);\n      handleItemModalCancel();\n    }\n  };\n\n  const handleModalCancel = () => {\n    setModalStatus(false);\n  };\n  const handleModalOpen = () => {\n    setModalStatus(true);\n  };\n\n  const deleteSetup = async () => {\n    try {\n      const response = await axios.put(\n        `${BaseAPI}/setup/delete`,\n        {\n          setupID: setUpInfo[0].setup_id,\n          userId: currentUser.user.user_id,\n        },\n        { withCredentials: true }\n      );\n      const result = await response.data;\n      const successMessage = await result.message;\n      message.success(successMessage);\n      handleItemModalCancel();\n    } catch (error: any) {\n      const errorMessage = error.response.data.message;\n      message.error(errorMessage);\n      handleItemModalCancel();\n    }\n  };\n\n  return (\n    <DashboardLayout>\n      <Modal\n        visible={isItemModalOpen}\n        title={`Delete Item ${selectedItem?.itemName}?`}\n        onCancel={handleItemModalCancel}\n        footer={[\n          <Button\n            key=\"back\"\n            onClick={handleItemModalCancel}\n            className=\"buttonShadow\"\n          >\n            Cancel\n          </Button>,\n          <Button\n            key=\"submit\"\n            danger\n            className=\"buttonShadow\"\n            onClick={deleteItem}\n          >\n            Delete\n          </Button>,\n        ]}\n      >\n        <div\n          id=\"modalContainer\"\n          style={{ textAlign: \"center\", padding: \"1rem\" }}\n        >\n          <Text>Delete Item From Setup</Text>\n        </div>\n      </Modal>\n      <Modal\n        visible={isModalOpen}\n        title={\"Delete setup?\"}\n        onCancel={handleModalCancel}\n        footer={[\n          <Button\n            key=\"back\"\n            onClick={handleModalCancel}\n            className=\"buttonShadow\"\n          >\n            Cancel\n          </Button>,\n          <Button\n            key=\"submit\"\n            danger\n            className=\"buttonShadow\"\n            onClick={deleteItem}\n          >\n            Delete\n          </Button>,\n        ]}\n      >\n        <div\n          id=\"modalContainer\"\n          style={{ textAlign: \"center\", padding: \"1rem\" }}\n        >\n          <Text>{`Delete ${setUpInfo[0].setup_title} setup?`}</Text>\n        </div>\n      </Modal>\n      <div id={styles.analyticsContainer}>\n        <Breadcrumb>\n          <Breadcrumb.Item>\n            <Link href={`/dashboard`}>Dashboard</Link>\n          </Breadcrumb.Item>\n          <Breadcrumb.Item>{setUpInfo[0].setup_title} setup</Breadcrumb.Item>\n        </Breadcrumb>\n        <PageHeader\n          style={{ padding: \"1rem 0\" }}\n          title={`${setUpInfo[0].setup_title} Analytics`}\n          subTitle=\"10 Views\"\n          extra={[\n            <Button key=\"2\" danger onClick={handleModalOpen}>\n              Delete\n            </Button>,\n          ]}\n        />\n        <div>\n          <Row gutter={[48, 28]} justify=\"start\">\n            {setUpInfo\n              .sort((a, b) =>\n                a.image_position_number > b.image_position_number ? 1 : -1\n              )\n              .map((setupImage, i) => {\n                return (\n                  <div key={i}>\n                    <Col\n                      xs={{ span: 24 }}\n                      md={{ span: 12 }}\n                      lg={{ span: 6 }}\n                      className={styles.cardSpacer}\n                    >\n                      <Card\n                        hoverable\n                        cover={\n                          <img alt=\"setup photo\" src={setupImage.image_url} />\n                        }\n                        onClick={() => {\n                          setActiveSelection(setupImage.image_id);\n                        }}\n                      >\n                        <Meta\n                          title={[\n                            <Title\n                              level={5}\n                              className={\n                                setupImage.image_id === activeSelection\n                                  ? styles.active\n                                  : \"\"\n                              }\n                              key=\"1\"\n                            >\n                              {setupImage.image_position} Image\n                            </Title>,\n                          ]}\n                        />\n                      </Card>\n                    </Col>\n                  </div>\n                );\n              })}\n          </Row>\n        </div>\n        <Table\n          style={{ marginTop: \"6rem\" }}\n          columns={columns}\n          dataSource={tableData}\n          loading={isLoading}\n        />\n      </div>\n    </DashboardLayout>\n  );\n}\n\nexport const getServerSideProps: GetServerSideProps = async (context) => {\n  const { id } = context.query;\n  const authCheck = await pageAuthCheck(context);\n  if (authCheck.props?.data.authd) {\n    try {\n      const response = await axios.get(`${BaseAPI}/user/analytics/${id}`);\n      const setupAnalyticsInfo = await response.data;\n      if (setupAnalyticsInfo.setUpInfo.length === 0) {\n        return {\n          redirect: {\n            permanent: false,\n            destination: \"/404\",\n          },\n        };\n      }\n      if (\n        authCheck.props.data.user !== setupAnalyticsInfo.setUpInfo[0].user_id\n      ) {\n        return {\n          redirect: {\n            permanent: false,\n            destination: \"/dashboard\",\n          },\n        };\n      } else {\n        return {\n          props: setupAnalyticsInfo,\n        };\n      }\n    } catch (e) {\n      return {\n        redirect: {\n          permanent: false,\n          destination: \"/404\",\n        },\n      };\n    }\n  } else {\n    return {\n      redirect: {\n        permanent: false,\n        destination: \"/login\",\n      },\n    };\n  }\n};\n"]},"metadata":{},"sourceType":"module"}