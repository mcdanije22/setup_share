{"ast":null,"code":"import axios from \"axios\";\nimport { BaseAPI } from \"../constants/common\";\nimport { useRouter } from \"next/router\";\nimport { message } from \"antd\";\nexport const authCheck = async () => {\n  const router = useRouter();\n\n  try {\n    setLoading(true);\n    const authCheck = await axios.get(`${BaseAPI}/user/pageauth`, {\n      withCredentials: true\n    });\n    const data = authCheck;\n  } catch (error) {\n    message.error(\"Please log in\");\n    setTimeout(async () => {\n      await router.push(\"/login\");\n      setLoading(false);\n    }, 1000);\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/joshmcdaniel/Documents/work/repos/setup_share/utils/helperFunctions/authCheck.tsx"],"names":["axios","BaseAPI","useRouter","message","authCheck","router","setLoading","get","withCredentials","data","error","setTimeout","push","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,QAAwB,MAAxB;AAEA,OAAO,MAAMC,SAAS,GAAG,YAAY;AACnC,QAAMC,MAAM,GAAGH,SAAS,EAAxB;;AACA,MAAI;AACFI,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMF,SAAS,GAAG,MAAMJ,KAAK,CAACO,GAAN,CAAW,GAAEN,OAAQ,gBAArB,EAAsC;AAC5DO,MAAAA,eAAe,EAAE;AAD2C,KAAtC,CAAxB;AAGA,UAAMC,IAAI,GAAGL,SAAb;AACD,GAND,CAME,OAAOM,KAAP,EAAc;AACdP,IAAAA,OAAO,CAACO,KAAR,CAAc,eAAd;AACAC,IAAAA,UAAU,CAAC,YAAY;AACrB,YAAMN,MAAM,CAACO,IAAP,CAAY,QAAZ,CAAN;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHS,EAGP,IAHO,CAAV;AAIAO,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACD;AACF,CAhBM","sourcesContent":["import axios from \"axios\";\nimport { BaseAPI } from \"../constants/common\";\nimport { useRouter } from \"next/router\";\nimport { message } from \"antd\";\n\nexport const authCheck = async () => {\n  const router = useRouter();\n  try {\n    setLoading(true);\n    const authCheck = await axios.get(`${BaseAPI}/user/pageauth`, {\n      withCredentials: true,\n    });\n    const data = authCheck;\n  } catch (error) {\n    message.error(\"Please log in\");\n    setTimeout(async () => {\n      await router.push(\"/login\");\n      setLoading(false);\n    }, 1000);\n    console.log(error);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}