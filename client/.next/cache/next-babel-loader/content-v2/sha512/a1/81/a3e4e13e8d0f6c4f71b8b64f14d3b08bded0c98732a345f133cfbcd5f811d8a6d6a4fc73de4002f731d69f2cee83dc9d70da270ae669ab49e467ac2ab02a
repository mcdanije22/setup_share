{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joshmcdaniel/Documents/work/repos/setup_share/components/CreateSetupForms/CreateSetupStepTwoForm.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Upload, Row, Col, Typography, Space, Button, message, Modal, Form } from \"antd\";\nimport axios from \"axios\";\nimport styles from \"./createRoomForms.module.scss\";\nimport { ArrowRightOutlined, ArrowLeftOutlined, InboxOutlined, CheckCircleTwoTone } from \"@ant-design/icons\";\nconst {\n  Title,\n  Text\n} = Typography;\nconst {\n  Dragger\n} = Upload;\n\nconst CreateSetupStepTwoForm = ({\n  setStepTwoForm,\n  handleStepChange,\n  stepTwoForm\n}) => {\n  const {\n    0: fileList,\n    1: setFileList\n  } = useState([]);\n  const {\n    0: isLoading,\n    1: setLoadingStatus\n  } = useState(false);\n  const {\n    0: modalStatus,\n    1: setModalStatus\n  } = useState(false);\n  useEffect(() => {\n    if (stepTwoForm) {\n      setFileList([...stepTwoForm]);\n    }\n  }, []);\n\n  const onChange = ({\n    fileList: newFileList\n  }) => {\n    setFileList(newFileList);\n  };\n\n  const onPreview = async file => {\n    let src = file.url;\n\n    if (!src) {\n      src = await new Promise(resolve => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file.originFileObj);\n\n        reader.onload = () => resolve(reader.result);\n      });\n    }\n\n    const image = new Image();\n    image.src = src;\n    const imgWindow = window.open(src);\n    console.log(imgWindow);\n    imgWindow.document.write(image.outerHTML);\n  };\n\n  const beforeUpload = () => {\n    if (fileList.length >= 3) {\n      message.error(\"Delete image first before trying to add a new one\");\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const sendFormTwoData = () => {\n    setStepTwoForm([...fileList]);\n    handleStepChange(3);\n  };\n\n  const handleModalCancel = () => {\n    setModalStatus(false);\n  };\n\n  const handleStepTwoData = () => {\n    if (fileList.length === 0) {\n      message.error(\"Please upload a photo before continuing\");\n    } else if (fileList.length < 3) {\n      setModalStatus(true);\n    } else {\n      sendFormTwoData();\n    }\n  };\n\n  const upload = async file => {\n    const data = new FormData();\n    data.append(\"image-file\", file);\n\n    try {\n      const result = await axios.post(\"http://localhost:5000/image/upload\", data, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      console.log(result);\n      message.success(\"sucess\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const uploadFile = async values => {\n    setLoadingStatus(true);\n    const awsData = await values.imageFile.fileList.map((item, i) => {\n      upload(item.originFileObj);\n    });\n    setLoadingStatus(false);\n    handleStepTwoData(); //likely wont need this list tracking, will look to have custom preview images and single uploads\n    // setFileList([...imageList, values.imageFile.file.originFileObj]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: styles.stepTwoFormContainer,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      name: \"file-upload-form\",\n      onFinish: uploadFile,\n      children: /*#__PURE__*/_jsxDEV(Space, {\n        size: 30,\n        direction: \"vertical\",\n        style: {\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: 24,\n          children: /*#__PURE__*/_jsxDEV(Title, {\n            level: 2,\n            style: {\n              textAlign: \"center\",\n              paddingTop: \"2rem\"\n            },\n            children: \"Upload Three Photos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          justify: \"center\",\n          style: {\n            paddingBottom: \"2rem\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            style: {\n              width: \"100%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"imageFile\",\n              children: /*#__PURE__*/_jsxDEV(Dragger, {\n                name: \"image\",\n                listType: \"picture\",\n                fileList: fileList,\n                onChange: onChange,\n                onPreview: onPreview,\n                maxCount: 3,\n                beforeUpload: beforeUpload,\n                multiple: true,\n                children: [fileList.length < 3 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"ant-upload-drag-icon\",\n                    children: /*#__PURE__*/_jsxDEV(InboxOutlined, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 146,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"ant-upload-text\",\n                    children: \"Drag and Drop or Browse\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true), fileList.length >= 3 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"ant-upload-drag-icon\",\n                    children: /*#__PURE__*/_jsxDEV(CheckCircleTwoTone, {\n                      twoToneColor: \"#52c41a\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 154,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"ant-upload-text\",\n                    children: \"Max photos selected\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"ant-upload-hint\",\n                    children: \"Delete Photo(s) or Continue\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          justify: \"space-between\",\n          style: {\n            position: \"absolute\",\n            bottom: \"0\",\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              handleStepChange(1);\n            },\n            danger: true,\n            shape: \"circle\",\n            size: \"large\",\n            icon: /*#__PURE__*/_jsxDEV(ArrowLeftOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Modal, {\n              visible: modalStatus,\n              title: \"Continue?\",\n              onCancel: handleModalCancel,\n              footer: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleModalCancel,\n                children: \"Go back\"\n              }, \"back\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                onClick: sendFormTwoData,\n                children: \"Submit\"\n              }, \"submit\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this)],\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"modalContainer\",\n                style: {\n                  textAlign: \"center\",\n                  padding: \"1rem\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Text, {\n                  children: \"Less than three photos selected\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  children: \" Do you wish to continue?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleStepTwoData,\n            type: \"primary\" // htmlType=\"submit\"\n            ,\n            shape: \"circle\",\n            size: \"large\",\n            icon: /*#__PURE__*/_jsxDEV(ArrowRightOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\nexport default CreateSetupStepTwoForm; // import React, { Dispatch, SetStateAction, useState, useEffect } from \"react\";\n// import {\n//   Upload,\n//   Row,\n//   Col,\n//   Typography,\n//   Space,\n//   Button,\n//   message,\n//   Modal,\n// } from \"antd\";\n// import ImgCrop from \"antd-img-crop\";\n// import styles from \"./createRoomForms.module.scss\";\n// import {\n//   ArrowRightOutlined,\n//   ArrowLeftOutlined,\n//   InboxOutlined,\n//   CheckCircleTwoTone,\n// } from \"@ant-design/icons\";\n// const { Title, Text } = Typography;\n// const { Dragger } = Upload;\n// interface Props {\n//   setStepTwoForm: Dispatch<SetStateAction<object>>;\n//   handleStepChange(number: number): void;\n//   stepTwoForm: Array<object>;\n// }\n// const CreateSetupStepTwoForm: React.FC<Props> = ({\n//   setStepTwoForm,\n//   handleStepChange,\n//   stepTwoForm,\n// }) => {\n//   const [fileList, setFileList] = useState<Array<any>>([]);\n//   const [modalStatus, setModalStatus] = useState<boolean>(false);\n//   useEffect(() => {\n//     if (stepTwoForm) {\n//       setFileList([...stepTwoForm]);\n//     }\n//   }, []);\n//   const onChange = ({ fileList: newFileList }: any) => {\n//     setFileList(newFileList);\n//   };\n//   const onPreview = async (file: any) => {\n//     let src = file.url;\n//     if (!src) {\n//       src = await new Promise((resolve) => {\n//         const reader = new FileReader();\n//         reader.readAsDataURL(file.originFileObj);\n//         reader.onload = () => resolve(reader.result);\n//       });\n//     }\n//     const image = new Image();\n//     image.src = src;\n//     const imgWindow: any = window.open(src);\n//     console.log(imgWindow);\n//     imgWindow.document.write(image.outerHTML);\n//   };\n//   const beforeUpload = () => {\n//     if (fileList.length >= 3) {\n//       message.error(\"Delete image first before trying to add a new one\");\n//       return false;\n//     } else {\n//       return true;\n//     }\n//   };\n//   console.log(fileList);\n//   const sendFormTwoData = () => {\n//     setStepTwoForm([...fileList]);\n//     handleStepChange(3);\n//   };\n//   const handleModalCancel = () => {\n//     setModalStatus(false);\n//   };\n//   const handleStepTwoData = () => {\n//     if (fileList.length === 0) {\n//       message.error(\"Please upload a photo before continuing\");\n//     } else if (fileList.length < 3) {\n//       setModalStatus(true);\n//     } else {\n//       sendFormTwoData();\n//     }\n//   };\n//   return (\n//     <div id={styles.stepTwoFormContainer}>\n//       <Modal\n//         visible={modalStatus}\n//         title=\"Continue?\"\n//         onCancel={handleModalCancel}\n//         footer={[\n//           <Button key=\"back\" onClick={handleModalCancel}>\n//             Go back\n//           </Button>,\n//           <Button key=\"submit\" type=\"primary\" onClick={sendFormTwoData}>\n//             Submit\n//           </Button>,\n//         ]}\n//       >\n//         <div\n//           id=\"modalContainer\"\n//           style={{ textAlign: \"center\", padding: \"1rem\" }}\n//         >\n//           <Text>Less than three photos selected</Text>\n//           <br />\n//           <Text> Do you wish to continue?</Text>\n//         </div>\n//       </Modal>\n//       <Space size={30} direction=\"vertical\" style={{ width: \"100%\" }}>\n//         <Col sm={24}>\n//           <Title level={2} style={{ textAlign: \"center\", paddingTop: \"2rem\" }}>\n//             Upload Three Photos\n//           </Title>\n//         </Col>\n//         <Row justify=\"center\" style={{ paddingBottom: \"2rem\" }}>\n//           <Col style={{ width: \"100%\" }}>\n//             <Dragger\n//               listType=\"picture\"\n//               fileList={fileList}\n//               onChange={onChange}\n//               onPreview={onPreview}\n//               maxCount={3}\n//               beforeUpload={beforeUpload}\n//             >\n//               {fileList.length < 3 && (\n//                 <>\n//                   <p className=\"ant-upload-drag-icon\">\n//                     <InboxOutlined />\n//                   </p>\n//                   <p className=\"ant-upload-text\">Drag and Drop or Browse</p>\n//                 </>\n//               )}\n//               {fileList.length >= 3 && (\n//                 <>\n//                   <p className=\"ant-upload-drag-icon\">\n//                     <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\n//                   </p>\n//                   <p className=\"ant-upload-text\">Max photos selected</p>\n//                   <p className=\"ant-upload-hint\">Delete Photo(s) or Continue</p>\n//                 </>\n//               )}\n//             </Dragger>\n//           </Col>\n//         </Row>\n//         <Row\n//           justify=\"space-between\"\n//           style={{ position: \"absolute\", bottom: \"0\", width: \"100%\" }}\n//         >\n//           <Button\n//             onClick={() => {\n//               handleStepChange(1);\n//             }}\n//             danger\n//             htmlType=\"submit\"\n//             shape=\"circle\"\n//             size=\"large\"\n//             icon={<ArrowLeftOutlined />}\n//           />\n//           <Button\n//             onClick={handleStepTwoData}\n//             type=\"primary\"\n//             htmlType=\"submit\"\n//             shape=\"circle\"\n//             size=\"large\"\n//             icon={<ArrowRightOutlined />}\n//           />\n//         </Row>\n//       </Space>\n//     </div>\n//   );\n// };\n// export default CreateSetupStepTwoForm;","map":{"version":3,"sources":["/Users/joshmcdaniel/Documents/work/repos/setup_share/components/CreateSetupForms/CreateSetupStepTwoForm.tsx"],"names":["React","useState","useEffect","Upload","Row","Col","Typography","Space","Button","message","Modal","Form","axios","styles","ArrowRightOutlined","ArrowLeftOutlined","InboxOutlined","CheckCircleTwoTone","Title","Text","Dragger","CreateSetupStepTwoForm","setStepTwoForm","handleStepChange","stepTwoForm","fileList","setFileList","isLoading","setLoadingStatus","modalStatus","setModalStatus","onChange","newFileList","onPreview","file","src","url","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","result","image","Image","imgWindow","window","open","console","log","document","write","outerHTML","beforeUpload","length","error","sendFormTwoData","handleModalCancel","handleStepTwoData","upload","data","FormData","append","post","headers","success","uploadFile","values","awsData","imageFile","map","item","i","stepTwoFormContainer","width","textAlign","paddingTop","paddingBottom","position","bottom","padding"],"mappings":"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AAevC,sBAAfsourcesContent":["import React, { Dispatch, SetStateAction, useState, useEffect } from \"react\";\nimport {\n  Upload,\n  Row,\n  Col,\n  Typography,\n  Space,\n  Button,\n  message,\n  Modal,\n  Form,\n} from \"antd\";\nimport axios from \"axios\";\nimport ImgCrop from \"antd-img-crop\";\nimport styles from \"./createRoomForms.module.scss\";\nimport {\n  ArrowRightOutlined,\n  ArrowLeftOutlined,\n  InboxOutlined,\n  CheckCircleTwoTone,\n} from \"@ant-design/icons\";\n\nconst { Title, Text } = Typography;\nconst { Dragger } = Upload;\n\ninterface Props {\n  setStepTwoForm: Dispatch<SetStateAction<object>>;\n  handleStepChange(number: number): void;\n  stepTwoForm: Array<object>;\n}\n\nconst CreateSetupStepTwoForm: React.FC<Props> = ({\n  setStepTwoForm,\n  handleStepChange,\n  stepTwoForm,\n}) => {\n  const [fileList, setFileList] = useState<Array<any>>([]);\n  const [isLoading, setLoadingStatus] = useState(false);\n  const [modalStatus, setModalStatus] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (stepTwoForm) {\n      setFileList([...stepTwoForm]);\n    }\n  }, []);\n  const onChange = ({ fileList: newFileList }: any) => {\n    setFileList(newFileList);\n  };\n  const onPreview = async (file: any) => {\n    let src = file.url;\n    if (!src) {\n      src = await new Promise((resolve) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file.originFileObj);\n        reader.onload = () => resolve(reader.result);\n      });\n    }\n    const image = new Image();\n    image.src = src;\n    const imgWindow: any = window.open(src);\n    console.log(imgWindow);\n    imgWindow.document.write(image.outerHTML);\n  };\n  const beforeUpload = () => {\n    if (fileList.length >= 3) {\n      message.error(\"Delete image first before trying to add a new one\");\n      return false;\n    } else {\n      return true;\n    }\n  };\n  const sendFormTwoData = () => {\n    setStepTwoForm([...fileList]);\n    handleStepChange(3);\n  };\n  const handleModalCancel = () => {\n    setModalStatus(false);\n  };\n  const handleStepTwoData = () => {\n    if (fileList.length === 0) {\n      message.error(\"Please upload a photo before continuing\");\n    } else if (fileList.length < 3) {\n      setModalStatus(true);\n    } else {\n      sendFormTwoData();\n    }\n  };\n  const upload = async (file) => {\n    const data = new FormData();\n    data.append(\"image-file\", file);\n    try {\n      const result = await axios.post(\n        \"http://localhost:5000/image/upload\",\n        data,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      );\n      console.log(result);\n      message.success(\"sucess\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const uploadFile = async (values) => {\n    setLoadingStatus(true);\n    const awsData = await values.imageFile.fileList.map((item, i) => {\n      upload(item.originFileObj);\n    });\n    setLoadingStatus(false);\n    handleStepTwoData();\n    //likely wont need this list tracking, will look to have custom preview images and single uploads\n    // setFileList([...imageList, values.imageFile.file.originFileObj]);\n  };\n\n  return (\n    <div id={styles.stepTwoFormContainer}>\n      <Form name=\"file-upload-form\" onFinish={uploadFile}>\n        <Space size={30} direction=\"vertical\" style={{ width: \"100%\" }}>\n          <Col sm={24}>\n            <Title\n              level={2}\n              style={{ textAlign: \"center\", paddingTop: \"2rem\" }}\n            >\n              Upload Three Photos\n            </Title>\n          </Col>\n          <Row justify=\"center\" style={{ paddingBottom: \"2rem\" }}>\n            <Col style={{ width: \"100%\" }}>\n              <Form.Item name=\"imageFile\">\n                <Dragger\n                  name=\"image\"\n                  listType=\"picture\"\n                  fileList={fileList}\n                  onChange={onChange}\n                  onPreview={onPreview}\n                  maxCount={3}\n                  beforeUpload={beforeUpload}\n                  multiple={true}\n                >\n                  {fileList.length < 3 && (\n                    <>\n                      <p className=\"ant-upload-drag-icon\">\n                        <InboxOutlined />\n                      </p>\n                      <p className=\"ant-upload-text\">Drag and Drop or Browse</p>\n                    </>\n                  )}\n                  {fileList.length >= 3 && (\n                    <>\n                      <p className=\"ant-upload-drag-icon\">\n                        <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\n                      </p>\n                      <p className=\"ant-upload-text\">Max photos selected</p>\n                      <p className=\"ant-upload-hint\">\n                        Delete Photo(s) or Continue\n                      </p>\n                    </>\n                  )}\n                </Dragger>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row\n            justify=\"space-between\"\n            style={{ position: \"absolute\", bottom: \"0\", width: \"100%\" }}\n          >\n            <Button\n              onClick={() => {\n                handleStepChange(1);\n              }}\n              danger\n              shape=\"circle\"\n              size=\"large\"\n              icon={<ArrowLeftOutlined />}\n            />\n            <Form.Item>\n              <Modal\n                visible={modalStatus}\n                title=\"Continue?\"\n                onCancel={handleModalCancel}\n                footer={[\n                  <Button key=\"back\" onClick={handleModalCancel}>\n                    Go back\n                  </Button>,\n                  <Button key=\"submit\" type=\"primary\" onClick={sendFormTwoData}>\n                    Submit\n                  </Button>,\n                ]}\n              >\n                <div\n                  id=\"modalContainer\"\n                  style={{ textAlign: \"center\", padding: \"1rem\" }}\n                >\n                  <Text>Less than three photos selected</Text>\n                  <br />\n                  <Text> Do you wish to continue?</Text>\n                </div>\n              </Modal>\n            </Form.Item>\n            <Button\n              onClick={handleStepTwoData}\n              type=\"primary\"\n              // htmlType=\"submit\"\n              shape=\"circle\"\n              size=\"large\"\n              icon={<ArrowRightOutlined />}\n            />\n          </Row>\n        </Space>\n      </Form>\n    </div>\n  );\n};\n\nexport default CreateSetupStepTwoForm;\n\n// import React, { Dispatch, SetStateAction, useState, useEffect } from \"react\";\n// import {\n//   Upload,\n//   Row,\n//   Col,\n//   Typography,\n//   Space,\n//   Button,\n//   message,\n//   Modal,\n// } from \"antd\";\n// import ImgCrop from \"antd-img-crop\";\n// import styles from \"./createRoomForms.module.scss\";\n// import {\n//   ArrowRightOutlined,\n//   ArrowLeftOutlined,\n//   InboxOutlined,\n//   CheckCircleTwoTone,\n// } from \"@ant-design/icons\";\n\n// const { Title, Text } = Typography;\n// const { Dragger } = Upload;\n\n// interface Props {\n//   setStepTwoForm: Dispatch<SetStateAction<object>>;\n//   handleStepChange(number: number): void;\n//   stepTwoForm: Array<object>;\n// }\n\n// const CreateSetupStepTwoForm: React.FC<Props> = ({\n//   setStepTwoForm,\n//   handleStepChange,\n//   stepTwoForm,\n// }) => {\n//   const [fileList, setFileList] = useState<Array<any>>([]);\n//   const [modalStatus, setModalStatus] = useState<boolean>(false);\n\n//   useEffect(() => {\n//     if (stepTwoForm) {\n//       setFileList([...stepTwoForm]);\n//     }\n//   }, []);\n\n//   const onChange = ({ fileList: newFileList }: any) => {\n//     setFileList(newFileList);\n//   };\n\n//   const onPreview = async (file: any) => {\n//     let src = file.url;\n//     if (!src) {\n//       src = await new Promise((resolve) => {\n//         const reader = new FileReader();\n//         reader.readAsDataURL(file.originFileObj);\n//         reader.onload = () => resolve(reader.result);\n//       });\n//     }\n//     const image = new Image();\n//     image.src = src;\n//     const imgWindow: any = window.open(src);\n//     console.log(imgWindow);\n//     imgWindow.document.write(image.outerHTML);\n//   };\n//   const beforeUpload = () => {\n//     if (fileList.length >= 3) {\n//       message.error(\"Delete image first before trying to add a new one\");\n//       return false;\n//     } else {\n//       return true;\n//     }\n//   };\n//   console.log(fileList);\n\n//   const sendFormTwoData = () => {\n//     setStepTwoForm([...fileList]);\n//     handleStepChange(3);\n//   };\n//   const handleModalCancel = () => {\n//     setModalStatus(false);\n//   };\n//   const handleStepTwoData = () => {\n//     if (fileList.length === 0) {\n//       message.error(\"Please upload a photo before continuing\");\n//     } else if (fileList.length < 3) {\n//       setModalStatus(true);\n//     } else {\n//       sendFormTwoData();\n//     }\n//   };\n//   return (\n//     <div id={styles.stepTwoFormContainer}>\n//       <Modal\n//         visible={modalStatus}\n//         title=\"Continue?\"\n//         onCancel={handleModalCancel}\n//         footer={[\n//           <Button key=\"back\" onClick={handleModalCancel}>\n//             Go back\n//           </Button>,\n//           <Button key=\"submit\" type=\"primary\" onClick={sendFormTwoData}>\n//             Submit\n//           </Button>,\n//         ]}\n//       >\n//         <div\n//           id=\"modalContainer\"\n//           style={{ textAlign: \"center\", padding: \"1rem\" }}\n//         >\n//           <Text>Less than three photos selected</Text>\n//           <br />\n//           <Text> Do you wish to continue?</Text>\n//         </div>\n//       </Modal>\n//       <Space size={30} direction=\"vertical\" style={{ width: \"100%\" }}>\n//         <Col sm={24}>\n//           <Title level={2} style={{ textAlign: \"center\", paddingTop: \"2rem\" }}>\n//             Upload Three Photos\n//           </Title>\n//         </Col>\n//         <Row justify=\"center\" style={{ paddingBottom: \"2rem\" }}>\n//           <Col style={{ width: \"100%\" }}>\n//             <Dragger\n//               listType=\"picture\"\n//               fileList={fileList}\n//               onChange={onChange}\n//               onPreview={onPreview}\n//               maxCount={3}\n//               beforeUpload={beforeUpload}\n//             >\n//               {fileList.length < 3 && (\n//                 <>\n//                   <p className=\"ant-upload-drag-icon\">\n//                     <InboxOutlined />\n//                   </p>\n//                   <p className=\"ant-upload-text\">Drag and Drop or Browse</p>\n//                 </>\n//               )}\n//               {fileList.length >= 3 && (\n//                 <>\n//                   <p className=\"ant-upload-drag-icon\">\n//                     <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\n//                   </p>\n//                   <p className=\"ant-upload-text\">Max photos selected</p>\n//                   <p className=\"ant-upload-hint\">Delete Photo(s) or Continue</p>\n//                 </>\n//               )}\n//             </Dragger>\n//           </Col>\n//         </Row>\n//         <Row\n//           justify=\"space-between\"\n//           style={{ position: \"absolute\", bottom: \"0\", width: \"100%\" }}\n//         >\n//           <Button\n//             onClick={() => {\n//               handleStepChange(1);\n//             }}\n//             danger\n//             htmlType=\"submit\"\n//             shape=\"circle\"\n//             size=\"large\"\n//             icon={<ArrowLeftOutlined />}\n//           />\n\n//           <Button\n//             onClick={handleStepTwoData}\n//             type=\"primary\"\n//             htmlType=\"submit\"\n//             shape=\"circle\"\n//             size=\"large\"\n//             icon={<ArrowRightOutlined />}\n//           />\n//         </Row>\n//       </Space>\n//     </div>\n//   );\n// };\n\n// export default CreateSetupStepTwoForm;\n"]},"metadata":{},"sourceType":"module"}