{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/joshmcdaniel/Documents/work/repos/setup_share/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/joshmcdaniel/Documents/work/repos/setup_share/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/login.tsx\",\n    _s = $RefreshSig$();\n\nimport { Row, Col, Form, Input, Button, Checkbox } from \"antd\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nexport default function LoginPage() {\n  _s();\n\n  var router = useRouter();\n\n  var userLogin = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var email, password, getUser, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              email = values.email, password = values.password;\n              _context.prev = 1;\n              _context.next = 4;\n              return axios.post(\"http://localhost:5000/user/login\", {\n                email: email,\n                password: password\n              }, {\n                withCredentials: true\n              });\n\n            case 4:\n              getUser = _context.sent;\n              _context.next = 7;\n              return getUser;\n\n            case 7:\n              response = _context.sent;\n              router.push(\"/\");\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 11]]);\n    }));\n\n    return function userLogin(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var test = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var getTest, data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return axios.get(\"http://localhost:5000/user/test\", {\n                withCredentials: true\n              });\n\n            case 2:\n              getTest = _context2.sent;\n              data = getTest;\n              console.log(data);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function test() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      justify: \"center\",\n      align: \"middle\",\n      style: {\n        minHeight: \"100vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: {\n          span: 20\n        },\n        sm: {\n          span: 12\n        },\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          name: \"login\",\n          initialValues: {\n            remember: true\n          },\n          onFinish: userLogin // onFinishFailed={onFinishFailed}\n          ,\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Email\",\n            name: \"email\",\n            rules: [{\n              required: true,\n              message: \"Please input your email address\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Password\",\n            name: \"password\",\n            rules: [{\n              required: true,\n              message: \"Please input your password\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"remember\",\n            valuePropName: \"checked\",\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              children: \"Remember me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: test,\n        children: \"test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginPage, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/login.tsx"],"names":["Row","Col","Form","Input","Button","Checkbox","axios","useRouter","LoginPage","router","userLogin","values","email","password","post","withCredentials","getUser","response","push","console","log","test","get","getTest","data","minHeight","span","remember","required","message"],"mappings":"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","sourcesContent":["import { Row, Col, Form, Input, Button, Checkbox } from \"antd\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\n\ninterface User {\n  email: string;\n  password: string;\n}\n\nexport default function LoginPage() {\n  const router = useRouter();\n  const userLogin = async (values: User) => {\n    const { email, password } = values;\n    try {\n      const getUser = await axios.post(\n        \"http://localhost:5000/user/login\",\n        {\n          email,\n          password,\n        },\n        {\n          withCredentials: true,\n        }\n      );\n      const response = await getUser;\n      router.push(\"/\");\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  const test = async () => {\n    const getTest = await axios.get(\"http://localhost:5000/user/test\", {\n      withCredentials: true,\n    });\n    const data = getTest;\n    console.log(data);\n  };\n  return (\n    <div id=\"container\">\n      <Row justify=\"center\" align=\"middle\" style={{ minHeight: \"100vh\" }}>\n        <Col xs={{ span: 20 }} sm={{ span: 12 }}>\n          <Form\n            name=\"login\"\n            initialValues={{ remember: true }}\n            onFinish={userLogin}\n            // onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              label=\"Email\"\n              name=\"email\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your email address\",\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Password\"\n              name=\"password\"\n              rules={[\n                { required: true, message: \"Please input your password\" },\n              ]}\n            >\n              <Input.Password />\n            </Form.Item>\n\n            <Form.Item name=\"remember\" valuePropName=\"checked\">\n              <Checkbox>Remember me</Checkbox>\n            </Form.Item>\n\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n        </Col>\n        <Button onClick={test}>test</Button>\n      </Row>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}