{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/index.tsx\";\nimport Head from \"next/head\";\nimport React, { useState, useRef } from \"react\";\nimport { Button, Upload, message, Form } from \"antd\";\nimport { InboxOutlined } from \"@ant-design/icons\";\nimport axios from \"axios\";\nimport ImageMapper from \"react-img-mapper\";\nexport default function Home() {\n  const {\n    0: imageList,\n    1: setFileList\n  } = useState([]);\n  const {\n    0: isLoading,\n    1: setLoadingStatus\n  } = useState(false);\n  const myRef = useRef(null);\n  const URL = \"https://raw.githubusercontent.com/img-mapper/react-docs/master/src/assets/example.jpg\";\n  const MAP = {\n    name: \"my-map\",\n    // GET JSON FROM BELOW URL AS AN EXAMPLE\n    areas: [{\n      id: \"469f9800-c45a-483f-b13e-bd24f3fb79f4\",\n      title: \"Hardwood\",\n      shape: \"poly\",\n      name: \"1\",\n      fillColor: \"#eab54d4d\",\n      strokeColor: \"black\",\n      coords: [520.0646766169153, 393.0348258706467, 85.23880597014923, 378.6069651741293, 637, 479, 13.099502487562177, 478.10945273631836, 11.606965174129343, 438.3084577114427],\n      polygon: [[520.0646766169153, 393.0348258706467], [85.23880597014923, 378.6069651741293], [637, 479], [13.099502487562177, 478.10945273631836], [11.606965174129343, 438.3084577114427]]\n    }]\n  };\n  const {\n    Dragger\n  } = Upload; // const uploadFile = async (values) => {\n  //   setLoadingStatus(true);\n  //   const data = new FormData();\n  //   console.log(values);\n  //   data.append(\"image-file\", values.imageFile.file.originFileObj);\n  //   try {\n  //     // const result = await axios.post(\"http://localhost:5000/images\", data, {\n  //     const result = await axios.post(\n  //       \"http://localhost:5000/image/upload\",\n  //       data,\n  //       {\n  //         headers: {\n  //           \"Content-Type\": \"multipart/form-data\",\n  //         },\n  //       }\n  //     );\n  //     console.log(result);\n  //     message.success(\"sucess\");\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  //   setLoadingStatus(false);\n  //   //likely wont need this list tracking, will look to have custom preview images and single uploads\n  //   // setFileList([...imageList, values.imageFile.file.originFileObj]);\n  // };\n\n  const upload = async file => {\n    const data = new FormData();\n    data.append(\"image-file\", file);\n    console.log(data);\n\n    try {\n      // const result = await axios.post(\"http://localhost:5000/images\", data, {\n      const result = await axios.post(\"http://localhost:5000/image/upload\", data, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      message.success(\"sucess\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const uploadFile = async values => {\n    setLoadingStatus(true);\n    upload(values.imageFile.fileList[0].originFileObj);\n    upload(values.imageFile.fileList[1].originFileObj);\n    upload(values.imageFile.fileList[2].originFileObj);\n    setLoadingStatus(false); //likely wont need this list tracking, will look to have custom preview images and single uploads\n    // setFileList([...imageList, values.imageFile.file.originFileObj]);\n  };\n\n  const dummyRequest = file => {\n    console.log(file);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Create Next App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n        src: \"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n        type: \"text/javascript\",\n        src: \"https://cdnjs.cloudflare.com/ajax/libs/maphilight/1.4.0/jquery.maphilight.min.js\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        name: \"file-upload-form\",\n        onFinish: uploadFile,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"imageFile\",\n          children: /*#__PURE__*/_jsxDEV(Dragger, {\n            name: \"image\",\n            multiple: true // maxCount={1}\n            ,\n            customRequest: dummyRequest,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"ant-upload-drag-icon\",\n              children: /*#__PURE__*/_jsxDEV(InboxOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"ant-upload-text\",\n              children: \"Click or drag file to this area to upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"ant-upload-hint\",\n              children: \"Support for a single or bulk upload. Strictly prohibit from uploading company data or other band files\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            loading: isLoading,\n            children: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageMapper, {\n        containerRef: myRef,\n        src: URL,\n        map: MAP,\n        stayMultiHighlighted: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/index.tsx"],"names":["Head","React","useState","useRef","Button","Upload","message","Form","InboxOutlined","axios","ImageMapper","Home","imageList","setFileList","isLoading","setLoadingStatus","myRef","URL","MAP","name","areas","id","title","shape","fillColor","strokeColor","coords","polygon","Dragger","upload","file","data","FormData","append","console","log","result","post","headers","success","error","uploadFile","values","imageFile","fileList","originFileObj","dummyRequest"],"mappings":"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","sourcesContent":["import Head from \"next/head\";\nimport React, { useState, useRef } from \"react\";\nimport { Button, Upload, message, Form } from \"antd\";\nimport { ControlFilled, InboxOutlined } from \"@ant-design/icons\";\nimport axios from \"axios\";\nimport CanvasImg from \"../components/CanvasImg\";\nimport ImageMapper from \"react-img-mapper\";\n\nexport default function Home() {\n  const [imageList, setFileList] = useState([]);\n  const [isLoading, setLoadingStatus] = useState(false);\n\n  const myRef = useRef(null);\n\n  const URL =\n    \"https://raw.githubusercontent.com/img-mapper/react-docs/master/src/assets/example.jpg\";\n  const MAP = {\n    name: \"my-map\",\n    // GET JSON FROM BELOW URL AS AN EXAMPLE\n    areas: [\n      {\n        id: \"469f9800-c45a-483f-b13e-bd24f3fb79f4\",\n        title: \"Hardwood\",\n        shape: \"poly\",\n        name: \"1\",\n        fillColor: \"#eab54d4d\",\n        strokeColor: \"black\",\n        coords: [\n          520.0646766169153, 393.0348258706467, 85.23880597014923,\n          378.6069651741293, 637, 479, 13.099502487562177, 478.10945273631836,\n          11.606965174129343, 438.3084577114427,\n        ],\n        polygon: [\n          [520.0646766169153, 393.0348258706467],\n          [85.23880597014923, 378.6069651741293],\n          [637, 479],\n          [13.099502487562177, 478.10945273631836],\n          [11.606965174129343, 438.3084577114427],\n        ],\n      },\n    ],\n  };\n\n  const { Dragger } = Upload;\n\n  // const uploadFile = async (values) => {\n  //   setLoadingStatus(true);\n  //   const data = new FormData();\n  //   console.log(values);\n  //   data.append(\"image-file\", values.imageFile.file.originFileObj);\n  //   try {\n  //     // const result = await axios.post(\"http://localhost:5000/images\", data, {\n  //     const result = await axios.post(\n  //       \"http://localhost:5000/image/upload\",\n  //       data,\n  //       {\n  //         headers: {\n  //           \"Content-Type\": \"multipart/form-data\",\n  //         },\n  //       }\n  //     );\n  //     console.log(result);\n  //     message.success(\"sucess\");\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  //   setLoadingStatus(false);\n  //   //likely wont need this list tracking, will look to have custom preview images and single uploads\n  //   // setFileList([...imageList, values.imageFile.file.originFileObj]);\n  // };\n  const upload = async (file) => {\n    const data = new FormData();\n    data.append(\"image-file\", file);\n    console.log(data);\n    try {\n      // const result = await axios.post(\"http://localhost:5000/images\", data, {\n      const result = await axios.post(\n        \"http://localhost:5000/image/upload\",\n        data,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      );\n      message.success(\"sucess\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const uploadFile = async (values) => {\n    setLoadingStatus(true);\n    upload(values.imageFile.fileList[0].originFileObj);\n    upload(values.imageFile.fileList[1].originFileObj);\n    upload(values.imageFile.fileList[2].originFileObj);\n    setLoadingStatus(false);\n    //likely wont need this list tracking, will look to have custom preview images and single uploads\n    // setFileList([...imageList, values.imageFile.file.originFileObj]);\n  };\n  const dummyRequest = (file) => {\n    console.log(file);\n  };\n\n  return (\n    <div>\n      <Head>\n        <title>Create Next App</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n        <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\n        <script\n          type=\"text/javascript\"\n          src=\"https://cdnjs.cloudflare.com/ajax/libs/maphilight/1.4.0/jquery.maphilight.min.js\"\n        ></script>\n      </Head>\n      <main>\n        <Form name=\"file-upload-form\" onFinish={uploadFile}>\n          <Form.Item name=\"imageFile\">\n            <Dragger\n              name=\"image\"\n              multiple={true}\n              // maxCount={1}\n              customRequest={dummyRequest}\n            >\n              <p className=\"ant-upload-drag-icon\">\n                <InboxOutlined />\n              </p>\n              <p className=\"ant-upload-text\">\n                Click or drag file to this area to upload\n              </p>\n              <p className=\"ant-upload-hint\">\n                Support for a single or bulk upload. Strictly prohibit from\n                uploading company data or other band files\n              </p>\n            </Dragger>\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\n              submit\n            </Button>\n          </Form.Item>\n        </Form>\n        {/* <Map /> */}\n\n        {/* <img src=\"https://share-set-up-uploads.s3.us-east-2.amazonaws.com/front+view\" /> */}\n        <ImageMapper\n          containerRef={myRef}\n          src={URL}\n          map={MAP}\n          stayMultiHighlighted\n        />\n      </main>\n\n      <footer></footer>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}