{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/test.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Upload, Button, message } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\n\nclass Demo extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      fileList: [],\n      uploading: false\n    });\n\n    _defineProperty(this, \"handleUpload\", () => {\n      const {\n        fileList\n      } = this.state;\n      const formData = new FormData();\n      fileList.forEach(file => {\n        formData.append(\"files[]\", file);\n      });\n      this.setState({\n        uploading: true\n      });\n      console.log(formData); // You can use any AJAX library you like\n      // reqwest({\n      //   url: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n      //   method: \"post\",\n      //   processData: false,\n      //   data: formData,\n      //   success: () => {\n      //     this.setState({\n      //       fileList: [],\n      //       uploading: false,\n      //     });\n      //     message.success(\"upload successfully.\");\n      //   },\n      //   error: () => {\n      //     this.setState({\n      //       uploading: false,\n      //     });\n      //     message.error(\"upload failed.\");\n      //   },\n      // });\n    });\n  }\n\n  render() {\n    console.log(this.state.fileList);\n    const {\n      uploading,\n      fileList\n    } = this.state;\n    const props = {\n      onRemove: file => {\n        this.setState(state => {\n          const index = state.fileList.indexOf(file);\n          const newFileList = state.fileList.slice();\n          newFileList.splice(index, 1);\n          return {\n            fileList: newFileList\n          };\n        });\n      },\n      beforeUpload: file => {\n        this.setState(state => ({\n          fileList: [...state.fileList, file]\n        }));\n        return false;\n      },\n      fileList\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Upload, _objectSpread(_objectSpread({}, props), {}, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this),\n          children: \"Select File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: this.handleUpload,\n        disabled: fileList.length === 0,\n        loading: uploading,\n        style: {\n          marginTop: 16\n        },\n        children: uploading ? \"Uploading\" : \"Start Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Demo;","map":{"version":3,"sources":["/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/test.js"],"names":["React","Upload","Button","message","UploadOutlined","Demo","Component","fileList","uploading","state","formData","FormData","forEach","file","append","setState","console","log","render","props","onRemove","index","indexOf","newFileList","slice","splice","beforeUpload","handleUpload","length","marginTop"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,OAAzB,QAAwC,MAAxC;AACA,SAASC,cAAT,QAA+B,mBAA/B;;AAEA,MAAMC,IAAN,SAAmBL,KAAK,CAACM,SAAzB,CAAmC;AAAA;AAAA;;AAAA,mCACzB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,SAAS,EAAE;AAFL,KADyB;;AAAA,0CAKlB,MAAM;AACnB,YAAM;AAAED,QAAAA;AAAF,UAAe,KAAKE,KAA1B;AACA,YAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAJ,MAAAA,QAAQ,CAACK,OAAT,CAAkBC,IAAD,IAAU;AACzBH,QAAAA,QAAQ,CAACI,MAAT,CAAgB,SAAhB,EAA2BD,IAA3B;AACD,OAFD;AAIA,WAAKE,QAAL,CAAc;AACZP,QAAAA,SAAS,EAAE;AADC,OAAd;AAGAQ,MAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ,EAVmB,CAWnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KApCgC;AAAA;;AAsCjCQ,EAAAA,MAAM,GAAG;AACPF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWF,QAAvB;AAEA,UAAM;AAAEC,MAAAA,SAAF;AAAaD,MAAAA;AAAb,QAA0B,KAAKE,KAArC;AACA,UAAMU,KAAK,GAAG;AACZC,MAAAA,QAAQ,EAAGP,IAAD,IAAU;AAClB,aAAKE,QAAL,CAAeN,KAAD,IAAW;AACvB,gBAAMY,KAAK,GAAGZ,KAAK,CAACF,QAAN,CAAee,OAAf,CAAuBT,IAAvB,CAAd;AACA,gBAAMU,WAAW,GAAGd,KAAK,CAACF,QAAN,CAAeiB,KAAf,EAApB;AACAD,UAAAA,WAAW,CAACE,MAAZ,CAAmBJ,KAAnB,EAA0B,CAA1B;AACA,iBAAO;AACLd,YAAAA,QAAQ,EAAEgB;AADL,WAAP;AAGD,SAPD;AAQD,OAVW;AAWZG,MAAAA,YAAY,EAAGb,IAAD,IAAU;AACtB,aAAKE,QAAL,CAAeN,KAAD,KAAY;AACxBF,UAAAA,QAAQ,EAAE,CAAC,GAAGE,KAAK,CAACF,QAAV,EAAoBM,IAApB;AADc,SAAZ,CAAd;AAGA,eAAO,KAAP;AACD,OAhBW;AAiBZN,MAAAA;AAjBY,KAAd;AAoBA,wBACE;AAAA,8BACE,QAAC,MAAD,kCAAYY,KAAZ;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,IAAI,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,MAAD;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,OAAO,EAAE,KAAKQ,YAFhB;AAGE,QAAA,QAAQ,EAAEpB,QAAQ,CAACqB,MAAT,KAAoB,CAHhC;AAIE,QAAA,OAAO,EAAEpB,SAJX;AAKE,QAAA,KAAK,EAAE;AAAEqB,UAAAA,SAAS,EAAE;AAAb,SALT;AAAA,kBAOGrB,SAAS,GAAG,WAAH,GAAiB;AAP7B;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,oBADF;AAgBD;;AA9EgC;;AAiFnC,eAAeH,IAAf","sourcesContent":["import React from \"react\";\nimport { Upload, Button, message } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\n\nclass Demo extends React.Component {\n  state = {\n    fileList: [],\n    uploading: false,\n  };\n  handleUpload = () => {\n    const { fileList } = this.state;\n    const formData = new FormData();\n    fileList.forEach((file) => {\n      formData.append(\"files[]\", file);\n    });\n\n    this.setState({\n      uploading: true,\n    });\n    console.log(formData);\n    // You can use any AJAX library you like\n    // reqwest({\n    //   url: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n    //   method: \"post\",\n    //   processData: false,\n    //   data: formData,\n    //   success: () => {\n    //     this.setState({\n    //       fileList: [],\n    //       uploading: false,\n    //     });\n    //     message.success(\"upload successfully.\");\n    //   },\n    //   error: () => {\n    //     this.setState({\n    //       uploading: false,\n    //     });\n    //     message.error(\"upload failed.\");\n    //   },\n    // });\n  };\n\n  render() {\n    console.log(this.state.fileList);\n\n    const { uploading, fileList } = this.state;\n    const props = {\n      onRemove: (file) => {\n        this.setState((state) => {\n          const index = state.fileList.indexOf(file);\n          const newFileList = state.fileList.slice();\n          newFileList.splice(index, 1);\n          return {\n            fileList: newFileList,\n          };\n        });\n      },\n      beforeUpload: (file) => {\n        this.setState((state) => ({\n          fileList: [...state.fileList, file],\n        }));\n        return false;\n      },\n      fileList,\n    };\n\n    return (\n      <>\n        <Upload {...props}>\n          <Button icon={<UploadOutlined />}>Select File</Button>\n        </Upload>\n        <Button\n          type=\"primary\"\n          onClick={this.handleUpload}\n          disabled={fileList.length === 0}\n          loading={uploading}\n          style={{ marginTop: 16 }}\n        >\n          {uploading ? \"Uploading\" : \"Start Upload\"}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport default Demo;\n"]},"metadata":{},"sourceType":"module"}