{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/setup/[id].tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport axios from \"axios\";\nimport { Row, Col, PageHeader, Typography } from \"antd\";\nimport ImageMapper from \"react-image-mapper\";\nimport { Carousel, Tabs, Divider } from \"antd\";\nimport { HeartTwoTone, EyeOutlined } from \"@ant-design/icons\";\nimport styles from \"./setupPage.module.scss\";\nimport ImageOneMapContainer from \"../../components/imageMapContainers/ImageOneMapContainer\";\nimport ImageTwoMapContainer from \"../../components/imageMapContainers/ImageTwoMapContainer\";\nimport ImageThreeMapContainer from \"../../components/imageMapContainers/ImageThreeMapContainer\";\nconst {\n  Link,\n  Title\n} = Typography;\nconst {\n  TabPane\n} = Tabs;\nexport default function SetupPage(props) {\n  const {\n    0: currentImageView,\n    1: setImageView\n  } = useState(\"Main\");\n  const {\n    0: currentImageObject,\n    1: setImageObject\n  } = useState({});\n  const {\n    0: currentImageItems,\n    1: setImageItems\n  } = useState([]);\n  const {\n    0: isActive,\n    1: setActiveStatus\n  } = useState(false);\n  const {\n    0: imageAreas,\n    1: setImageAreas\n  } = useState([]);\n  const {\n    getSetUpInfo,\n    getImageItems\n  } = props;\n  const {\n    0: fillColor,\n    1: setFillColor\n  } = useState(\"\");\n  useEffect(() => {\n    console.log(props);\n\n    if (getSetUpInfo.length > 1) {\n      carouselRef.current.goTo(1, true);\n    }\n  }, []);\n  useEffect(() => {\n    setDataPageInfo();\n    resetCurrentImageAreas();\n  }, [currentImageView]);\n  useEffect(() => {\n    setDataPageInfo();\n    createCurrentImageAreasList();\n  }, [currentImageObject]);\n\n  const setDataPageInfo = async () => {\n    const filteredImageObject = getSetUpInfo.filter((imageObject, i) => {\n      return imageObject.image_position === currentImageView;\n    });\n    setImageObject(filteredImageObject[0]); //shouldn't need this logic but items dont show without it\n\n    const currentItems = await getImageItems.filter((item, i) => {\n      return item.image_id === filteredImageObject[0].image_id;\n    });\n    setImageItems(currentItems);\n  };\n\n  const createCurrentImageAreasList = async () => {\n    const createMapAreas = await getImageItems.map((item, i) => {\n      let currentList = imageAreas;\n\n      if (item.image_id === currentImageObject.image_id) {\n        const addToAreaList = currentList.push(createArea(item));\n        console.log(\"test\", imageAreas);\n      }\n\n      setImageAreas(currentList);\n    });\n  };\n\n  const createArea = item => {\n    return {\n      id: item.item_id,\n      name: item.item_name,\n      shape: \"poly\",\n      coords: [...item.coords_list],\n      href: item.item_url,\n      preFillColor: \"transparent\"\n    };\n  };\n\n  const resetCurrentImageAreas = () => {\n    MAP.areas = [];\n    setImageAreas([]);\n  };\n\n  let MAP = {\n    name: uuidv4(),\n    areas: [...imageAreas]\n  };\n  let MAP2 = {\n    name: uuidv4(),\n    areas: [...imageAreas]\n  };\n\n  function onChange(a) {\n    setImageView(getSetUpInfo[a].image_position);\n  }\n\n  function callback(key) {\n    console.log(key);\n  }\n\n  const carouselRef = /*#__PURE__*/React.createRef();\n  console.log(currentImageObject);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: `${getSetUpInfo[0].username}'s ${getSetUpInfo[0].setup_title} setup`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: styles.setupPageContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          justify: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            span: 24,\n            children: /*#__PURE__*/_jsxDEV(Title, {\n              level: 1,\n              style: {\n                textAlign: \"center\"\n              },\n              children: getSetUpInfo[0].setup_title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          justify: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            span: 22,\n            children: /*#__PURE__*/_jsxDEV(PageHeader, {\n              title: `${getSetUpInfo[0].username}`,\n              extra: /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n                twoToneColor: \"#eb2f96\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 24\n              }, this),\n              avatar: {\n                src: \"https://avatars1.githubusercontent.com/u/8186664?s=460&v=4\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImageOneMapContainer, {\n          name: getSetUpInfo[0].image_id,\n          area: [{\n            name: \"1\",\n            shape: \"poly\",\n            coords: [25, 33, 27, 300, 128, 240, 128, 94],\n            preFillColor: \"green\",\n            fillColor: \"#0000ff\"\n          }, {\n            name: \"2\",\n            shape: \"poly\",\n            coords: [219, 118, 220, 210, 283, 210, 284, 119],\n            preFillColor: \"pink\",\n            lineWidth: 10,\n            strokeColor: \"#0000ff\"\n          }, {\n            name: \"3\",\n            shape: \"poly\",\n            coords: [381, 241, 383, 94, 462, 53, 457, 282],\n            preFillColor: \"yellow\",\n            // this is mandatory for stroke color to work\n            lineWidth: 10,\n            strokeColor: \"#6afd09\"\n          }, {\n            name: \"4\",\n            shape: \"poly\",\n            coords: [245, 285, 290, 285, 274, 239, 249, 238],\n            preFillColor: \"red\"\n          }, {\n            name: \"5\",\n            shape: \"circle\",\n            coords: [170, 100, 25],\n            preFillColor: \"rgb(255,255,255,0.3)\",\n            lineWidth: 2\n          }, {\n            name: \"6\",\n            shape: \"rect\",\n            coords: [270, 100, 200, 50],\n            lineWidth: 2,\n            preFillColor: \"rgba(255, 255, 255, 0.3)\",\n            strokeColor: \"#6afd09\"\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImageTwoMapContainer, {\n          name: getSetUpInfo[1].image_id,\n          area: [{\n            name: \"1\",\n            shape: \"poly\",\n            coords: [25, 33, 27, 300, 128, 240, 128, 94],\n            preFillColor: \"green\",\n            fillColor: \"#0000ff\"\n          }, {\n            name: \"2\",\n            shape: \"poly\",\n            coords: [219, 118, 220, 210, 283, 210, 284, 119],\n            preFillColor: \"pink\",\n            lineWidth: 10,\n            strokeColor: \"#0000ff\"\n          }, {\n            name: \"3\",\n            shape: \"poly\",\n            coords: [381, 241, 383, 94, 462, 53, 457, 282],\n            preFillColor: \"yellow\",\n            // this is mandatory for stroke color to work\n            lineWidth: 10,\n            strokeColor: \"#6afd09\"\n          }, {\n            name: \"4\",\n            shape: \"poly\",\n            coords: [245, 285, 290, 285, 274, 239, 249, 238],\n            preFillColor: \"red\"\n          }, {\n            name: \"5\",\n            shape: \"circle\",\n            coords: [170, 100, 25],\n            preFillColor: \"rgb(255,255,255,0.3)\",\n            lineWidth: 2\n          }, {\n            name: \"6\",\n            shape: \"rect\",\n            coords: [270, 100, 200, 50],\n            lineWidth: 2,\n            preFillColor: \"rgba(255, 255, 255, 0.3)\",\n            strokeColor: \"#6afd09\"\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImageThreeMapContainer, {\n          name: uuidv4(),\n          area: [{\n            name: \"1\",\n            shape: \"poly\",\n            coords: [25, 33, 27, 300, 128, 240, 128, 94],\n            preFillColor: \"green\",\n            fillColor: \"#0000ff\"\n          }, {\n            name: \"2\",\n            shape: \"poly\",\n            coords: [219, 118, 220, 210, 283, 210, 284, 119],\n            preFillColor: \"pink\",\n            lineWidth: 10,\n            strokeColor: \"#0000ff\"\n          }, {\n            name: \"3\",\n            shape: \"poly\",\n            coords: [381, 241, 383, 94, 462, 53, 457, 282],\n            preFillColor: \"yellow\",\n            // this is mandatory for stroke color to work\n            lineWidth: 10,\n            strokeColor: \"#6afd09\"\n          }, {\n            name: \"4\",\n            shape: \"poly\",\n            coords: [245, 285, 290, 285, 274, 239, 249, 238],\n            preFillColor: \"red\"\n          }, {\n            name: \"5\",\n            shape: \"circle\",\n            coords: [170, 100, 25],\n            preFillColor: \"rgb(255,255,255,0.3)\",\n            lineWidth: 2\n          }, {\n            name: \"6\",\n            shape: \"rect\",\n            coords: [270, 100, 200, 50],\n            lineWidth: 2,\n            preFillColor: \"rgba(255, 255, 255, 0.3)\",\n            strokeColor: \"#6afd09\"\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Carousel, {\n            afterChange: onChange,\n            ref: carouselRef,\n            children: [/*#__PURE__*/_jsxDEV(ImageMapper, {\n              src: `${getSetUpInfo[0].image_url}`,\n              map: MAP,\n              width: 375,\n              height: 350,\n              fillColor: \"red\",\n              onMouseEnter: area => {\n                console.log(area);\n              },\n              onImageClick: e => {\n                console.log(\"test\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ImageMapper, {\n              src: `${getSetUpInfo[0].image_url}`,\n              map: MAP2,\n              width: 375,\n              height: 350,\n              fillColor: \"red\",\n              onMouseEnter: area => {\n                console.log(area);\n              },\n              onImageClick: e => {\n                console.log(\"test\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          justify: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            span: 24,\n            children: /*#__PURE__*/_jsxDEV(Carousel, {\n              afterChange: onChange,\n              ref: carouselRef,\n              children: getSetUpInfo.sort((a, b) => a.image_position_number > b.image_position_number ? 1 : -1).map((item, i) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(ImageMapper, {\n                    src: item.image_url,\n                    map: MAP,\n                    fillColor: \"red\",\n                    width: 375,\n                    height: 350,\n                    onMouseEnter: area => {\n                      console.log(area);\n                    },\n                    onImageClick: e => {\n                      console.log(\"test\");\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 25\n                  }, this)\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          justify: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            span: 24,\n            children: /*#__PURE__*/_jsxDEV(Title, {\n              level: 3,\n              style: {\n                textAlign: \"center\",\n                marginTop: \"1rem\"\n              },\n              children: currentImageObject.image_position\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            span: 24,\n            children: /*#__PURE__*/_jsxDEV(Tabs, {\n              defaultActiveKey: \"1\",\n              onChange: callback,\n              children: [/*#__PURE__*/_jsxDEV(TabPane, {\n                tab: \"Items\",\n                children: imageAreas.map((item, i) => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Row, {\n                      justify: \"space-between\",\n                      children: [/*#__PURE__*/_jsxDEV(Col, {\n                        children: [i + 1, \".\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n                          href: `${item.href}`,\n                          target: \"_blank\",\n                          rel: \"noopener noreferrer\",\n                          children: item.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 364,\n                          columnNumber: 29\n                        }, this)]\n                      }, i, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 362,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(EyeOutlined, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 372,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 361,\n                      columnNumber: 25\n                    }, this), i !== imageAreas.length - 1 ? /*#__PURE__*/_jsxDEV(Divider, {\n                      orientation: \"left\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 375,\n                      columnNumber: 27\n                    }, this) : \"\"]\n                  }, i, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 23\n                  }, this);\n                })\n              }, \"1\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                tab: \"Description\",\n                children: getSetUpInfo[0].setup_description\n              }, \"2\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                tab: \"Comments\",\n                children: \"Content of Tab Pane 3\"\n              }, \"3\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\nexport const getServerSideProps = async context => {\n  const {\n    id\n  } = context.query;\n  const response = await axios.get(`${process.env.BASE_API}/setup/${id}`);\n  const setUpPageData = await response.data;\n  return {\n    props: setUpPageData\n  };\n};","map":{"version":3,"sources":["/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/setup/[id].tsx"],"names":["React","useEffect","useState","Layout","v4","uuidv4","axios","Row","Col","PageHeader","Typography","ImageMapper","Carousel","Tabs","Divider","HeartTwoTone","EyeOutlined","styles","ImageOneMapContainer","ImageTwoMapContainer","ImageThreeMapContainer","Link","Title","TabPane","SetupPage","props","currentImageView","setImageView","currentImageObject","setImageObject","currentImageItems","setImageItems","isActive","setActiveStatus","imageAreas","setImageAreas","getSetUpInfo","getImageItems","fillColor","setFillColor","console","log","length","carouselRef","current","goTo","setDataPageInfo","resetCurrentImageAreas","createCurrentImageAreasList","filteredImageObject","filter","imageObject","i","image_position","currentItems","item","image_id","createMapAreas","map","currentList","addToAreaList","push","createArea","id","item_id","name","item_name","shape","coords","coords_list","href","item_url","preFillColor","MAP","areas","MAP2","onChange","a","callback","key","createRef","username","setup_title","setupPageContainer","textAlign","src","lineWidth","strokeColor","image_url","area","e","sort","b","image_position_number","marginTop","setup_description","getServerSideProps","context","query","response","get","process","env","BASE_API","setUpPageData","data"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,GADF,EAEEC,GAFF,EAOEC,UAPF,EAQEC,UARF,QAWO,MAXP;AAaA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAASC,QAAT,EAAmBC,IAAnB,EAAyBC,OAAzB,QAAwC,MAAxC;AACA,SAAuBC,YAAvB,EAAqCC,WAArC,QAAwD,mBAAxD;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,oBAAP,MAAiC,0DAAjC;AACA,OAAOC,oBAAP,MAAiC,0DAAjC;AACA,OAAOC,sBAAP,MAAmC,4DAAnC;AAEA,MAAM;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,IAAkBZ,UAAxB;AACA,MAAM;AAAEa,EAAAA;AAAF,IAAcV,IAApB;AAMA,eAAe,SAASW,SAAT,CAAmBC,KAAnB,EAAiC;AAC9C,QAAM;AAAA,OAACC,gBAAD;AAAA,OAAmBC;AAAnB,MAAmCzB,QAAQ,CAAS,MAAT,CAAjD;AACA,QAAM;AAAA,OAAC0B,kBAAD;AAAA,OAAqBC;AAArB,MAAuC3B,QAAQ,CAAS,EAAT,CAArD;AACA,QAAM;AAAA,OAAC4B,iBAAD;AAAA,OAAoBC;AAApB,MAAqC7B,QAAQ,CAAC,EAAD,CAAnD;AACA,QAAM;AAAA,OAAC8B,QAAD;AAAA,OAAWC;AAAX,MAA8B/B,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM;AAAA,OAACgC,UAAD;AAAA,OAAaC;AAAb,MAA8BjC,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM;AAAEkC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAkCZ,KAAxC;AACA,QAAM;AAAA,OAACa,SAAD;AAAA,OAAYC;AAAZ,MAA4BrC,QAAQ,CAAC,EAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACduC,IAAAA,OAAO,CAACC,GAAR,CAAYhB,KAAZ;;AACA,QAAIW,YAAY,CAACM,MAAb,GAAsB,CAA1B,EAA6B;AAC3BC,MAAAA,WAAW,CAACC,OAAZ,CAAoBC,IAApB,CAAyB,CAAzB,EAA4B,IAA5B;AACD;AACF,GALQ,EAKN,EALM,CAAT;AAMA5C,EAAAA,SAAS,CAAC,MAAM;AACd6C,IAAAA,eAAe;AACfC,IAAAA,sBAAsB;AACvB,GAHQ,EAGN,CAACrB,gBAAD,CAHM,CAAT;AAKAzB,EAAAA,SAAS,CAAC,MAAM;AACd6C,IAAAA,eAAe;AACfE,IAAAA,2BAA2B;AAC5B,GAHQ,EAGN,CAACpB,kBAAD,CAHM,CAAT;;AAKA,QAAMkB,eAAe,GAAG,YAAY;AAClC,UAAMG,mBAAmB,GAAGb,YAAY,CAACc,MAAb,CAAoB,CAACC,WAAD,EAAcC,CAAd,KAAoB;AAClE,aAAOD,WAAW,CAACE,cAAZ,KAA+B3B,gBAAtC;AACD,KAF2B,CAA5B;AAGAG,IAAAA,cAAc,CAACoB,mBAAmB,CAAC,CAAD,CAApB,CAAd,CAJkC,CAKlC;;AACA,UAAMK,YAAY,GAAG,MAAMjB,aAAa,CAACa,MAAd,CAAqB,CAACK,IAAD,EAAOH,CAAP,KAAa;AAC3D,aAAOG,IAAI,CAACC,QAAL,KAAkBP,mBAAmB,CAAC,CAAD,CAAnB,CAAuBO,QAAhD;AACD,KAF0B,CAA3B;AAGAzB,IAAAA,aAAa,CAACuB,YAAD,CAAb;AACD,GAVD;;AAWA,QAAMN,2BAA2B,GAAG,YAAY;AAC9C,UAAMS,cAAc,GAAG,MAAMpB,aAAa,CAACqB,GAAd,CAAkB,CAACH,IAAD,EAAOH,CAAP,KAAa;AAC1D,UAAIO,WAAW,GAAGzB,UAAlB;;AACA,UAAIqB,IAAI,CAACC,QAAL,KAAkB5B,kBAAkB,CAAC4B,QAAzC,EAAmD;AACjD,cAAMI,aAAa,GAAGD,WAAW,CAACE,IAAZ,CAAiBC,UAAU,CAACP,IAAD,CAA3B,CAAtB;AACAf,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBP,UAApB;AACD;;AACDC,MAAAA,aAAa,CAACwB,WAAD,CAAb;AACD,KAP4B,CAA7B;AAQD,GATD;;AAWA,QAAMG,UAAU,GAAIP,IAAD,IAAU;AAC3B,WAAO;AACLQ,MAAAA,EAAE,EAAER,IAAI,CAACS,OADJ;AAELC,MAAAA,IAAI,EAAEV,IAAI,CAACW,SAFN;AAGLC,MAAAA,KAAK,EAAE,MAHF;AAILC,MAAAA,MAAM,EAAE,CAAC,GAAGb,IAAI,CAACc,WAAT,CAJH;AAKLC,MAAAA,IAAI,EAAEf,IAAI,CAACgB,QALN;AAMLC,MAAAA,YAAY,EAAE;AANT,KAAP;AAQD,GATD;;AAWA,QAAMzB,sBAAsB,GAAG,MAAM;AACnC0B,IAAAA,GAAG,CAACC,KAAJ,GAAY,EAAZ;AACAvC,IAAAA,aAAa,CAAC,EAAD,CAAb;AACD,GAHD;;AAIA,MAAIsC,GAAG,GAAG;AACRR,IAAAA,IAAI,EAAE5D,MAAM,EADJ;AAERqE,IAAAA,KAAK,EAAE,CAAC,GAAGxC,UAAJ;AAFC,GAAV;AAIA,MAAIyC,IAAI,GAAG;AACTV,IAAAA,IAAI,EAAE5D,MAAM,EADH;AAETqE,IAAAA,KAAK,EAAE,CAAC,GAAGxC,UAAJ;AAFE,GAAX;;AAKA,WAAS0C,QAAT,CAAkBC,CAAlB,EAAqB;AACnBlD,IAAAA,YAAY,CAACS,YAAY,CAACyC,CAAD,CAAZ,CAAgBxB,cAAjB,CAAZ;AACD;;AACD,WAASyB,QAAT,CAAkBC,GAAlB,EAAuB;AACrBvC,IAAAA,OAAO,CAACC,GAAR,CAAYsC,GAAZ;AACD;;AAED,QAAMpC,WAAW,gBAAG3C,KAAK,CAACgF,SAAN,EAApB;AACAxC,EAAAA,OAAO,CAACC,GAAR,CAAYb,kBAAZ;AAEA,sBACE,QAAC,MAAD;AACE,IAAA,KAAK,EAAG,GAAEQ,YAAY,CAAC,CAAD,CAAZ,CAAgB6C,QAAS,MAAK7C,YAAY,CAAC,CAAD,CAAZ,CAAgB8C,WAAY,QADtE;AAAA,2BAGE;AAAK,MAAA,EAAE,EAAEjE,MAAM,CAACkE,kBAAhB;AAAA,6BACE;AAAA,gCACE,QAAC,GAAD;AAAK,UAAA,OAAO,EAAC,QAAb;AAAA,iCACE,QAAC,GAAD;AAAK,YAAA,IAAI,EAAE,EAAX;AAAA,mCACE,QAAC,KAAD;AAAO,cAAA,KAAK,EAAE,CAAd;AAAiB,cAAA,KAAK,EAAE;AAAEC,gBAAAA,SAAS,EAAE;AAAb,eAAxB;AAAA,wBACGhD,YAAY,CAAC,CAAD,CAAZ,CAAgB8C;AADnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,GAAD;AAAK,UAAA,OAAO,EAAC,QAAb;AAAA,iCACE,QAAC,GAAD;AAAK,YAAA,IAAI,EAAE,EAAX;AAAA,mCACE,QAAC,UAAD;AACE,cAAA,KAAK,EAAG,GAAE9C,YAAY,CAAC,CAAD,CAAZ,CAAgB6C,QAAS,EADrC;AAEE,cAAA,KAAK,eAAE,QAAC,YAAD;AAAc,gBAAA,YAAY,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,sBAFT;AAGE,cAAA,MAAM,EAAE;AACNI,gBAAAA,GAAG,EAAE;AADC;AAHV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBARF,eAmBE,QAAC,oBAAD;AACE,UAAA,IAAI,EAAEjD,YAAY,CAAC,CAAD,CAAZ,CAAgBoB,QADxB;AAEE,UAAA,IAAI,EAAE,CACJ;AACES,YAAAA,IAAI,EAAE,GADR;AAEEE,YAAAA,KAAK,EAAE,MAFT;AAGEC,YAAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB,EAA4B,GAA5B,EAAiC,EAAjC,CAHV;AAIEI,YAAAA,YAAY,EAAE,OAJhB;AAKElC,YAAAA,SAAS,EAAE;AALb,WADI,EAQJ;AACE2B,YAAAA,IAAI,EAAE,GADR;AAEEE,YAAAA,KAAK,EAAE,MAFT;AAGEC,YAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,CAHV;AAIEI,YAAAA,YAAY,EAAE,MAJhB;AAKEc,YAAAA,SAAS,EAAE,EALb;AAMEC,YAAAA,WAAW,EAAE;AANf,WARI,EAgBJ;AACEtB,YAAAA,IAAI,EAAE,GADR;AAEEE,YAAAA,KAAK,EAAE,MAFT;AAGEC,YAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,EAAhB,EAAoB,GAApB,EAAyB,EAAzB,EAA6B,GAA7B,EAAkC,GAAlC,CAHV;AAIEI,YAAAA,YAAY,EAAE,QAJhB;AAI0B;AACxBc,YAAAA,SAAS,EAAE,EALb;AAMEC,YAAAA,WAAW,EAAE;AANf,WAhBI,EAwBJ;AACEtB,YAAAA,IAAI,EAAE,GADR;AAEEE,YAAAA,KAAK,EAAE,MAFT;AAGEC,YAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,CAHV;AAIEI,YAAAA,YAAY,EAAE;AAJhB,WAxBI,EA8BJ;AACEP,YAAAA,IAAI,EAAE,GADR;AAEEE,YAAAA,KAAK,EAAE,QAFT;AAGEC,YAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,EAAX,CAHV;AAIEI,YAAAA,YAAY,EAAE,sBAJhB;AAKEc,YAAAA,SAAS,EAAE;AALb,WA9BI,EAqCJ;AACErB,YAAAA,IAAI,EAAE,GADR;AAEEE,YAAAA,KAAK,EAAE,MAFT;AAGEC,YAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,EAAhB,CAHV;AAIEkB,YAAAA,SAAS,EAAE,CAJb;AAKEd,YAAAA,YAAY,EAAE,0BALhB;AAMEe,YAAAA,WAAW,EAAE;AANf,WArCI;AAFR;AAAA;AAAA;AAAA;AAAA,gBAnBF,eAoEE,QAAC,oBAAD;AACE,UAAA,IAAI,EAAEnD,YAAY,CAAC,CAAD,CAAZ,CAAgBoB,QADxB;AAEE,UAAA,IAAI,EAAE,CACJ;AACES,YAAAA,IAAI,EAAE,GADR;AAEEE,YAAAA,KAAK,EAAE,MAFT;AAGEC,YAAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB,EAA4B,GAA5B,EAAiC,EAAjC,CAHV;AAIEI,YAAAA,YAAY,EAAE,OAJhB;AAKElC,YAAAA,SAAS,EAAE;AALb,WADI,EAQJ;AACE2B,YAAAA,IAAI,EAAE,GADR;AAEEE,YAAAA,KAAK,EAAE,MAFT;AAGEC,YAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,CAHV;AAIEI,YAAAA,YAAY,EAAE,MAJhB;AAKEc,YAAAA,SAAS,EAAE,EALb;AAMEC,YAAAA,WAAW,EAAE;AANf,WARI,EAgBJ;AACEtB,YAAAA,IAAI,EAAE,GADR;AAEEE,YAAAA,KAAK,EAAE,MAFT;AAGEC,YAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,EAAhB,EAAoB,GAApB,EAAyB,EAAzB,EAA6B,GAA7B,EAAkC,GAAlC,CAHV;AAIEI,YAAAA,YAAY,EAAE,QAJhB;AAI0B;AACxBc,YAAAA,SAAS,EAAE,EALb;AAMEC,YAAAA,WAAW,EAAE;AANf,WAhBI,EAwBJ;AACEtB,YAAAA,IAAI,EAAE,GADR;AAEEE,YAAAA,KAAK,EAAE,MAFT;AAGEC,YAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,CAHV;AAIEI,YAAAA,YAAY,EAAE;AAJhB,WAxBI,EA8BJ;AACEP,YAAAA,IAAI,EAAE,GADR;AAEEE,YAAAA,KAAK,EAAE,QAFT;AAGEC,YAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,EAAX,CAHV;AAIEI,YAAAA,YAAY,EAAE,sBAJhB;AAKEc,YAAAA,SAAS,EAAE;AALb,WA9BI,EAqCJ;AACErB,YAAAA,IAAI,EAAE,GADR;AAEEE,YAAAA,KAAK,EAAE,MAFT;AAGEC,YAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,EAAhB,CAHV;AAIEkB,YAAAA,SAAS,EAAE,CAJb;AAKEd,YAAAA,YAAY,EAAE,0BALhB;AAMEe,YAAAA,WAAW,EAAE;AANf,WArCI;AAFR;AAAA;AAAA;AAAA;AAAA,gBApEF,eAqHE,QAAC,sBAAD;AACE,UAAA,IAAI,EAAElF,MAAM,EADd;AAEE,UAAA,IAAI,EAAE,CACJ;AACE4D,YAAAA,IAAI,EAAE,GADR;AAEEE,YAAAA,KAAK,EAAE,MAFT;AAGEC,YAAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB,EAA4B,GAA5B,EAAiC,EAAjC,CAHV;AAIEI,YAAAA,YAAY,EAAE,OAJhB;AAKElC,YAAAA,SAAS,EAAE;AALb,WADI,EAQJ;AACE2B,YAAAA,IAAI,EAAE,GADR;AAEEE,YAAAA,KAAK,EAAE,MAFT;AAGEC,YAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,CAHV;AAIEI,YAAAA,YAAY,EAAE,MAJhB;AAKEc,YAAAA,SAAS,EAAE,EALb;AAMEC,YAAAA,WAAW,EAAE;AANf,WARI,EAgBJ;AACEtB,YAAAA,IAAI,EAAE,GADR;AAEEE,YAAAA,KAAK,EAAE,MAFT;AAGEC,YAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,EAAhB,EAAoB,GAApB,EAAyB,EAAzB,EAA6B,GAA7B,EAAkC,GAAlC,CAHV;AAIEI,YAAAA,YAAY,EAAE,QAJhB;AAI0B;AACxBc,YAAAA,SAAS,EAAE,EALb;AAMEC,YAAAA,WAAW,EAAE;AANf,WAhBI,EAwBJ;AACEtB,YAAAA,IAAI,EAAE,GADR;AAEEE,YAAAA,KAAK,EAAE,MAFT;AAGEC,YAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,CAHV;AAIEI,YAAAA,YAAY,EAAE;AAJhB,WAxBI,EA8BJ;AACEP,YAAAA,IAAI,EAAE,GADR;AAEEE,YAAAA,KAAK,EAAE,QAFT;AAGEC,YAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,EAAX,CAHV;AAIEI,YAAAA,YAAY,EAAE,sBAJhB;AAKEc,YAAAA,SAAS,EAAE;AALb,WA9BI,EAqCJ;AACErB,YAAAA,IAAI,EAAE,GADR;AAEEE,YAAAA,KAAK,EAAE,MAFT;AAGEC,YAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,EAAhB,CAHV;AAIEkB,YAAAA,SAAS,EAAE,CAJb;AAKEd,YAAAA,YAAY,EAAE,0BALhB;AAMEe,YAAAA,WAAW,EAAE;AANf,WArCI;AAFR;AAAA;AAAA;AAAA;AAAA,gBArHF,eAsKE;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,WAAW,EAAEX,QAAvB;AAAiC,YAAA,GAAG,EAAEjC,WAAtC;AAAA,oCACE,QAAC,WAAD;AACE,cAAA,GAAG,EAAG,GAAEP,YAAY,CAAC,CAAD,CAAZ,CAAgBoD,SAAU,EADpC;AAEE,cAAA,GAAG,EAAEf,GAFP;AAGE,cAAA,KAAK,EAAE,GAHT;AAIE,cAAA,MAAM,EAAE,GAJV;AAKE,cAAA,SAAS,EAAE,KALb;AAME,cAAA,YAAY,EAAGgB,IAAD,IAAe;AAC3BjD,gBAAAA,OAAO,CAACC,GAAR,CAAYgD,IAAZ;AACD,eARH;AASE,cAAA,YAAY,EAAGC,CAAD,IAAY;AACxBlD,gBAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD;AAXH;AAAA;AAAA;AAAA;AAAA,oBADF,eAcE,QAAC,WAAD;AACE,cAAA,GAAG,EAAG,GAAEL,YAAY,CAAC,CAAD,CAAZ,CAAgBoD,SAAU,EADpC;AAEE,cAAA,GAAG,EAAEb,IAFP;AAGE,cAAA,KAAK,EAAE,GAHT;AAIE,cAAA,MAAM,EAAE,GAJV;AAKE,cAAA,SAAS,EAAE,KALb;AAME,cAAA,YAAY,EAAGc,IAAD,IAAe;AAC3BjD,gBAAAA,OAAO,CAACC,GAAR,CAAYgD,IAAZ;AACD,eARH;AASE,cAAA,YAAY,EAAGC,CAAD,IAAY;AACxBlD,gBAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD;AAXH;AAAA;AAAA;AAAA;AAAA,oBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAtKF,eAoME,QAAC,GAAD;AAAK,UAAA,OAAO,EAAC,QAAb;AAAA,iCACE,QAAC,GAAD;AAAK,YAAA,IAAI,EAAE,EAAX;AAAA,mCACE,QAAC,QAAD;AAAU,cAAA,WAAW,EAAEmC,QAAvB;AAAiC,cAAA,GAAG,EAAEjC,WAAtC;AAAA,wBACGP,YAAY,CACVuD,IADF,CACO,CAACd,CAAD,EAAIe,CAAJ,KACJf,CAAC,CAACgB,qBAAF,GAA0BD,CAAC,CAACC,qBAA5B,GAAoD,CAApD,GAAwD,CAAC,CAF5D,EAIEnC,GAJF,CAIM,CAACH,IAAD,EAAOH,CAAP,KAAa;AAChB,oCACE;AAAA,yCACE,QAAC,WAAD;AACE,oBAAA,GAAG,EAAEG,IAAI,CAACiC,SADZ;AAEE,oBAAA,GAAG,EAAEf,GAFP;AAGE,oBAAA,SAAS,EAAE,KAHb;AAIE,oBAAA,KAAK,EAAE,GAJT;AAKE,oBAAA,MAAM,EAAE,GALV;AAME,oBAAA,YAAY,EAAGgB,IAAD,IAAe;AAC3BjD,sBAAAA,OAAO,CAACC,GAAR,CAAYgD,IAAZ;AACD,qBARH;AASE,oBAAA,YAAY,EAAGC,CAAD,IAAY;AACxBlD,sBAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD;AAXH;AAAA;AAAA;AAAA;AAAA;AADF,mBAAUW,CAAV;AAAA;AAAA;AAAA;AAAA,wBADF;AAiBD,eAtBF;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBApMF,eAiOE,QAAC,GAAD;AAAK,UAAA,OAAO,EAAC,QAAb;AAAA,iCACE,QAAC,GAAD;AAAK,YAAA,IAAI,EAAE,EAAX;AAAA,mCACE,QAAC,KAAD;AACE,cAAA,KAAK,EAAE,CADT;AAEE,cAAA,KAAK,EAAE;AAAEgC,gBAAAA,SAAS,EAAE,QAAb;AAAuBU,gBAAAA,SAAS,EAAE;AAAlC,eAFT;AAAA,wBAIGlE,kBAAkB,CAACyB;AAJtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAjOF,eA2OE,QAAC,GAAD;AAAA,iCACE,QAAC,GAAD;AAAK,YAAA,IAAI,EAAE,EAAX;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,gBAAgB,EAAC,GAAvB;AAA2B,cAAA,QAAQ,EAAEyB,QAArC;AAAA,sCACE,QAAC,OAAD;AAAS,gBAAA,GAAG,EAAC,OAAb;AAAA,0BACG5C,UAAU,CAACwB,GAAX,CAAe,CAACH,IAAD,EAAOH,CAAP,KAAa;AAC3B,sCACE;AAAA,4CACE,QAAC,GAAD;AAAK,sBAAA,OAAO,EAAC,eAAb;AAAA,8CACE,QAAC,GAAD;AAAA,mCACGA,CAAC,GAAG,CADP,OACW,GADX,eAEE,QAAC,IAAD;AACE,0BAAA,IAAI,EAAG,GAAEG,IAAI,CAACe,IAAK,EADrB;AAEE,0BAAA,MAAM,EAAC,QAFT;AAGE,0BAAA,GAAG,EAAC,qBAHN;AAAA,oCAKGf,IAAI,CAACU;AALR;AAAA;AAAA;AAAA;AAAA,gCAFF;AAAA,yBAAUb,CAAV;AAAA;AAAA;AAAA;AAAA,8BADF,eAWE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,8BAXF;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAcGA,CAAC,KAAKlB,UAAU,CAACQ,MAAX,GAAoB,CAA1B,gBACC,QAAC,OAAD;AAAS,sBAAA,WAAW,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,4BADD,GAGC,EAjBJ;AAAA,qBAAUU,CAAV;AAAA;AAAA;AAAA;AAAA,0BADF;AAsBD,iBAvBA;AADH,iBAAyB,GAAzB;AAAA;AAAA;AAAA;AAAA,sBADF,eA2BE,QAAC,OAAD;AAAS,gBAAA,GAAG,EAAC,aAAb;AAAA,0BACGhB,YAAY,CAAC,CAAD,CAAZ,CAAgB2D;AADnB,iBAA+B,GAA/B;AAAA;AAAA;AAAA;AAAA,sBA3BF,eA8BE,QAAC,OAAD;AAAS,gBAAA,GAAG,EAAC,UAAb;AAAA;AAAA,iBAA4B,GAA5B;AAAA;AAAA;AAAA;AAAA,sBA9BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA3OF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,UADF;AA0RD;AAED,OAAO,MAAMC,kBAAsC,GAAG,MAAOC,OAAP,IAAmB;AACvE,QAAM;AAAElC,IAAAA;AAAF,MAASkC,OAAO,CAACC,KAAvB;AACA,QAAMC,QAAQ,GAAG,MAAM7F,KAAK,CAAC8F,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,QAAS,UAASxC,EAAG,EAA9C,CAAvB;AACA,QAAMyC,aAAa,GAAG,MAAML,QAAQ,CAACM,IAArC;AACA,SAAO;AACLhF,IAAAA,KAAK,EAAE+E;AADF,GAAP;AAGD,CAPM","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport axios from \"axios\";\nimport {\n  Row,\n  Col,\n  Form,\n  Input,\n  Button,\n  Checkbox,\n  PageHeader,\n  Typography,\n  Avatar,\n  Space,\n} from \"antd\";\nimport { GetServerSideProps } from \"next\";\nimport ImageMapper from \"react-image-mapper\";\nimport { Carousel, Tabs, Divider } from \"antd\";\nimport { UserOutlined, HeartTwoTone, EyeOutlined } from \"@ant-design/icons\";\nimport styles from \"./setupPage.module.scss\";\nimport ImageOneMapContainer from \"../../components/imageMapContainers/ImageOneMapContainer\";\nimport ImageTwoMapContainer from \"../../components/imageMapContainers/ImageTwoMapContainer\";\nimport ImageThreeMapContainer from \"../../components/imageMapContainers/ImageThreeMapContainer\";\n\nconst { Link, Title } = Typography;\nconst { TabPane } = Tabs;\n\ninterface Props {\n  getSetUpInfo: Array<any>;\n}\n\nexport default function SetupPage(props: Props) {\n  const [currentImageView, setImageView] = useState<string>(\"Main\");\n  const [currentImageObject, setImageObject] = useState<object>({});\n  const [currentImageItems, setImageItems] = useState([]);\n  const [isActive, setActiveStatus] = useState(false);\n  const [imageAreas, setImageAreas] = useState([]);\n  const { getSetUpInfo, getImageItems } = props;\n  const [fillColor, setFillColor] = useState(\"\");\n\n  useEffect(() => {\n    console.log(props);\n    if (getSetUpInfo.length > 1) {\n      carouselRef.current.goTo(1, true);\n    }\n  }, []);\n  useEffect(() => {\n    setDataPageInfo();\n    resetCurrentImageAreas();\n  }, [currentImageView]);\n\n  useEffect(() => {\n    setDataPageInfo();\n    createCurrentImageAreasList();\n  }, [currentImageObject]);\n\n  const setDataPageInfo = async () => {\n    const filteredImageObject = getSetUpInfo.filter((imageObject, i) => {\n      return imageObject.image_position === currentImageView;\n    });\n    setImageObject(filteredImageObject[0]);\n    //shouldn't need this logic but items dont show without it\n    const currentItems = await getImageItems.filter((item, i) => {\n      return item.image_id === filteredImageObject[0].image_id;\n    });\n    setImageItems(currentItems);\n  };\n  const createCurrentImageAreasList = async () => {\n    const createMapAreas = await getImageItems.map((item, i) => {\n      let currentList = imageAreas;\n      if (item.image_id === currentImageObject.image_id) {\n        const addToAreaList = currentList.push(createArea(item));\n        console.log(\"test\", imageAreas);\n      }\n      setImageAreas(currentList);\n    });\n  };\n\n  const createArea = (item) => {\n    return {\n      id: item.item_id,\n      name: item.item_name,\n      shape: \"poly\",\n      coords: [...item.coords_list],\n      href: item.item_url,\n      preFillColor: \"transparent\",\n    };\n  };\n\n  const resetCurrentImageAreas = () => {\n    MAP.areas = [];\n    setImageAreas([]);\n  };\n  let MAP = {\n    name: uuidv4(),\n    areas: [...imageAreas],\n  };\n  let MAP2 = {\n    name: uuidv4(),\n    areas: [...imageAreas],\n  };\n\n  function onChange(a) {\n    setImageView(getSetUpInfo[a].image_position);\n  }\n  function callback(key) {\n    console.log(key);\n  }\n\n  const carouselRef = React.createRef();\n  console.log(currentImageObject);\n\n  return (\n    <Layout\n      title={`${getSetUpInfo[0].username}'s ${getSetUpInfo[0].setup_title} setup`}\n    >\n      <div id={styles.setupPageContainer}>\n        <div>\n          <Row justify=\"center\">\n            <Col span={24}>\n              <Title level={1} style={{ textAlign: \"center\" }}>\n                {getSetUpInfo[0].setup_title}\n              </Title>\n            </Col>\n          </Row>\n          <Row justify=\"center\">\n            <Col span={22}>\n              <PageHeader\n                title={`${getSetUpInfo[0].username}`}\n                extra={<HeartTwoTone twoToneColor=\"#eb2f96\" />}\n                avatar={{\n                  src: \"https://avatars1.githubusercontent.com/u/8186664?s=460&v=4\",\n                }}\n              />\n            </Col>\n          </Row>\n          <ImageOneMapContainer\n            name={getSetUpInfo[0].image_id}\n            area={[\n              {\n                name: \"1\",\n                shape: \"poly\",\n                coords: [25, 33, 27, 300, 128, 240, 128, 94],\n                preFillColor: \"green\",\n                fillColor: \"#0000ff\",\n              },\n              {\n                name: \"2\",\n                shape: \"poly\",\n                coords: [219, 118, 220, 210, 283, 210, 284, 119],\n                preFillColor: \"pink\",\n                lineWidth: 10,\n                strokeColor: \"#0000ff\",\n              },\n              {\n                name: \"3\",\n                shape: \"poly\",\n                coords: [381, 241, 383, 94, 462, 53, 457, 282],\n                preFillColor: \"yellow\", // this is mandatory for stroke color to work\n                lineWidth: 10,\n                strokeColor: \"#6afd09\",\n              },\n              {\n                name: \"4\",\n                shape: \"poly\",\n                coords: [245, 285, 290, 285, 274, 239, 249, 238],\n                preFillColor: \"red\",\n              },\n              {\n                name: \"5\",\n                shape: \"circle\",\n                coords: [170, 100, 25],\n                preFillColor: \"rgb(255,255,255,0.3)\",\n                lineWidth: 2,\n              },\n              {\n                name: \"6\",\n                shape: \"rect\",\n                coords: [270, 100, 200, 50],\n                lineWidth: 2,\n                preFillColor: \"rgba(255, 255, 255, 0.3)\",\n                strokeColor: \"#6afd09\",\n              },\n            ]}\n          />\n          <ImageTwoMapContainer\n            name={getSetUpInfo[1].image_id}\n            area={[\n              {\n                name: \"1\",\n                shape: \"poly\",\n                coords: [25, 33, 27, 300, 128, 240, 128, 94],\n                preFillColor: \"green\",\n                fillColor: \"#0000ff\",\n              },\n              {\n                name: \"2\",\n                shape: \"poly\",\n                coords: [219, 118, 220, 210, 283, 210, 284, 119],\n                preFillColor: \"pink\",\n                lineWidth: 10,\n                strokeColor: \"#0000ff\",\n              },\n              {\n                name: \"3\",\n                shape: \"poly\",\n                coords: [381, 241, 383, 94, 462, 53, 457, 282],\n                preFillColor: \"yellow\", // this is mandatory for stroke color to work\n                lineWidth: 10,\n                strokeColor: \"#6afd09\",\n              },\n              {\n                name: \"4\",\n                shape: \"poly\",\n                coords: [245, 285, 290, 285, 274, 239, 249, 238],\n                preFillColor: \"red\",\n              },\n              {\n                name: \"5\",\n                shape: \"circle\",\n                coords: [170, 100, 25],\n                preFillColor: \"rgb(255,255,255,0.3)\",\n                lineWidth: 2,\n              },\n              {\n                name: \"6\",\n                shape: \"rect\",\n                coords: [270, 100, 200, 50],\n                lineWidth: 2,\n                preFillColor: \"rgba(255, 255, 255, 0.3)\",\n                strokeColor: \"#6afd09\",\n              },\n            ]}\n          />\n          <ImageThreeMapContainer\n            name={uuidv4()}\n            area={[\n              {\n                name: \"1\",\n                shape: \"poly\",\n                coords: [25, 33, 27, 300, 128, 240, 128, 94],\n                preFillColor: \"green\",\n                fillColor: \"#0000ff\",\n              },\n              {\n                name: \"2\",\n                shape: \"poly\",\n                coords: [219, 118, 220, 210, 283, 210, 284, 119],\n                preFillColor: \"pink\",\n                lineWidth: 10,\n                strokeColor: \"#0000ff\",\n              },\n              {\n                name: \"3\",\n                shape: \"poly\",\n                coords: [381, 241, 383, 94, 462, 53, 457, 282],\n                preFillColor: \"yellow\", // this is mandatory for stroke color to work\n                lineWidth: 10,\n                strokeColor: \"#6afd09\",\n              },\n              {\n                name: \"4\",\n                shape: \"poly\",\n                coords: [245, 285, 290, 285, 274, 239, 249, 238],\n                preFillColor: \"red\",\n              },\n              {\n                name: \"5\",\n                shape: \"circle\",\n                coords: [170, 100, 25],\n                preFillColor: \"rgb(255,255,255,0.3)\",\n                lineWidth: 2,\n              },\n              {\n                name: \"6\",\n                shape: \"rect\",\n                coords: [270, 100, 200, 50],\n                lineWidth: 2,\n                preFillColor: \"rgba(255, 255, 255, 0.3)\",\n                strokeColor: \"#6afd09\",\n              },\n            ]}\n          />\n          <div>\n            <Carousel afterChange={onChange} ref={carouselRef}>\n              <ImageMapper\n                src={`${getSetUpInfo[0].image_url}`}\n                map={MAP}\n                width={375}\n                height={350}\n                fillColor={\"red\"}\n                onMouseEnter={(area: any) => {\n                  console.log(area);\n                }}\n                onImageClick={(e: any) => {\n                  console.log(\"test\");\n                }}\n              />\n              <ImageMapper\n                src={`${getSetUpInfo[0].image_url}`}\n                map={MAP2}\n                width={375}\n                height={350}\n                fillColor={\"red\"}\n                onMouseEnter={(area: any) => {\n                  console.log(area);\n                }}\n                onImageClick={(e: any) => {\n                  console.log(\"test\");\n                }}\n              />\n            </Carousel>\n          </div>\n          <Row justify=\"center\">\n            <Col span={24}>\n              <Carousel afterChange={onChange} ref={carouselRef}>\n                {getSetUpInfo\n                  .sort((a, b) =>\n                    a.image_position_number > b.image_position_number ? 1 : -1\n                  )\n                  .map((item, i) => {\n                    return (\n                      <div key={i}>\n                        <ImageMapper\n                          src={item.image_url}\n                          map={MAP}\n                          fillColor={\"red\"}\n                          width={375}\n                          height={350}\n                          onMouseEnter={(area: any) => {\n                            console.log(area);\n                          }}\n                          onImageClick={(e: any) => {\n                            console.log(\"test\");\n                          }}\n                        />\n                      </div>\n                    );\n                  })}\n              </Carousel>\n            </Col>\n          </Row>\n          <Row justify=\"center\">\n            <Col span={24}>\n              <Title\n                level={3}\n                style={{ textAlign: \"center\", marginTop: \"1rem\" }}\n              >\n                {currentImageObject.image_position}\n              </Title>\n            </Col>\n          </Row>\n          <Row>\n            <Col span={24}>\n              <Tabs defaultActiveKey=\"1\" onChange={callback}>\n                <TabPane tab=\"Items\" key=\"1\">\n                  {imageAreas.map((item, i) => {\n                    return (\n                      <div key={i}>\n                        <Row justify=\"space-between\">\n                          <Col key={i}>\n                            {i + 1}.{\" \"}\n                            <Link\n                              href={`${item.href}`}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              {item.name}\n                            </Link>\n                          </Col>\n                          <EyeOutlined />\n                        </Row>\n                        {i !== imageAreas.length - 1 ? (\n                          <Divider orientation=\"left\" />\n                        ) : (\n                          \"\"\n                        )}\n                      </div>\n                    );\n                  })}\n                </TabPane>\n                <TabPane tab=\"Description\" key=\"2\">\n                  {getSetUpInfo[0].setup_description}\n                </TabPane>\n                <TabPane tab=\"Comments\" key=\"3\">\n                  Content of Tab Pane 3\n                </TabPane>\n              </Tabs>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport const getServerSideProps: GetServerSideProps = async (context) => {\n  const { id } = context.query;\n  const response = await axios.get(`${process.env.BASE_API}/setup/${id}`);\n  const setUpPageData = await response.data;\n  return {\n    props: setUpPageData,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}