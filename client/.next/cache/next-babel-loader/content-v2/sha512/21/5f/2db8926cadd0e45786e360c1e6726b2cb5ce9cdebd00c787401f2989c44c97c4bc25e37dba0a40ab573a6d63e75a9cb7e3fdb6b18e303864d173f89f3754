{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/login.tsx\";\nimport { Row, Col, Form, Input, Button, Checkbox } from \"antd\";\nimport axios from \"axios\";\nexport default function LoginPage() {\n  const userLogin = async values => {\n    const {\n      email,\n      password\n    } = values;\n\n    try {\n      const getUser = await axios.post(\"http://localhost:5000/user/login\", {\n        email,\n        password\n      }, {\n        withCredentials: true\n      });\n      const response = await getUser;\n      return {\n        redirect: {\n          permanent: false,\n          destination: \"/\"\n        }\n      };\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const test = async () => {\n    const getTest = await axios.get(\"http://localhost:5000/user/test\", {\n      withCredentials: true\n    });\n    const data = getTest;\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      justify: \"center\",\n      align: \"middle\",\n      style: {\n        minHeight: \"100vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: {\n          span: 20\n        },\n        sm: {\n          span: 12\n        },\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          name: \"login\",\n          initialValues: {\n            remember: true\n          },\n          onFinish: userLogin // onFinishFailed={onFinishFailed}\n          ,\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Email\",\n            name: \"email\",\n            rules: [{\n              required: true,\n              message: \"Please input your email address\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Password\",\n            name: \"password\",\n            rules: [{\n              required: true,\n              message: \"Please input your password\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"remember\",\n            valuePropName: \"checked\",\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              children: \"Remember me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: test,\n        children: \"test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/login.tsx"],"names":["Row","Col","Form","Input","Button","Checkbox","axios","LoginPage","userLogin","values","email","password","getUser","post","withCredentials","response","redirect","permanent","destination","e","console","log","test","getTest","get","data","minHeight","span","remember","required","message"],"mappings":"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","sourcesContent":["import { Row, Col, Form, Input, Button, Checkbox } from \"antd\";\nimport axios from \"axios\";\n\ninterface User {\n  email: string;\n  password: string;\n}\n\nexport default function LoginPage() {\n  const userLogin = async (values: User) => {\n    const { email, password } = values;\n    try {\n      const getUser = await axios.post(\n        \"http://localhost:5000/user/login\",\n        {\n          email,\n          password,\n        },\n        {\n          withCredentials: true,\n        }\n      );\n      const response = await getUser;\n      return {\n        redirect: {\n          permanent: false,\n          destination: \"/\",\n        },\n      };\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  const test = async () => {\n    const getTest = await axios.get(\"http://localhost:5000/user/test\", {\n      withCredentials: true,\n    });\n    const data = getTest;\n    console.log(data);\n  };\n  return (\n    <div id=\"container\">\n      <Row justify=\"center\" align=\"middle\" style={{ minHeight: \"100vh\" }}>\n        <Col xs={{ span: 20 }} sm={{ span: 12 }}>\n          <Form\n            name=\"login\"\n            initialValues={{ remember: true }}\n            onFinish={userLogin}\n            // onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              label=\"Email\"\n              name=\"email\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your email address\",\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Password\"\n              name=\"password\"\n              rules={[\n                { required: true, message: \"Please input your password\" },\n              ]}\n            >\n              <Input.Password />\n            </Form.Item>\n\n            <Form.Item name=\"remember\" valuePropName=\"checked\">\n              <Checkbox>Remember me</Checkbox>\n            </Form.Item>\n\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n        </Col>\n        <Button onClick={test}>test</Button>\n      </Row>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}