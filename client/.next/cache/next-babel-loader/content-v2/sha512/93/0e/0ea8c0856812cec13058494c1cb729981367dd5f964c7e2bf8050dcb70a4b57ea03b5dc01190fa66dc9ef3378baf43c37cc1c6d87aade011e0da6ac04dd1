{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/register.tsx\";\nimport { Row, Col, Form, Input, Button } from \"antd\";\nimport axios from \"axios\";\nexport default function RegisterPage() {\n  const userRegistration = async values => {\n    const {\n      first_name,\n      last_name,\n      username,\n      email,\n      password,\n      confrim_password\n    } = values;\n\n    if (password !== confrim_password) {\n      console.log(\"passwords dont match\");\n    } else {\n      const registerUser = await axios.post(\"http://localhost:5000/user/register\", {\n        first_name,\n        last_name,\n        username,\n        email,\n        password\n      });\n      const response = registerUser;\n      console.log(response);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      justify: \"center\",\n      align: \"middle\",\n      style: {\n        minHeight: \"100vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: {\n          span: 20\n        },\n        sm: {\n          span: 12\n        },\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          name: \"register\",\n          onFinish: userRegistration // onFinishFailed={onFinishFailed}\n          ,\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"First Name\",\n            name: \"first_name\",\n            rules: [{\n              required: true,\n              message: \"Please input your first name\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Last Name\",\n            name: \"last_name\",\n            rules: [{\n              required: true,\n              message: \"Please input your last name\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"User Name\",\n            name: \"username\",\n            rules: [{\n              required: true,\n              message: \"Please input your user name\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Email\",\n            name: \"email\",\n            rules: [{\n              required: true,\n              message: \"Please input your email address\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Password\",\n            name: \"password\",\n            rules: [{\n              required: true,\n              message: \"Please input your password\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Confirm Passwrod\",\n            name: \"confrim_password\",\n            rules: [{\n              required: true,\n              message: \"Please confirm your password\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/joshmcdaniel/Documents/work/repos/setup_share/pages/register.tsx"],"names":["Row","Col","Form","Input","Button","axios","RegisterPage","userRegistration","values","first_name","last_name","username","email","password","confrim_password","console","log","registerUser","post","response","minHeight","span","required","message"],"mappings":"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","sourcesContent":["import { Row, Col, Form, Input, Button, Checkbox, PageHeader } from \"antd\";\nimport axios from \"axios\";\n\nexport default function RegisterPage() {\n  interface User {\n    first_name: string;\n    last_name: string;\n    username: string;\n    email: string;\n    password: string;\n    confrim_password: string;\n  }\n\n  const userRegistration = async (values: User) => {\n    const {\n      first_name,\n      last_name,\n      username,\n      email,\n      password,\n      confrim_password,\n    } = values;\n    if (password !== confrim_password) {\n      console.log(\"passwords dont match\");\n    } else {\n      const registerUser = await axios.post(\n        \"http://localhost:5000/user/register\",\n        {\n          first_name,\n          last_name,\n          username,\n          email,\n          password,\n        }\n      );\n      const response = registerUser;\n      console.log(response);\n    }\n  };\n  return (\n    <div id=\"container\">\n      <Row justify=\"center\" align=\"middle\" style={{ minHeight: \"100vh\" }}>\n        <Col xs={{ span: 20 }} sm={{ span: 12 }}>\n          <Form\n            name=\"register\"\n            onFinish={userRegistration}\n            // onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              label=\"First Name\"\n              name=\"first_name\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your first name\",\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Last Name\"\n              name=\"last_name\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your last name\",\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              label=\"User Name\"\n              name=\"username\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your user name\",\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              label=\"Email\"\n              name=\"email\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your email address\",\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Password\"\n              name=\"password\"\n              rules={[\n                { required: true, message: \"Please input your password\" },\n              ]}\n            >\n              <Input.Password />\n            </Form.Item>\n            <Form.Item\n              label=\"Confirm Passwrod\"\n              name=\"confrim_password\"\n              rules={[\n                { required: true, message: \"Please confirm your password\" },\n              ]}\n            >\n              <Input.Password />\n            </Form.Item>\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}